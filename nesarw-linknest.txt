Directory structure:
└── nesarw-linknest/
    ├── client/
    │   ├── README.md
    │   ├── eslint.config.js
    │   ├── index.html
    │   ├── package-lock.json
    │   ├── package.json
    │   ├── vite.config.js
    │   ├── .gitignore
    │   ├── public/
    │   └── src/
    │       ├── App.jsx
    │       ├── app.css
    │       ├── main.jsx
    │       ├── assets/
    │       ├── pages/
    │       │   ├── intro.jsx
    │       │   ├── join.jsx
    │       │   ├── room.jsx
    │       │   └── rough.ts
    │       ├── redux/
    │       │   ├── rootReducer.js
    │       │   ├── store.js
    │       │   └── slices/
    │       │       └── app.js
    │       └── sections/
    │           ├── rooms/
    │           │   ├── chat.jsx
    │           │   ├── label.jsx
    │           │   ├── overlay.jsx
    │           │   ├── participants.jsx
    │           │   └── video.jsx
    │           └── utils/
    │               ├── api.js
    │               ├── webRTCHandler.js
    │               └── wss.js
    └── server/
        ├── package-lock.json
        ├── package.json
        ├── server.js
        └── node_modules/
            ├── .package-lock.json
            ├── @socket.io/
            │   └── component-emitter/
            │       ├── Readme.md
            │       ├── LICENSE
            │       ├── package.json
            │       └── lib/
            │           ├── cjs/
            │           │   ├── index.d.ts
            │           │   ├── index.js
            │           │   └── package.json
            │           └── esm/
            │               ├── index.d.ts
            │               ├── index.js
            │               └── package.json
            ├── @types/
            │   ├── cookie/
            │   │   ├── README.md
            │   │   ├── LICENSE
            │   │   ├── index.d.ts
            │   │   └── package.json
            │   ├── cors/
            │   │   ├── README.md
            │   │   ├── LICENSE
            │   │   ├── index.d.ts
            │   │   └── package.json
            │   └── node/
            │       ├── README.md
            │       ├── LICENSE
            │       ├── assert.d.ts
            │       ├── async_hooks.d.ts
            │       ├── buffer.buffer.d.ts
            │       ├── buffer.d.ts
            │       ├── child_process.d.ts
            │       ├── cluster.d.ts
            │       ├── console.d.ts
            │       ├── constants.d.ts
            │       ├── crypto.d.ts
            │       ├── dgram.d.ts
            │       ├── diagnostics_channel.d.ts
            │       ├── dns.d.ts
            │       ├── dom-events.d.ts
            │       ├── domain.d.ts
            │       ├── events.d.ts
            │       ├── fs.d.ts
            │       ├── globals.d.ts
            │       ├── globals.typedarray.d.ts
            │       ├── http.d.ts
            │       ├── http2.d.ts
            │       ├── https.d.ts
            │       ├── index.d.ts
            │       ├── inspector.d.ts
            │       ├── module.d.ts
            │       ├── net.d.ts
            │       ├── os.d.ts
            │       ├── package.json
            │       ├── path.d.ts
            │       ├── perf_hooks.d.ts
            │       ├── process.d.ts
            │       ├── punycode.d.ts
            │       ├── querystring.d.ts
            │       ├── readline.d.ts
            │       ├── repl.d.ts
            │       ├── sea.d.ts
            │       ├── sqlite.d.ts
            │       ├── stream.d.ts
            │       ├── string_decoder.d.ts
            │       ├── test.d.ts
            │       ├── timers.d.ts
            │       ├── tls.d.ts
            │       ├── trace_events.d.ts
            │       ├── tty.d.ts
            │       ├── url.d.ts
            │       ├── util.d.ts
            │       ├── v8.d.ts
            │       ├── vm.d.ts
            │       ├── wasi.d.ts
            │       ├── worker_threads.d.ts
            │       ├── zlib.d.ts
            │       ├── assert/
            │       │   └── strict.d.ts
            │       ├── compatibility/
            │       │   ├── disposable.d.ts
            │       │   ├── index.d.ts
            │       │   ├── indexable.d.ts
            │       │   └── iterators.d.ts
            │       ├── dns/
            │       │   └── promises.d.ts
            │       ├── fs/
            │       │   └── promises.d.ts
            │       ├── readline/
            │       │   └── promises.d.ts
            │       ├── stream/
            │       │   ├── consumers.d.ts
            │       │   ├── promises.d.ts
            │       │   └── web.d.ts
            │       ├── timers/
            │       │   └── promises.d.ts
            │       └── ts5.6/
            │           ├── buffer.buffer.d.ts
            │           ├── globals.typedarray.d.ts
            │           └── index.d.ts
            ├── accepts/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── agent-base/
            │   ├── README.md
            │   ├── package.json
            │   ├── dist/
            │   │   └── src/
            │   │       ├── index.d.ts
            │   │       ├── index.js
            │   │       ├── promisify.d.ts
            │   │       └── promisify.js
            │   ├── node_modules/
            │   │   ├── debug/
            │   │   │   ├── README.md
            │   │   │   ├── LICENSE
            │   │   │   ├── package.json
            │   │   │   └── src/
            │   │   │       ├── browser.js
            │   │   │       ├── common.js
            │   │   │       ├── index.js
            │   │   │       └── node.js
            │   │   └── ms/
            │   │       ├── readme.md
            │   │       ├── index.js
            │   │       ├── license.md
            │   │       └── package.json
            │   └── src/
            │       ├── index.ts
            │       └── promisify.ts
            ├── array-flatten/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── array-flatten.js
            │   └── package.json
            ├── asynckit/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── bench.js
            │   ├── index.js
            │   ├── package.json
            │   ├── parallel.js
            │   ├── serial.js
            │   ├── serialOrdered.js
            │   ├── stream.js
            │   └── lib/
            │       ├── abort.js
            │       ├── async.js
            │       ├── defer.js
            │       ├── iterate.js
            │       ├── readable_asynckit.js
            │       ├── readable_parallel.js
            │       ├── readable_serial.js
            │       ├── readable_serial_ordered.js
            │       ├── state.js
            │       ├── streamify.js
            │       └── terminator.js
            ├── axios/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── MIGRATION_GUIDE.md
            │   ├── SECURITY.md
            │   ├── index.d.cts
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── dist/
            │   │   ├── axios.js
            │   │   ├── browser/
            │   │   │   └── axios.cjs
            │   │   ├── esm/
            │   │   │   └── axios.js
            │   │   └── node/
            │   │       └── axios.cjs
            │   └── lib/
            │       ├── axios.js
            │       ├── utils.js
            │       ├── adapters/
            │       │   ├── README.md
            │       │   ├── adapters.js
            │       │   ├── fetch.js
            │       │   ├── http.js
            │       │   └── xhr.js
            │       ├── cancel/
            │       │   ├── CancelToken.js
            │       │   ├── CanceledError.js
            │       │   └── isCancel.js
            │       ├── core/
            │       │   ├── README.md
            │       │   ├── Axios.js
            │       │   ├── AxiosError.js
            │       │   ├── AxiosHeaders.js
            │       │   ├── InterceptorManager.js
            │       │   ├── buildFullPath.js
            │       │   ├── dispatchRequest.js
            │       │   ├── mergeConfig.js
            │       │   ├── settle.js
            │       │   └── transformData.js
            │       ├── defaults/
            │       │   ├── index.js
            │       │   └── transitional.js
            │       ├── env/
            │       │   ├── README.md
            │       │   ├── data.js
            │       │   └── classes/
            │       │       └── FormData.js
            │       ├── helpers/
            │       │   ├── README.md
            │       │   ├── AxiosTransformStream.js
            │       │   ├── AxiosURLSearchParams.js
            │       │   ├── HttpStatusCode.js
            │       │   ├── ZlibHeaderTransformStream.js
            │       │   ├── bind.js
            │       │   ├── buildURL.js
            │       │   ├── callbackify.js
            │       │   ├── combineURLs.js
            │       │   ├── composeSignals.js
            │       │   ├── cookies.js
            │       │   ├── deprecatedMethod.js
            │       │   ├── formDataToJSON.js
            │       │   ├── formDataToStream.js
            │       │   ├── fromDataURI.js
            │       │   ├── isAbsoluteURL.js
            │       │   ├── isAxiosError.js
            │       │   ├── isURLSameOrigin.js
            │       │   ├── null.js
            │       │   ├── parseHeaders.js
            │       │   ├── parseProtocol.js
            │       │   ├── progressEventReducer.js
            │       │   ├── readBlob.js
            │       │   ├── resolveConfig.js
            │       │   ├── speedometer.js
            │       │   ├── spread.js
            │       │   ├── throttle.js
            │       │   ├── toFormData.js
            │       │   ├── toURLEncodedForm.js
            │       │   ├── trackStream.js
            │       │   └── validator.js
            │       └── platform/
            │           ├── index.js
            │           ├── browser/
            │           │   ├── index.js
            │           │   └── classes/
            │           │       ├── Blob.js
            │           │       ├── FormData.js
            │           │       └── URLSearchParams.js
            │           ├── common/
            │           │   └── utils.js
            │           └── node/
            │               ├── index.js
            │               └── classes/
            │                   ├── FormData.js
            │                   └── URLSearchParams.js
            ├── base64id/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── package.json
            │   └── lib/
            │       └── base64id.js
            ├── body-parser/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── SECURITY.md
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       ├── read.js
            │       └── types/
            │           ├── json.js
            │           ├── raw.js
            │           ├── text.js
            │           └── urlencoded.js
            ├── buffer-equal-constant-time/
            │   ├── README.md
            │   ├── LICENSE.txt
            │   ├── index.js
            │   ├── package.json
            │   ├── test.js
            │   ├── .npmignore
            │   └── .travis.yml
            ├── bytes/
            │   ├── Readme.md
            │   ├── History.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── call-bind-apply-helpers/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── actualApply.d.ts
            │   ├── actualApply.js
            │   ├── applyBind.d.ts
            │   ├── applyBind.js
            │   ├── functionApply.d.ts
            │   ├── functionApply.js
            │   ├── functionCall.d.ts
            │   ├── functionCall.js
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── reflectApply.d.ts
            │   ├── reflectApply.js
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── call-bound/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── combined-stream/
            │   ├── Readme.md
            │   ├── License
            │   ├── package.json
            │   ├── yarn.lock
            │   └── lib/
            │       └── combined_stream.js
            ├── content-disposition/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── content-type/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── cookie/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── SECURITY.md
            │   ├── index.js
            │   └── package.json
            ├── cookie-signature/
            │   ├── Readme.md
            │   ├── History.md
            │   ├── index.js
            │   ├── package.json
            │   └── .npmignore
            ├── cors/
            │   ├── README.md
            │   ├── CONTRIBUTING.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── package.json
            │   └── lib/
            │       └── index.js
            ├── dayjs/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── locale.json
            │   ├── package.json
            │   ├── .editorconfig
            │   ├── esm/
            │   │   ├── constant.js
            │   │   ├── index.d.ts
            │   │   ├── index.js
            │   │   ├── utils.js
            │   │   ├── locale/
            │   │   │   ├── af.js
            │   │   │   ├── am.js
            │   │   │   ├── ar-dz.js
            │   │   │   ├── ar-iq.js
            │   │   │   ├── ar-kw.js
            │   │   │   ├── ar-ly.js
            │   │   │   ├── ar-ma.js
            │   │   │   ├── ar-sa.js
            │   │   │   ├── ar-tn.js
            │   │   │   ├── ar.js
            │   │   │   ├── az.js
            │   │   │   ├── be.js
            │   │   │   ├── bg.js
            │   │   │   ├── bi.js
            │   │   │   ├── bm.js
            │   │   │   ├── bn-bd.js
            │   │   │   ├── bn.js
            │   │   │   ├── bo.js
            │   │   │   ├── br.js
            │   │   │   ├── bs.js
            │   │   │   ├── ca.js
            │   │   │   ├── cs.js
            │   │   │   ├── cv.js
            │   │   │   ├── cy.js
            │   │   │   ├── da.js
            │   │   │   ├── de-at.js
            │   │   │   ├── de-ch.js
            │   │   │   ├── de.js
            │   │   │   ├── dv.js
            │   │   │   ├── el.js
            │   │   │   ├── en-au.js
            │   │   │   ├── en-ca.js
            │   │   │   ├── en-gb.js
            │   │   │   ├── en-ie.js
            │   │   │   ├── en-il.js
            │   │   │   ├── en-in.js
            │   │   │   ├── en-nz.js
            │   │   │   ├── en-sg.js
            │   │   │   ├── en-tt.js
            │   │   │   ├── en.js
            │   │   │   ├── eo.js
            │   │   │   ├── es-do.js
            │   │   │   ├── es-mx.js
            │   │   │   ├── es-pr.js
            │   │   │   ├── es-us.js
            │   │   │   ├── es.js
            │   │   │   ├── et.js
            │   │   │   ├── eu.js
            │   │   │   ├── fa.js
            │   │   │   ├── fi.js
            │   │   │   ├── fo.js
            │   │   │   ├── fr-ca.js
            │   │   │   ├── fr-ch.js
            │   │   │   ├── fr.js
            │   │   │   ├── fy.js
            │   │   │   ├── ga.js
            │   │   │   ├── gd.js
            │   │   │   ├── gl.js
            │   │   │   ├── gom-latn.js
            │   │   │   ├── gu.js
            │   │   │   ├── he.js
            │   │   │   ├── hi.js
            │   │   │   ├── hr.js
            │   │   │   ├── ht.js
            │   │   │   ├── hu.js
            │   │   │   ├── hy-am.js
            │   │   │   ├── id.js
            │   │   │   ├── index.d.ts
            │   │   │   ├── is.js
            │   │   │   ├── it-ch.js
            │   │   │   ├── it.js
            │   │   │   ├── ja.js
            │   │   │   ├── jv.js
            │   │   │   ├── ka.js
            │   │   │   ├── kk.js
            │   │   │   ├── km.js
            │   │   │   ├── kn.js
            │   │   │   ├── ko.js
            │   │   │   ├── ku.js
            │   │   │   ├── ky.js
            │   │   │   ├── lb.js
            │   │   │   ├── lo.js
            │   │   │   ├── lt.js
            │   │   │   ├── lv.js
            │   │   │   ├── me.js
            │   │   │   ├── mi.js
            │   │   │   ├── mk.js
            │   │   │   ├── ml.js
            │   │   │   ├── mn.js
            │   │   │   ├── mr.js
            │   │   │   ├── ms-my.js
            │   │   │   ├── ms.js
            │   │   │   ├── mt.js
            │   │   │   ├── my.js
            │   │   │   ├── nb.js
            │   │   │   ├── ne.js
            │   │   │   ├── nl-be.js
            │   │   │   ├── nl.js
            │   │   │   ├── nn.js
            │   │   │   ├── oc-lnc.js
            │   │   │   ├── pa-in.js
            │   │   │   ├── pl.js
            │   │   │   ├── pt-br.js
            │   │   │   ├── pt.js
            │   │   │   ├── rn.js
            │   │   │   ├── ro.js
            │   │   │   ├── ru.js
            │   │   │   ├── rw.js
            │   │   │   ├── sd.js
            │   │   │   ├── se.js
            │   │   │   ├── si.js
            │   │   │   ├── sk.js
            │   │   │   ├── sl.js
            │   │   │   ├── sq.js
            │   │   │   ├── sr-cyrl.js
            │   │   │   ├── sr.js
            │   │   │   ├── ss.js
            │   │   │   ├── sv-fi.js
            │   │   │   ├── sv.js
            │   │   │   ├── sw.js
            │   │   │   ├── ta.js
            │   │   │   ├── te.js
            │   │   │   ├── tet.js
            │   │   │   ├── tg.js
            │   │   │   ├── th.js
            │   │   │   ├── tk.js
            │   │   │   ├── tl-ph.js
            │   │   │   ├── tlh.js
            │   │   │   ├── tr.js
            │   │   │   ├── types.d.ts
            │   │   │   ├── tzl.js
            │   │   │   ├── tzm-latn.js
            │   │   │   ├── tzm.js
            │   │   │   ├── ug-cn.js
            │   │   │   ├── uk.js
            │   │   │   ├── ur.js
            │   │   │   ├── uz-latn.js
            │   │   │   ├── uz.js
            │   │   │   ├── vi.js
            │   │   │   ├── x-pseudo.js
            │   │   │   ├── yo.js
            │   │   │   ├── zh-cn.js
            │   │   │   ├── zh-hk.js
            │   │   │   ├── zh-tw.js
            │   │   │   └── zh.js
            │   │   └── plugin/
            │   │       ├── advancedFormat/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── arraySupport/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── badMutable/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── bigIntSupport/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── buddhistEra/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── calendar/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── customParseFormat/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── dayOfYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── devHelper/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── duration/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isBetween/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isLeapYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isMoment/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isSameOrAfter/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isSameOrBefore/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isToday/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isTomorrow/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isYesterday/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isoWeek/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── isoWeeksInYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── localeData/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── localizedFormat/
            │   │       │   ├── index.d.ts
            │   │       │   ├── index.js
            │   │       │   └── utils.js
            │   │       ├── minMax/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── negativeYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── objectSupport/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── pluralGetSet/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── preParsePostFormat/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── quarterOfYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── relativeTime/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── timezone/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── toArray/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── toObject/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── updateLocale/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── utc/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── weekOfYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       ├── weekYear/
            │   │       │   ├── index.d.ts
            │   │       │   └── index.js
            │   │       └── weekday/
            │   │           ├── index.d.ts
            │   │           └── index.js
            │   ├── locale/
            │   │   ├── af.js
            │   │   ├── am.js
            │   │   ├── ar-dz.js
            │   │   ├── ar-iq.js
            │   │   ├── ar-kw.js
            │   │   ├── ar-ly.js
            │   │   ├── ar-ma.js
            │   │   ├── ar-sa.js
            │   │   ├── ar-tn.js
            │   │   ├── ar.js
            │   │   ├── az.js
            │   │   ├── be.js
            │   │   ├── bg.js
            │   │   ├── bi.js
            │   │   ├── bm.js
            │   │   ├── bn-bd.js
            │   │   ├── bn.js
            │   │   ├── bo.js
            │   │   ├── br.js
            │   │   ├── bs.js
            │   │   ├── ca.js
            │   │   ├── cs.js
            │   │   ├── cv.js
            │   │   ├── cy.js
            │   │   ├── da.js
            │   │   ├── de-at.js
            │   │   ├── de-ch.js
            │   │   ├── de.js
            │   │   ├── dv.js
            │   │   ├── el.js
            │   │   ├── en-au.js
            │   │   ├── en-ca.js
            │   │   ├── en-gb.js
            │   │   ├── en-ie.js
            │   │   ├── en-il.js
            │   │   ├── en-in.js
            │   │   ├── en-nz.js
            │   │   ├── en-sg.js
            │   │   ├── en-tt.js
            │   │   ├── en.js
            │   │   ├── eo.js
            │   │   ├── es-do.js
            │   │   ├── es-mx.js
            │   │   ├── es-pr.js
            │   │   ├── es-us.js
            │   │   ├── es.js
            │   │   ├── et.js
            │   │   ├── eu.js
            │   │   ├── fa.js
            │   │   ├── fi.js
            │   │   ├── fo.js
            │   │   ├── fr-ca.js
            │   │   ├── fr-ch.js
            │   │   ├── fr.js
            │   │   ├── fy.js
            │   │   ├── ga.js
            │   │   ├── gd.js
            │   │   ├── gl.js
            │   │   ├── gom-latn.js
            │   │   ├── gu.js
            │   │   ├── he.js
            │   │   ├── hi.js
            │   │   ├── hr.js
            │   │   ├── ht.js
            │   │   ├── hu.js
            │   │   ├── hy-am.js
            │   │   ├── id.js
            │   │   ├── index.d.ts
            │   │   ├── is.js
            │   │   ├── it-ch.js
            │   │   ├── it.js
            │   │   ├── ja.js
            │   │   ├── jv.js
            │   │   ├── ka.js
            │   │   ├── kk.js
            │   │   ├── km.js
            │   │   ├── kn.js
            │   │   ├── ko.js
            │   │   ├── ku.js
            │   │   ├── ky.js
            │   │   ├── lb.js
            │   │   ├── lo.js
            │   │   ├── lt.js
            │   │   ├── lv.js
            │   │   ├── me.js
            │   │   ├── mi.js
            │   │   ├── mk.js
            │   │   ├── ml.js
            │   │   ├── mn.js
            │   │   ├── mr.js
            │   │   ├── ms-my.js
            │   │   ├── ms.js
            │   │   ├── mt.js
            │   │   ├── my.js
            │   │   ├── nb.js
            │   │   ├── ne.js
            │   │   ├── nl-be.js
            │   │   ├── nl.js
            │   │   ├── nn.js
            │   │   ├── oc-lnc.js
            │   │   ├── pa-in.js
            │   │   ├── pl.js
            │   │   ├── pt-br.js
            │   │   ├── pt.js
            │   │   ├── rn.js
            │   │   ├── ro.js
            │   │   ├── ru.js
            │   │   ├── rw.js
            │   │   ├── sd.js
            │   │   ├── se.js
            │   │   ├── si.js
            │   │   ├── sk.js
            │   │   ├── sl.js
            │   │   ├── sq.js
            │   │   ├── sr-cyrl.js
            │   │   ├── sr.js
            │   │   ├── ss.js
            │   │   ├── sv-fi.js
            │   │   ├── sv.js
            │   │   ├── sw.js
            │   │   ├── ta.js
            │   │   ├── te.js
            │   │   ├── tet.js
            │   │   ├── tg.js
            │   │   ├── th.js
            │   │   ├── tk.js
            │   │   ├── tl-ph.js
            │   │   ├── tlh.js
            │   │   ├── tr.js
            │   │   ├── types.d.ts
            │   │   ├── tzl.js
            │   │   ├── tzm-latn.js
            │   │   ├── tzm.js
            │   │   ├── ug-cn.js
            │   │   ├── uk.js
            │   │   ├── ur.js
            │   │   ├── uz-latn.js
            │   │   ├── uz.js
            │   │   ├── vi.js
            │   │   ├── x-pseudo.js
            │   │   ├── yo.js
            │   │   ├── zh-cn.js
            │   │   ├── zh-hk.js
            │   │   ├── zh-tw.js
            │   │   └── zh.js
            │   └── plugin/
            │       ├── advancedFormat.d.ts
            │       ├── advancedFormat.js
            │       ├── arraySupport.d.ts
            │       ├── arraySupport.js
            │       ├── badMutable.d.ts
            │       ├── badMutable.js
            │       ├── bigIntSupport.d.ts
            │       ├── bigIntSupport.js
            │       ├── buddhistEra.d.ts
            │       ├── buddhistEra.js
            │       ├── calendar.d.ts
            │       ├── calendar.js
            │       ├── customParseFormat.d.ts
            │       ├── customParseFormat.js
            │       ├── dayOfYear.d.ts
            │       ├── dayOfYear.js
            │       ├── devHelper.d.ts
            │       ├── devHelper.js
            │       ├── duration.d.ts
            │       ├── duration.js
            │       ├── isBetween.d.ts
            │       ├── isBetween.js
            │       ├── isLeapYear.d.ts
            │       ├── isLeapYear.js
            │       ├── isMoment.d.ts
            │       ├── isMoment.js
            │       ├── isSameOrAfter.d.ts
            │       ├── isSameOrAfter.js
            │       ├── isSameOrBefore.d.ts
            │       ├── isSameOrBefore.js
            │       ├── isToday.d.ts
            │       ├── isToday.js
            │       ├── isTomorrow.d.ts
            │       ├── isTomorrow.js
            │       ├── isYesterday.d.ts
            │       ├── isYesterday.js
            │       ├── isoWeek.d.ts
            │       ├── isoWeek.js
            │       ├── isoWeeksInYear.d.ts
            │       ├── isoWeeksInYear.js
            │       ├── localeData.d.ts
            │       ├── localeData.js
            │       ├── localizedFormat.d.ts
            │       ├── localizedFormat.js
            │       ├── minMax.d.ts
            │       ├── minMax.js
            │       ├── negativeYear.d.ts
            │       ├── negativeYear.js
            │       ├── objectSupport.d.ts
            │       ├── objectSupport.js
            │       ├── pluralGetSet.d.ts
            │       ├── pluralGetSet.js
            │       ├── preParsePostFormat.d.ts
            │       ├── preParsePostFormat.js
            │       ├── quarterOfYear.d.ts
            │       ├── quarterOfYear.js
            │       ├── relativeTime.d.ts
            │       ├── relativeTime.js
            │       ├── timezone.d.ts
            │       ├── timezone.js
            │       ├── toArray.d.ts
            │       ├── toArray.js
            │       ├── toObject.d.ts
            │       ├── toObject.js
            │       ├── updateLocale.d.ts
            │       ├── updateLocale.js
            │       ├── utc.d.ts
            │       ├── utc.js
            │       ├── weekOfYear.d.ts
            │       ├── weekOfYear.js
            │       ├── weekYear.d.ts
            │       ├── weekYear.js
            │       ├── weekday.d.ts
            │       └── weekday.js
            ├── debug/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── Makefile
            │   ├── component.json
            │   ├── karma.conf.js
            │   ├── node.js
            │   ├── package.json
            │   ├── .coveralls.yml
            │   ├── .eslintrc
            │   ├── .npmignore
            │   ├── .travis.yml
            │   └── src/
            │       ├── browser.js
            │       ├── debug.js
            │       ├── index.js
            │       ├── inspector-log.js
            │       └── node.js
            ├── delayed-stream/
            │   ├── Readme.md
            │   ├── License
            │   ├── Makefile
            │   ├── package.json
            │   ├── .npmignore
            │   └── lib/
            │       └── delayed_stream.js
            ├── depd/
            │   ├── Readme.md
            │   ├── History.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       └── browser/
            │           └── index.js
            ├── destroy/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── dunder-proto/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── get.d.ts
            │   ├── get.js
            │   ├── package.json
            │   ├── set.d.ts
            │   ├── set.js
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   ├── get.js
            │   │   ├── index.js
            │   │   └── set.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── ecdsa-sig-formatter/
            │   ├── README.md
            │   ├── CODEOWNERS
            │   ├── LICENSE
            │   ├── package.json
            │   └── src/
            │       ├── ecdsa-sig-formatter.d.ts
            │       ├── ecdsa-sig-formatter.js
            │       └── param-bytes-for-alg.js
            ├── ee-first/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── encodeurl/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── engine.io/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── wrapper.mjs
            │   ├── build/
            │   │   ├── engine.io.d.ts
            │   │   ├── engine.io.js
            │   │   ├── server.d.ts
            │   │   ├── server.js
            │   │   ├── socket.d.ts
            │   │   ├── socket.js
            │   │   ├── transport.d.ts
            │   │   ├── transport.js
            │   │   ├── userver.d.ts
            │   │   ├── userver.js
            │   │   ├── parser-v3/
            │   │   │   ├── index.d.ts
            │   │   │   ├── index.js
            │   │   │   ├── utf8.d.ts
            │   │   │   └── utf8.js
            │   │   ├── transports/
            │   │   │   ├── index.d.ts
            │   │   │   ├── index.js
            │   │   │   ├── polling-jsonp.d.ts
            │   │   │   ├── polling-jsonp.js
            │   │   │   ├── polling.d.ts
            │   │   │   ├── polling.js
            │   │   │   ├── websocket.d.ts
            │   │   │   ├── websocket.js
            │   │   │   ├── webtransport.d.ts
            │   │   │   └── webtransport.js
            │   │   └── transports-uws/
            │   │       ├── index.d.ts
            │   │       ├── index.js
            │   │       ├── polling.d.ts
            │   │       ├── polling.js
            │   │       ├── websocket.d.ts
            │   │       └── websocket.js
            │   └── node_modules/
            │       ├── cookie/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── SECURITY.md
            │       │   ├── index.js
            │       │   └── package.json
            │       ├── debug/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── package.json
            │       │   └── src/
            │       │       ├── browser.js
            │       │       ├── common.js
            │       │       ├── index.js
            │       │       └── node.js
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── engine.io-parser/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── package.json
            │   └── build/
            │       ├── cjs/
            │       │   ├── commons.d.ts
            │       │   ├── commons.js
            │       │   ├── decodePacket.browser.d.ts
            │       │   ├── decodePacket.browser.js
            │       │   ├── decodePacket.d.ts
            │       │   ├── decodePacket.js
            │       │   ├── encodePacket.browser.d.ts
            │       │   ├── encodePacket.browser.js
            │       │   ├── encodePacket.d.ts
            │       │   ├── encodePacket.js
            │       │   ├── index.d.ts
            │       │   ├── index.js
            │       │   ├── package.json
            │       │   └── contrib/
            │       │       ├── base64-arraybuffer.d.ts
            │       │       └── base64-arraybuffer.js
            │       └── esm/
            │           ├── commons.d.ts
            │           ├── commons.js
            │           ├── decodePacket.browser.d.ts
            │           ├── decodePacket.browser.js
            │           ├── decodePacket.d.ts
            │           ├── decodePacket.js
            │           ├── encodePacket.browser.d.ts
            │           ├── encodePacket.browser.js
            │           ├── encodePacket.d.ts
            │           ├── encodePacket.js
            │           ├── index.d.ts
            │           ├── index.js
            │           ├── package.json
            │           └── contrib/
            │               ├── base64-arraybuffer.d.ts
            │               └── base64-arraybuffer.js
            ├── es-define-property/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── es-errors/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── eval.d.ts
            │   ├── eval.js
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── range.d.ts
            │   ├── range.js
            │   ├── ref.d.ts
            │   ├── ref.js
            │   ├── syntax.d.ts
            │   ├── syntax.js
            │   ├── tsconfig.json
            │   ├── type.d.ts
            │   ├── type.js
            │   ├── uri.d.ts
            │   ├── uri.js
            │   ├── .eslintrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── es-object-atoms/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── RequireObjectCoercible.d.ts
            │   ├── RequireObjectCoercible.js
            │   ├── ToObject.d.ts
            │   ├── ToObject.js
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── isObject.d.ts
            │   ├── isObject.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── escape-html/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── etag/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── express/
            │   ├── Readme.md
            │   ├── History.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       ├── application.js
            │       ├── express.js
            │       ├── request.js
            │       ├── response.js
            │       ├── utils.js
            │       ├── view.js
            │       ├── middleware/
            │       │   ├── init.js
            │       │   └── query.js
            │       └── router/
            │           ├── index.js
            │           ├── layer.js
            │           └── route.js
            ├── finalhandler/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── SECURITY.md
            │   ├── index.js
            │   └── package.json
            ├── follow-redirects/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── debug.js
            │   ├── http.js
            │   ├── https.js
            │   ├── index.js
            │   └── package.json
            ├── form-data/
            │   ├── Readme.md
            │   ├── License
            │   ├── index.d.ts
            │   ├── package.json
            │   └── lib/
            │       ├── browser.js
            │       ├── form_data.js
            │       └── populate.js
            ├── forwarded/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── fresh/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── function-bind/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── implementation.js
            │   ├── index.js
            │   ├── package.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   ├── index.js
            │   │   └── .eslintrc
            │   └── .github/
            │       ├── FUNDING.yml
            │       └── SECURITY.md
            ├── get-intrinsic/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── GetIntrinsic.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── get-proto/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── Object.getPrototypeOf.d.ts
            │   ├── Object.getPrototypeOf.js
            │   ├── Reflect.getPrototypeOf.d.ts
            │   ├── Reflect.getPrototypeOf.js
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── gopd/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── gOPD.d.ts
            │   ├── gOPD.js
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── has-symbols/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── shams.d.ts
            │   ├── shams.js
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   ├── index.js
            │   │   ├── tests.js
            │   │   └── shams/
            │   │       ├── core-js.js
            │   │       └── get-own-property-symbols.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── hasown/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── .nycrc
            │   └── .github/
            │       └── FUNDING.yml
            ├── http-errors/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── https-proxy-agent/
            │   ├── README.md
            │   ├── package.json
            │   ├── dist/
            │   │   ├── agent.d.ts
            │   │   ├── agent.js
            │   │   ├── index.d.ts
            │   │   ├── index.js
            │   │   ├── parse-proxy-response.d.ts
            │   │   └── parse-proxy-response.js
            │   └── node_modules/
            │       ├── debug/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── package.json
            │       │   └── src/
            │       │       ├── browser.js
            │       │       ├── common.js
            │       │       ├── index.js
            │       │       └── node.js
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── iconv-lite/
            │   ├── README.md
            │   ├── Changelog.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── encodings/
            │   │   ├── dbcs-codec.js
            │   │   ├── dbcs-data.js
            │   │   ├── index.js
            │   │   ├── internal.js
            │   │   ├── sbcs-codec.js
            │   │   ├── sbcs-data-generated.js
            │   │   ├── sbcs-data.js
            │   │   ├── utf16.js
            │   │   ├── utf7.js
            │   │   └── tables/
            │   │       ├── big5-added.json
            │   │       ├── cp936.json
            │   │       ├── cp949.json
            │   │       ├── cp950.json
            │   │       ├── eucjp.json
            │   │       ├── gb18030-ranges.json
            │   │       ├── gbk-added.json
            │   │       └── shiftjis.json
            │   └── lib/
            │       ├── bom-handling.js
            │       ├── extend-node.js
            │       ├── index.d.ts
            │       ├── index.js
            │       └── streams.js
            ├── inherits/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── inherits.js
            │   ├── inherits_browser.js
            │   └── package.json
            ├── ipaddr.js/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── package.json
            │   └── lib/
            │       ├── ipaddr.js
            │       └── ipaddr.js.d.ts
            ├── jsonwebtoken/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── decode.js
            │   ├── index.js
            │   ├── package.json
            │   ├── sign.js
            │   ├── verify.js
            │   ├── lib/
            │   │   ├── JsonWebTokenError.js
            │   │   ├── NotBeforeError.js
            │   │   ├── TokenExpiredError.js
            │   │   ├── asymmetricKeyDetailsSupported.js
            │   │   ├── psSupported.js
            │   │   ├── rsaPssKeyDetailsSupported.js
            │   │   ├── timespan.js
            │   │   └── validateAsymmetricKey.js
            │   └── node_modules/
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── jwa/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── jws/
            │   ├── readme.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       ├── data-stream.js
            │       ├── sign-stream.js
            │       ├── tostring.js
            │       └── verify-stream.js
            ├── lodash.includes/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.isboolean/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.isinteger/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.isnumber/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.isplainobject/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.isstring/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── lodash.once/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── math-intrinsics/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── abs.d.ts
            │   ├── abs.js
            │   ├── floor.d.ts
            │   ├── floor.js
            │   ├── isFinite.d.ts
            │   ├── isFinite.js
            │   ├── isInteger.d.ts
            │   ├── isInteger.js
            │   ├── isNaN.d.ts
            │   ├── isNaN.js
            │   ├── isNegativeZero.d.ts
            │   ├── isNegativeZero.js
            │   ├── max.d.ts
            │   ├── max.js
            │   ├── min.d.ts
            │   ├── min.js
            │   ├── mod.d.ts
            │   ├── mod.js
            │   ├── package.json
            │   ├── pow.d.ts
            │   ├── pow.js
            │   ├── round.d.ts
            │   ├── round.js
            │   ├── sign.d.ts
            │   ├── sign.js
            │   ├── tsconfig.json
            │   ├── .eslintrc
            │   ├── constants/
            │   │   ├── maxArrayLength.d.ts
            │   │   ├── maxArrayLength.js
            │   │   ├── maxSafeInteger.d.ts
            │   │   ├── maxSafeInteger.js
            │   │   ├── maxValue.d.ts
            │   │   └── maxValue.js
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── media-typer/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── merge-descriptors/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── methods/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── mime/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── cli.js
            │   ├── mime.js
            │   ├── package.json
            │   ├── types.json
            │   ├── .npmignore
            │   └── src/
            │       ├── build.js
            │       └── test.js
            ├── mime-db/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── db.json
            │   ├── index.js
            │   └── package.json
            ├── mime-types/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── ms/
            │   ├── readme.md
            │   ├── index.js
            │   ├── license.md
            │   └── package.json
            ├── negotiator/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       ├── charset.js
            │       ├── encoding.js
            │       ├── language.js
            │       └── mediaType.js
            ├── object-assign/
            │   ├── readme.md
            │   ├── index.js
            │   ├── license
            │   └── package.json
            ├── object-inspect/
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package-support.json
            │   ├── package.json
            │   ├── readme.markdown
            │   ├── test-core-js.js
            │   ├── util.inspect.js
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── example/
            │   │   ├── all.js
            │   │   ├── circular.js
            │   │   ├── fn.js
            │   │   └── inspect.js
            │   ├── test/
            │   │   ├── bigint.js
            │   │   ├── circular.js
            │   │   ├── deep.js
            │   │   ├── element.js
            │   │   ├── err.js
            │   │   ├── fakes.js
            │   │   ├── fn.js
            │   │   ├── global.js
            │   │   ├── has.js
            │   │   ├── holes.js
            │   │   ├── indent-option.js
            │   │   ├── inspect.js
            │   │   ├── lowbyte.js
            │   │   ├── number.js
            │   │   ├── quoteStyle.js
            │   │   ├── toStringTag.js
            │   │   ├── undef.js
            │   │   ├── values.js
            │   │   └── browser/
            │   │       └── dom.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── on-finished/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── parseurl/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── path-to-regexp/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── proxy-addr/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── proxy-from-env/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   ├── test.js
            │   ├── .eslintrc
            │   └── .travis.yml
            ├── qs/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE.md
            │   ├── package.json
            │   ├── .editorconfig
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── dist/
            │   │   └── qs.js
            │   ├── lib/
            │   │   ├── formats.js
            │   │   ├── index.js
            │   │   ├── parse.js
            │   │   ├── stringify.js
            │   │   └── utils.js
            │   ├── test/
            │   │   ├── empty-keys-cases.js
            │   │   ├── parse.js
            │   │   ├── stringify.js
            │   │   └── utils.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── range-parser/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── raw-body/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── SECURITY.md
            │   ├── index.d.ts
            │   ├── index.js
            │   └── package.json
            ├── safe-buffer/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   └── package.json
            ├── safer-buffer/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── Porting-Buffer.md
            │   ├── dangerous.js
            │   ├── package.json
            │   ├── safer.js
            │   └── tests.js
            ├── scmp/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   ├── .travis.yml
            │   ├── benchmark/
            │   │   ├── benchmark.js
            │   │   └── crypto-check.js
            │   ├── lib/
            │   │   └── scmpCompare.js
            │   └── test/
            │       └── test.js
            ├── semver/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   ├── preload.js
            │   ├── range.bnf
            │   ├── bin/
            │   │   └── semver.js
            │   ├── classes/
            │   │   ├── comparator.js
            │   │   ├── index.js
            │   │   ├── range.js
            │   │   └── semver.js
            │   ├── functions/
            │   │   ├── clean.js
            │   │   ├── cmp.js
            │   │   ├── coerce.js
            │   │   ├── compare-build.js
            │   │   ├── compare-loose.js
            │   │   ├── compare.js
            │   │   ├── diff.js
            │   │   ├── eq.js
            │   │   ├── gt.js
            │   │   ├── gte.js
            │   │   ├── inc.js
            │   │   ├── lt.js
            │   │   ├── lte.js
            │   │   ├── major.js
            │   │   ├── minor.js
            │   │   ├── neq.js
            │   │   ├── parse.js
            │   │   ├── patch.js
            │   │   ├── prerelease.js
            │   │   ├── rcompare.js
            │   │   ├── rsort.js
            │   │   ├── satisfies.js
            │   │   ├── sort.js
            │   │   └── valid.js
            │   ├── internal/
            │   │   ├── constants.js
            │   │   ├── debug.js
            │   │   ├── identifiers.js
            │   │   ├── lrucache.js
            │   │   ├── parse-options.js
            │   │   └── re.js
            │   └── ranges/
            │       ├── gtr.js
            │       ├── intersects.js
            │       ├── ltr.js
            │       ├── max-satisfying.js
            │       ├── min-satisfying.js
            │       ├── min-version.js
            │       ├── outside.js
            │       ├── simplify.js
            │       ├── subset.js
            │       ├── to-comparators.js
            │       └── valid.js
            ├── send/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── SECURITY.md
            │   ├── index.js
            │   ├── package.json
            │   └── node_modules/
            │       ├── encodeurl/
            │       │   ├── README.md
            │       │   ├── HISTORY.md
            │       │   ├── LICENSE
            │       │   ├── index.js
            │       │   └── package.json
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── serve-static/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── setprototypeof/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   └── test/
            │       └── index.js
            ├── side-channel/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .editorconfig
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── side-channel-list/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── list.d.ts
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .editorconfig
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── side-channel-map/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .editorconfig
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── side-channel-weakmap/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   ├── tsconfig.json
            │   ├── .editorconfig
            │   ├── .eslintrc
            │   ├── .nycrc
            │   ├── test/
            │   │   └── index.js
            │   └── .github/
            │       └── FUNDING.yml
            ├── socket.io/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── wrapper.mjs
            │   ├── client-dist/
            │   │   └── socket.io.js
            │   ├── dist/
            │   │   ├── broadcast-operator.d.ts
            │   │   ├── broadcast-operator.js
            │   │   ├── client.d.ts
            │   │   ├── client.js
            │   │   ├── index.d.ts
            │   │   ├── index.js
            │   │   ├── namespace.d.ts
            │   │   ├── namespace.js
            │   │   ├── parent-namespace.d.ts
            │   │   ├── parent-namespace.js
            │   │   ├── socket-types.d.ts
            │   │   ├── socket-types.js
            │   │   ├── socket.d.ts
            │   │   ├── socket.js
            │   │   ├── typed-events.d.ts
            │   │   ├── typed-events.js
            │   │   ├── uws.d.ts
            │   │   └── uws.js
            │   └── node_modules/
            │       ├── debug/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── package.json
            │       │   └── src/
            │       │       ├── browser.js
            │       │       ├── common.js
            │       │       ├── index.js
            │       │       └── node.js
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── socket.io-adapter/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── dist/
            │   │   ├── cluster-adapter.d.ts
            │   │   ├── cluster-adapter.js
            │   │   ├── in-memory-adapter.d.ts
            │   │   ├── in-memory-adapter.js
            │   │   ├── index.d.ts
            │   │   ├── index.js
            │   │   └── contrib/
            │   │       ├── yeast.d.ts
            │   │       └── yeast.js
            │   └── node_modules/
            │       ├── debug/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── package.json
            │       │   └── src/
            │       │       ├── browser.js
            │       │       ├── common.js
            │       │       ├── index.js
            │       │       └── node.js
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── socket.io-parser/
            │   ├── Readme.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── build/
            │   │   ├── cjs/
            │   │   │   ├── binary.d.ts
            │   │   │   ├── binary.js
            │   │   │   ├── index.d.ts
            │   │   │   ├── index.js
            │   │   │   ├── is-binary.d.ts
            │   │   │   ├── is-binary.js
            │   │   │   └── package.json
            │   │   ├── esm/
            │   │   │   ├── binary.d.ts
            │   │   │   ├── binary.js
            │   │   │   ├── index.d.ts
            │   │   │   ├── index.js
            │   │   │   ├── is-binary.d.ts
            │   │   │   ├── is-binary.js
            │   │   │   └── package.json
            │   │   └── esm-debug/
            │   │       ├── binary.d.ts
            │   │       ├── binary.js
            │   │       ├── index.d.ts
            │   │       ├── index.js
            │   │       ├── is-binary.d.ts
            │   │       ├── is-binary.js
            │   │       └── package.json
            │   └── node_modules/
            │       ├── debug/
            │       │   ├── README.md
            │       │   ├── LICENSE
            │       │   ├── package.json
            │       │   └── src/
            │       │       ├── browser.js
            │       │       ├── common.js
            │       │       ├── index.js
            │       │       └── node.js
            │       └── ms/
            │           ├── readme.md
            │           ├── index.js
            │           ├── license.md
            │           └── package.json
            ├── statuses/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── codes.json
            │   ├── index.js
            │   └── package.json
            ├── toidentifier/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── twilio/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.d.ts
            │   ├── index.js
            │   ├── package.json
            │   └── lib/
            │       ├── index.d.ts
            │       ├── index.js
            │       ├── interfaces.d.ts
            │       ├── interfaces.js
            │       ├── auth_strategy/
            │       │   ├── AuthStrategy.d.ts
            │       │   ├── AuthStrategy.js
            │       │   ├── BasicAuthStrategy.d.ts
            │       │   ├── BasicAuthStrategy.js
            │       │   ├── NoAuthStrategy.d.ts
            │       │   ├── NoAuthStrategy.js
            │       │   ├── TokenAuthStrategy.d.ts
            │       │   └── TokenAuthStrategy.js
            │       ├── base/
            │       │   ├── BaseTwilio.d.ts
            │       │   ├── BaseTwilio.js
            │       │   ├── Domain.d.ts
            │       │   ├── Domain.js
            │       │   ├── Page.d.ts
            │       │   ├── Page.js
            │       │   ├── RequestClient.d.ts
            │       │   ├── RequestClient.js
            │       │   ├── RestException.d.ts
            │       │   ├── RestException.js
            │       │   ├── Version.d.ts
            │       │   ├── Version.js
            │       │   ├── deserialize.d.ts
            │       │   ├── deserialize.js
            │       │   ├── serialize.d.ts
            │       │   ├── serialize.js
            │       │   ├── utility.d.ts
            │       │   ├── utility.js
            │       │   ├── values.d.ts
            │       │   └── values.js
            │       ├── credential_provider/
            │       │   ├── ClientCredentialProvider.d.ts
            │       │   ├── ClientCredentialProvider.js
            │       │   ├── CredentialProvider.d.ts
            │       │   ├── CredentialProvider.js
            │       │   ├── NoAuthCredentialProvider.d.ts
            │       │   ├── NoAuthCredentialProvider.js
            │       │   ├── OrgsCredentialProvider.d.ts
            │       │   └── OrgsCredentialProvider.js
            │       ├── http/
            │       │   ├── request.d.ts
            │       │   ├── request.js
            │       │   ├── response.d.ts
            │       │   ├── response.js
            │       │   └── bearer_token/
            │       │       ├── ApiTokenManager.d.ts
            │       │       ├── ApiTokenManager.js
            │       │       ├── OrgsTokenManager.d.ts
            │       │       ├── OrgsTokenManager.js
            │       │       ├── TokenManager.d.ts
            │       │       └── TokenManager.js
            │       ├── jwt/
            │       │   ├── AccessToken.d.ts
            │       │   ├── AccessToken.js
            │       │   ├── ClientCapability.d.ts
            │       │   ├── ClientCapability.js
            │       │   └── taskrouter/
            │       │       ├── TaskRouterCapability.d.ts
            │       │       ├── TaskRouterCapability.js
            │       │       ├── util.d.ts
            │       │       └── util.js
            │       ├── rest/
            │       │   ├── Accounts.d.ts
            │       │   ├── Accounts.js
            │       │   ├── AccountsBase.d.ts
            │       │   ├── AccountsBase.js
            │       │   ├── Api.d.ts
            │       │   ├── Api.js
            │       │   ├── ApiBase.d.ts
            │       │   ├── ApiBase.js
            │       │   ├── Assistants.d.ts
            │       │   ├── Assistants.js
            │       │   ├── AssistantsBase.d.ts
            │       │   ├── AssistantsBase.js
            │       │   ├── Bulkexports.d.ts
            │       │   ├── Bulkexports.js
            │       │   ├── BulkexportsBase.d.ts
            │       │   ├── BulkexportsBase.js
            │       │   ├── Chat.d.ts
            │       │   ├── Chat.js
            │       │   ├── ChatBase.d.ts
            │       │   ├── ChatBase.js
            │       │   ├── Content.d.ts
            │       │   ├── Content.js
            │       │   ├── ContentBase.d.ts
            │       │   ├── ContentBase.js
            │       │   ├── Conversations.d.ts
            │       │   ├── Conversations.js
            │       │   ├── ConversationsBase.d.ts
            │       │   ├── ConversationsBase.js
            │       │   ├── Events.d.ts
            │       │   ├── Events.js
            │       │   ├── EventsBase.d.ts
            │       │   ├── EventsBase.js
            │       │   ├── FlexApi.d.ts
            │       │   ├── FlexApi.js
            │       │   ├── FlexApiBase.d.ts
            │       │   ├── FlexApiBase.js
            │       │   ├── FrontlineApi.d.ts
            │       │   ├── FrontlineApi.js
            │       │   ├── FrontlineApiBase.d.ts
            │       │   ├── FrontlineApiBase.js
            │       │   ├── Iam.d.ts
            │       │   ├── Iam.js
            │       │   ├── IamBase.d.ts
            │       │   ├── IamBase.js
            │       │   ├── Insights.d.ts
            │       │   ├── Insights.js
            │       │   ├── InsightsBase.d.ts
            │       │   ├── InsightsBase.js
            │       │   ├── Intelligence.d.ts
            │       │   ├── Intelligence.js
            │       │   ├── IntelligenceBase.d.ts
            │       │   ├── IntelligenceBase.js
            │       │   ├── IpMessaging.d.ts
            │       │   ├── IpMessaging.js
            │       │   ├── IpMessagingBase.d.ts
            │       │   ├── IpMessagingBase.js
            │       │   ├── Lookups.d.ts
            │       │   ├── Lookups.js
            │       │   ├── LookupsBase.d.ts
            │       │   ├── LookupsBase.js
            │       │   ├── Marketplace.d.ts
            │       │   ├── Marketplace.js
            │       │   ├── MarketplaceBase.d.ts
            │       │   ├── MarketplaceBase.js
            │       │   ├── Messaging.d.ts
            │       │   ├── Messaging.js
            │       │   ├── MessagingBase.d.ts
            │       │   ├── MessagingBase.js
            │       │   ├── Microvisor.d.ts
            │       │   ├── Microvisor.js
            │       │   ├── MicrovisorBase.d.ts
            │       │   ├── MicrovisorBase.js
            │       │   ├── Monitor.d.ts
            │       │   ├── Monitor.js
            │       │   ├── MonitorBase.d.ts
            │       │   ├── MonitorBase.js
            │       │   ├── Notify.d.ts
            │       │   ├── Notify.js
            │       │   ├── NotifyBase.d.ts
            │       │   ├── NotifyBase.js
            │       │   ├── Numbers.d.ts
            │       │   ├── Numbers.js
            │       │   ├── NumbersBase.d.ts
            │       │   ├── NumbersBase.js
            │       │   ├── Oauth.d.ts
            │       │   ├── Oauth.js
            │       │   ├── OauthBase.d.ts
            │       │   ├── OauthBase.js
            │       │   ├── Preview.d.ts
            │       │   ├── Preview.js
            │       │   ├── PreviewBase.d.ts
            │       │   ├── PreviewBase.js
            │       │   ├── PreviewIam.d.ts
            │       │   ├── PreviewIam.js
            │       │   ├── PreviewIamBase.d.ts
            │       │   ├── PreviewIamBase.js
            │       │   ├── Pricing.d.ts
            │       │   ├── Pricing.js
            │       │   ├── PricingBase.d.ts
            │       │   ├── PricingBase.js
            │       │   ├── Proxy.d.ts
            │       │   ├── Proxy.js
            │       │   ├── ProxyBase.d.ts
            │       │   ├── ProxyBase.js
            │       │   ├── Routes.d.ts
            │       │   ├── Routes.js
            │       │   ├── RoutesBase.d.ts
            │       │   ├── RoutesBase.js
            │       │   ├── Serverless.d.ts
            │       │   ├── Serverless.js
            │       │   ├── ServerlessBase.d.ts
            │       │   ├── ServerlessBase.js
            │       │   ├── Studio.d.ts
            │       │   ├── Studio.js
            │       │   ├── StudioBase.d.ts
            │       │   ├── StudioBase.js
            │       │   ├── Supersim.d.ts
            │       │   ├── Supersim.js
            │       │   ├── SupersimBase.d.ts
            │       │   ├── SupersimBase.js
            │       │   ├── Sync.d.ts
            │       │   ├── Sync.js
            │       │   ├── SyncBase.d.ts
            │       │   ├── SyncBase.js
            │       │   ├── Taskrouter.d.ts
            │       │   ├── Taskrouter.js
            │       │   ├── TaskrouterBase.d.ts
            │       │   ├── TaskrouterBase.js
            │       │   ├── Trunking.d.ts
            │       │   ├── Trunking.js
            │       │   ├── TrunkingBase.d.ts
            │       │   ├── TrunkingBase.js
            │       │   ├── Trusthub.d.ts
            │       │   ├── Trusthub.js
            │       │   ├── TrusthubBase.d.ts
            │       │   ├── TrusthubBase.js
            │       │   ├── Twilio.d.ts
            │       │   ├── Twilio.js
            │       │   ├── Verify.d.ts
            │       │   ├── Verify.js
            │       │   ├── VerifyBase.d.ts
            │       │   ├── VerifyBase.js
            │       │   ├── Video.d.ts
            │       │   ├── Video.js
            │       │   ├── VideoBase.d.ts
            │       │   ├── VideoBase.js
            │       │   ├── Voice.d.ts
            │       │   ├── Voice.js
            │       │   ├── VoiceBase.d.ts
            │       │   ├── VoiceBase.js
            │       │   ├── Wireless.d.ts
            │       │   ├── Wireless.js
            │       │   ├── WirelessBase.d.ts
            │       │   ├── WirelessBase.js
            │       │   ├── accounts/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── authTokenPromotion.d.ts
            │       │   │       ├── authTokenPromotion.js
            │       │   │       ├── bulkConsents.d.ts
            │       │   │       ├── bulkConsents.js
            │       │   │       ├── bulkContacts.d.ts
            │       │   │       ├── bulkContacts.js
            │       │   │       ├── credential.d.ts
            │       │   │       ├── credential.js
            │       │   │       ├── safelist.d.ts
            │       │   │       ├── safelist.js
            │       │   │       ├── secondaryAuthToken.d.ts
            │       │   │       ├── secondaryAuthToken.js
            │       │   │       └── credential/
            │       │   │           ├── aws.d.ts
            │       │   │           ├── aws.js
            │       │   │           ├── publicKey.d.ts
            │       │   │           └── publicKey.js
            │       │   ├── api/
            │       │   │   ├── V2010.d.ts
            │       │   │   ├── V2010.js
            │       │   │   └── v2010/
            │       │   │       ├── account.d.ts
            │       │   │       ├── account.js
            │       │   │       └── account/
            │       │   │           ├── address.d.ts
            │       │   │           ├── address.js
            │       │   │           ├── application.d.ts
            │       │   │           ├── application.js
            │       │   │           ├── authorizedConnectApp.d.ts
            │       │   │           ├── authorizedConnectApp.js
            │       │   │           ├── availablePhoneNumberCountry.d.ts
            │       │   │           ├── availablePhoneNumberCountry.js
            │       │   │           ├── balance.d.ts
            │       │   │           ├── balance.js
            │       │   │           ├── call.d.ts
            │       │   │           ├── call.js
            │       │   │           ├── conference.d.ts
            │       │   │           ├── conference.js
            │       │   │           ├── connectApp.d.ts
            │       │   │           ├── connectApp.js
            │       │   │           ├── incomingPhoneNumber.d.ts
            │       │   │           ├── incomingPhoneNumber.js
            │       │   │           ├── key.d.ts
            │       │   │           ├── key.js
            │       │   │           ├── message.d.ts
            │       │   │           ├── message.js
            │       │   │           ├── newKey.d.ts
            │       │   │           ├── newKey.js
            │       │   │           ├── newSigningKey.d.ts
            │       │   │           ├── newSigningKey.js
            │       │   │           ├── notification.d.ts
            │       │   │           ├── notification.js
            │       │   │           ├── outgoingCallerId.d.ts
            │       │   │           ├── outgoingCallerId.js
            │       │   │           ├── queue.d.ts
            │       │   │           ├── queue.js
            │       │   │           ├── recording.d.ts
            │       │   │           ├── recording.js
            │       │   │           ├── shortCode.d.ts
            │       │   │           ├── shortCode.js
            │       │   │           ├── signingKey.d.ts
            │       │   │           ├── signingKey.js
            │       │   │           ├── sip.d.ts
            │       │   │           ├── sip.js
            │       │   │           ├── token.d.ts
            │       │   │           ├── token.js
            │       │   │           ├── transcription.d.ts
            │       │   │           ├── transcription.js
            │       │   │           ├── usage.d.ts
            │       │   │           ├── usage.js
            │       │   │           ├── validationRequest.d.ts
            │       │   │           ├── validationRequest.js
            │       │   │           ├── address/
            │       │   │           │   ├── dependentPhoneNumber.d.ts
            │       │   │           │   └── dependentPhoneNumber.js
            │       │   │           ├── availablePhoneNumberCountry/
            │       │   │           │   ├── local.d.ts
            │       │   │           │   ├── local.js
            │       │   │           │   ├── machineToMachine.d.ts
            │       │   │           │   ├── machineToMachine.js
            │       │   │           │   ├── mobile.d.ts
            │       │   │           │   ├── mobile.js
            │       │   │           │   ├── national.d.ts
            │       │   │           │   ├── national.js
            │       │   │           │   ├── sharedCost.d.ts
            │       │   │           │   ├── sharedCost.js
            │       │   │           │   ├── tollFree.d.ts
            │       │   │           │   ├── tollFree.js
            │       │   │           │   ├── voip.d.ts
            │       │   │           │   └── voip.js
            │       │   │           ├── call/
            │       │   │           │   ├── event.d.ts
            │       │   │           │   ├── event.js
            │       │   │           │   ├── notification.d.ts
            │       │   │           │   ├── notification.js
            │       │   │           │   ├── payment.d.ts
            │       │   │           │   ├── payment.js
            │       │   │           │   ├── recording.d.ts
            │       │   │           │   ├── recording.js
            │       │   │           │   ├── siprec.d.ts
            │       │   │           │   ├── siprec.js
            │       │   │           │   ├── stream.d.ts
            │       │   │           │   ├── stream.js
            │       │   │           │   ├── transcription.d.ts
            │       │   │           │   ├── transcription.js
            │       │   │           │   ├── userDefinedMessage.d.ts
            │       │   │           │   ├── userDefinedMessage.js
            │       │   │           │   ├── userDefinedMessageSubscription.d.ts
            │       │   │           │   └── userDefinedMessageSubscription.js
            │       │   │           ├── conference/
            │       │   │           │   ├── participant.d.ts
            │       │   │           │   ├── participant.js
            │       │   │           │   ├── recording.d.ts
            │       │   │           │   └── recording.js
            │       │   │           ├── incomingPhoneNumber/
            │       │   │           │   ├── assignedAddOn.d.ts
            │       │   │           │   ├── assignedAddOn.js
            │       │   │           │   ├── local.d.ts
            │       │   │           │   ├── local.js
            │       │   │           │   ├── mobile.d.ts
            │       │   │           │   ├── mobile.js
            │       │   │           │   ├── tollFree.d.ts
            │       │   │           │   ├── tollFree.js
            │       │   │           │   └── assignedAddOn/
            │       │   │           │       ├── assignedAddOnExtension.d.ts
            │       │   │           │       └── assignedAddOnExtension.js
            │       │   │           ├── message/
            │       │   │           │   ├── feedback.d.ts
            │       │   │           │   ├── feedback.js
            │       │   │           │   ├── media.d.ts
            │       │   │           │   └── media.js
            │       │   │           ├── queue/
            │       │   │           │   ├── member.d.ts
            │       │   │           │   └── member.js
            │       │   │           ├── recording/
            │       │   │           │   ├── addOnResult.d.ts
            │       │   │           │   ├── addOnResult.js
            │       │   │           │   ├── transcription.d.ts
            │       │   │           │   ├── transcription.js
            │       │   │           │   └── addOnResult/
            │       │   │           │       ├── payload.d.ts
            │       │   │           │       ├── payload.js
            │       │   │           │       └── payload/
            │       │   │           │           ├── data.d.ts
            │       │   │           │           └── data.js
            │       │   │           ├── sip/
            │       │   │           │   ├── credentialList.d.ts
            │       │   │           │   ├── credentialList.js
            │       │   │           │   ├── domain.d.ts
            │       │   │           │   ├── domain.js
            │       │   │           │   ├── ipAccessControlList.d.ts
            │       │   │           │   ├── ipAccessControlList.js
            │       │   │           │   ├── credentialList/
            │       │   │           │   │   ├── credential.d.ts
            │       │   │           │   │   └── credential.js
            │       │   │           │   ├── domain/
            │       │   │           │   │   ├── authTypes.d.ts
            │       │   │           │   │   ├── authTypes.js
            │       │   │           │   │   ├── credentialListMapping.d.ts
            │       │   │           │   │   ├── credentialListMapping.js
            │       │   │           │   │   ├── ipAccessControlListMapping.d.ts
            │       │   │           │   │   ├── ipAccessControlListMapping.js
            │       │   │           │   │   └── authTypes/
            │       │   │           │   │       ├── authTypeCalls.d.ts
            │       │   │           │   │       ├── authTypeCalls.js
            │       │   │           │   │       ├── authTypeRegistrations.d.ts
            │       │   │           │   │       ├── authTypeRegistrations.js
            │       │   │           │   │       ├── authTypeCalls/
            │       │   │           │   │       │   ├── authCallsCredentialListMapping.d.ts
            │       │   │           │   │       │   ├── authCallsCredentialListMapping.js
            │       │   │           │   │       │   ├── authCallsIpAccessControlListMapping.d.ts
            │       │   │           │   │       │   └── authCallsIpAccessControlListMapping.js
            │       │   │           │   │       └── authTypeRegistrations/
            │       │   │           │   │           ├── authRegistrationsCredentialListMapping.d.ts
            │       │   │           │   │           └── authRegistrationsCredentialListMapping.js
            │       │   │           │   └── ipAccessControlList/
            │       │   │           │       ├── ipAddress.d.ts
            │       │   │           │       └── ipAddress.js
            │       │   │           └── usage/
            │       │   │               ├── record.d.ts
            │       │   │               ├── record.js
            │       │   │               ├── trigger.d.ts
            │       │   │               ├── trigger.js
            │       │   │               └── record/
            │       │   │                   ├── allTime.d.ts
            │       │   │                   ├── allTime.js
            │       │   │                   ├── daily.d.ts
            │       │   │                   ├── daily.js
            │       │   │                   ├── lastMonth.d.ts
            │       │   │                   ├── lastMonth.js
            │       │   │                   ├── monthly.d.ts
            │       │   │                   ├── monthly.js
            │       │   │                   ├── thisMonth.d.ts
            │       │   │                   ├── thisMonth.js
            │       │   │                   ├── today.d.ts
            │       │   │                   ├── today.js
            │       │   │                   ├── yearly.d.ts
            │       │   │                   ├── yearly.js
            │       │   │                   ├── yesterday.d.ts
            │       │   │                   └── yesterday.js
            │       │   ├── assistants/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── assistant.d.ts
            │       │   │       ├── assistant.js
            │       │   │       ├── knowledge.d.ts
            │       │   │       ├── knowledge.js
            │       │   │       ├── policy.d.ts
            │       │   │       ├── policy.js
            │       │   │       ├── session.d.ts
            │       │   │       ├── session.js
            │       │   │       ├── tool.d.ts
            │       │   │       ├── tool.js
            │       │   │       ├── assistant/
            │       │   │       │   ├── assistantsKnowledge.d.ts
            │       │   │       │   ├── assistantsKnowledge.js
            │       │   │       │   ├── assistantsTool.d.ts
            │       │   │       │   ├── assistantsTool.js
            │       │   │       │   ├── feedback.d.ts
            │       │   │       │   ├── feedback.js
            │       │   │       │   ├── message.d.ts
            │       │   │       │   └── message.js
            │       │   │       ├── knowledge/
            │       │   │       │   ├── chunk.d.ts
            │       │   │       │   ├── chunk.js
            │       │   │       │   ├── knowledgeStatus.d.ts
            │       │   │       │   └── knowledgeStatus.js
            │       │   │       └── session/
            │       │   │           ├── message.d.ts
            │       │   │           └── message.js
            │       │   ├── bulkexports/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── export.d.ts
            │       │   │       ├── export.js
            │       │   │       ├── exportConfiguration.d.ts
            │       │   │       ├── exportConfiguration.js
            │       │   │       └── export/
            │       │   │           ├── day.d.ts
            │       │   │           ├── day.js
            │       │   │           ├── exportCustomJob.d.ts
            │       │   │           ├── exportCustomJob.js
            │       │   │           ├── job.d.ts
            │       │   │           └── job.js
            │       │   ├── chat/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── V3.d.ts
            │       │   │   ├── V3.js
            │       │   │   ├── v1/
            │       │   │   │   ├── credential.d.ts
            │       │   │   │   ├── credential.js
            │       │   │   │   ├── service.d.ts
            │       │   │   │   ├── service.js
            │       │   │   │   └── service/
            │       │   │   │       ├── channel.d.ts
            │       │   │   │       ├── channel.js
            │       │   │   │       ├── role.d.ts
            │       │   │   │       ├── role.js
            │       │   │   │       ├── user.d.ts
            │       │   │   │       ├── user.js
            │       │   │   │       ├── channel/
            │       │   │   │       │   ├── invite.d.ts
            │       │   │   │       │   ├── invite.js
            │       │   │   │       │   ├── member.d.ts
            │       │   │   │       │   ├── member.js
            │       │   │   │       │   ├── message.d.ts
            │       │   │   │       │   └── message.js
            │       │   │   │       └── user/
            │       │   │   │           ├── userChannel.d.ts
            │       │   │   │           └── userChannel.js
            │       │   │   ├── v2/
            │       │   │   │   ├── credential.d.ts
            │       │   │   │   ├── credential.js
            │       │   │   │   ├── service.d.ts
            │       │   │   │   ├── service.js
            │       │   │   │   └── service/
            │       │   │   │       ├── binding.d.ts
            │       │   │   │       ├── binding.js
            │       │   │   │       ├── channel.d.ts
            │       │   │   │       ├── channel.js
            │       │   │   │       ├── role.d.ts
            │       │   │   │       ├── role.js
            │       │   │   │       ├── user.d.ts
            │       │   │   │       ├── user.js
            │       │   │   │       ├── channel/
            │       │   │   │       │   ├── invite.d.ts
            │       │   │   │       │   ├── invite.js
            │       │   │   │       │   ├── member.d.ts
            │       │   │   │       │   ├── member.js
            │       │   │   │       │   ├── message.d.ts
            │       │   │   │       │   ├── message.js
            │       │   │   │       │   ├── webhook.d.ts
            │       │   │   │       │   └── webhook.js
            │       │   │   │       └── user/
            │       │   │   │           ├── userBinding.d.ts
            │       │   │   │           ├── userBinding.js
            │       │   │   │           ├── userChannel.d.ts
            │       │   │   │           └── userChannel.js
            │       │   │   └── v3/
            │       │   │       ├── channel.d.ts
            │       │   │       └── channel.js
            │       │   ├── content/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── content.d.ts
            │       │   │   │   ├── content.js
            │       │   │   │   ├── contentAndApprovals.d.ts
            │       │   │   │   ├── contentAndApprovals.js
            │       │   │   │   ├── legacyContent.d.ts
            │       │   │   │   ├── legacyContent.js
            │       │   │   │   └── content/
            │       │   │   │       ├── approvalCreate.d.ts
            │       │   │   │       ├── approvalCreate.js
            │       │   │   │       ├── approvalFetch.d.ts
            │       │   │   │       └── approvalFetch.js
            │       │   │   └── v2/
            │       │   │       ├── content.d.ts
            │       │   │       ├── content.js
            │       │   │       ├── contentAndApprovals.d.ts
            │       │   │       └── contentAndApprovals.js
            │       │   ├── conversations/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── addressConfiguration.d.ts
            │       │   │       ├── addressConfiguration.js
            │       │   │       ├── configuration.d.ts
            │       │   │       ├── configuration.js
            │       │   │       ├── conversation.d.ts
            │       │   │       ├── conversation.js
            │       │   │       ├── conversationWithParticipants.d.ts
            │       │   │       ├── conversationWithParticipants.js
            │       │   │       ├── credential.d.ts
            │       │   │       ├── credential.js
            │       │   │       ├── participantConversation.d.ts
            │       │   │       ├── participantConversation.js
            │       │   │       ├── role.d.ts
            │       │   │       ├── role.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       ├── user.d.ts
            │       │   │       ├── user.js
            │       │   │       ├── configuration/
            │       │   │       │   ├── webhook.d.ts
            │       │   │       │   └── webhook.js
            │       │   │       ├── conversation/
            │       │   │       │   ├── message.d.ts
            │       │   │       │   ├── message.js
            │       │   │       │   ├── participant.d.ts
            │       │   │       │   ├── participant.js
            │       │   │       │   ├── webhook.d.ts
            │       │   │       │   ├── webhook.js
            │       │   │       │   └── message/
            │       │   │       │       ├── deliveryReceipt.d.ts
            │       │   │       │       └── deliveryReceipt.js
            │       │   │       ├── service/
            │       │   │       │   ├── binding.d.ts
            │       │   │       │   ├── binding.js
            │       │   │       │   ├── configuration.d.ts
            │       │   │       │   ├── configuration.js
            │       │   │       │   ├── conversation.d.ts
            │       │   │       │   ├── conversation.js
            │       │   │       │   ├── conversationWithParticipants.d.ts
            │       │   │       │   ├── conversationWithParticipants.js
            │       │   │       │   ├── participantConversation.d.ts
            │       │   │       │   ├── participantConversation.js
            │       │   │       │   ├── role.d.ts
            │       │   │       │   ├── role.js
            │       │   │       │   ├── user.d.ts
            │       │   │       │   ├── user.js
            │       │   │       │   ├── configuration/
            │       │   │       │   │   ├── notification.d.ts
            │       │   │       │   │   ├── notification.js
            │       │   │       │   │   ├── webhook.d.ts
            │       │   │       │   │   └── webhook.js
            │       │   │       │   ├── conversation/
            │       │   │       │   │   ├── message.d.ts
            │       │   │       │   │   ├── message.js
            │       │   │       │   │   ├── participant.d.ts
            │       │   │       │   │   ├── participant.js
            │       │   │       │   │   ├── webhook.d.ts
            │       │   │       │   │   ├── webhook.js
            │       │   │       │   │   └── message/
            │       │   │       │   │       ├── deliveryReceipt.d.ts
            │       │   │       │   │       └── deliveryReceipt.js
            │       │   │       │   └── user/
            │       │   │       │       ├── userConversation.d.ts
            │       │   │       │       └── userConversation.js
            │       │   │       └── user/
            │       │   │           ├── userConversation.d.ts
            │       │   │           └── userConversation.js
            │       │   ├── events/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── eventType.d.ts
            │       │   │       ├── eventType.js
            │       │   │       ├── schema.d.ts
            │       │   │       ├── schema.js
            │       │   │       ├── sink.d.ts
            │       │   │       ├── sink.js
            │       │   │       ├── subscription.d.ts
            │       │   │       ├── subscription.js
            │       │   │       ├── schema/
            │       │   │       │   ├── schemaVersion.d.ts
            │       │   │       │   └── schemaVersion.js
            │       │   │       ├── sink/
            │       │   │       │   ├── sinkTest.d.ts
            │       │   │       │   ├── sinkTest.js
            │       │   │       │   ├── sinkValidate.d.ts
            │       │   │       │   └── sinkValidate.js
            │       │   │       └── subscription/
            │       │   │           ├── subscribedEvent.d.ts
            │       │   │           └── subscribedEvent.js
            │       │   ├── flexApi/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── assessments.d.ts
            │       │   │   │   ├── assessments.js
            │       │   │   │   ├── channel.d.ts
            │       │   │   │   ├── channel.js
            │       │   │   │   ├── configuration.d.ts
            │       │   │   │   ├── configuration.js
            │       │   │   │   ├── flexFlow.d.ts
            │       │   │   │   ├── flexFlow.js
            │       │   │   │   ├── insightsAssessmentsComment.d.ts
            │       │   │   │   ├── insightsAssessmentsComment.js
            │       │   │   │   ├── insightsConversations.d.ts
            │       │   │   │   ├── insightsConversations.js
            │       │   │   │   ├── insightsQuestionnaires.d.ts
            │       │   │   │   ├── insightsQuestionnaires.js
            │       │   │   │   ├── insightsQuestionnairesCategory.d.ts
            │       │   │   │   ├── insightsQuestionnairesCategory.js
            │       │   │   │   ├── insightsQuestionnairesQuestion.d.ts
            │       │   │   │   ├── insightsQuestionnairesQuestion.js
            │       │   │   │   ├── insightsSegments.d.ts
            │       │   │   │   ├── insightsSegments.js
            │       │   │   │   ├── insightsSession.d.ts
            │       │   │   │   ├── insightsSession.js
            │       │   │   │   ├── insightsSettingsAnswerSets.d.ts
            │       │   │   │   ├── insightsSettingsAnswerSets.js
            │       │   │   │   ├── insightsSettingsComment.d.ts
            │       │   │   │   ├── insightsSettingsComment.js
            │       │   │   │   ├── insightsUserRoles.d.ts
            │       │   │   │   ├── insightsUserRoles.js
            │       │   │   │   ├── interaction.d.ts
            │       │   │   │   ├── interaction.js
            │       │   │   │   ├── plugin.d.ts
            │       │   │   │   ├── plugin.js
            │       │   │   │   ├── pluginArchive.d.ts
            │       │   │   │   ├── pluginArchive.js
            │       │   │   │   ├── pluginConfiguration.d.ts
            │       │   │   │   ├── pluginConfiguration.js
            │       │   │   │   ├── pluginConfigurationArchive.d.ts
            │       │   │   │   ├── pluginConfigurationArchive.js
            │       │   │   │   ├── pluginRelease.d.ts
            │       │   │   │   ├── pluginRelease.js
            │       │   │   │   ├── pluginVersionArchive.d.ts
            │       │   │   │   ├── pluginVersionArchive.js
            │       │   │   │   ├── provisioningStatus.d.ts
            │       │   │   │   ├── provisioningStatus.js
            │       │   │   │   ├── webChannel.d.ts
            │       │   │   │   ├── webChannel.js
            │       │   │   │   ├── interaction/
            │       │   │   │   │   ├── interactionChannel.d.ts
            │       │   │   │   │   ├── interactionChannel.js
            │       │   │   │   │   └── interactionChannel/
            │       │   │   │   │       ├── interactionChannelInvite.d.ts
            │       │   │   │   │       ├── interactionChannelInvite.js
            │       │   │   │   │       ├── interactionChannelParticipant.d.ts
            │       │   │   │   │       └── interactionChannelParticipant.js
            │       │   │   │   ├── plugin/
            │       │   │   │   │   ├── pluginVersions.d.ts
            │       │   │   │   │   └── pluginVersions.js
            │       │   │   │   └── pluginConfiguration/
            │       │   │   │       ├── configuredPlugin.d.ts
            │       │   │   │       └── configuredPlugin.js
            │       │   │   └── v2/
            │       │   │       ├── flexUser.d.ts
            │       │   │       ├── flexUser.js
            │       │   │       ├── webChannels.d.ts
            │       │   │       └── webChannels.js
            │       │   ├── frontlineApi/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── user.d.ts
            │       │   │       └── user.js
            │       │   ├── iam/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── apiKey.d.ts
            │       │   │       ├── apiKey.js
            │       │   │       ├── getApiKeys.d.ts
            │       │   │       ├── getApiKeys.js
            │       │   │       ├── key.d.ts
            │       │   │       └── key.js
            │       │   ├── insights/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── call.d.ts
            │       │   │       ├── call.js
            │       │   │       ├── callSummaries.d.ts
            │       │   │       ├── callSummaries.js
            │       │   │       ├── conference.d.ts
            │       │   │       ├── conference.js
            │       │   │       ├── room.d.ts
            │       │   │       ├── room.js
            │       │   │       ├── setting.d.ts
            │       │   │       ├── setting.js
            │       │   │       ├── call/
            │       │   │       │   ├── annotation.d.ts
            │       │   │       │   ├── annotation.js
            │       │   │       │   ├── callSummary.d.ts
            │       │   │       │   ├── callSummary.js
            │       │   │       │   ├── event.d.ts
            │       │   │       │   ├── event.js
            │       │   │       │   ├── metric.d.ts
            │       │   │       │   └── metric.js
            │       │   │       ├── conference/
            │       │   │       │   ├── conferenceParticipant.d.ts
            │       │   │       │   └── conferenceParticipant.js
            │       │   │       └── room/
            │       │   │           ├── participant.d.ts
            │       │   │           └── participant.js
            │       │   ├── intelligence/
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   └── v2/
            │       │   │       ├── customOperator.d.ts
            │       │   │       ├── customOperator.js
            │       │   │       ├── operator.d.ts
            │       │   │       ├── operator.js
            │       │   │       ├── operatorAttachment.d.ts
            │       │   │       ├── operatorAttachment.js
            │       │   │       ├── operatorAttachments.d.ts
            │       │   │       ├── operatorAttachments.js
            │       │   │       ├── operatorType.d.ts
            │       │   │       ├── operatorType.js
            │       │   │       ├── prebuiltOperator.d.ts
            │       │   │       ├── prebuiltOperator.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       ├── transcript.d.ts
            │       │   │       ├── transcript.js
            │       │   │       └── transcript/
            │       │   │           ├── media.d.ts
            │       │   │           ├── media.js
            │       │   │           ├── operatorResult.d.ts
            │       │   │           ├── operatorResult.js
            │       │   │           ├── sentence.d.ts
            │       │   │           └── sentence.js
            │       │   ├── ipMessaging/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── credential.d.ts
            │       │   │   │   ├── credential.js
            │       │   │   │   ├── service.d.ts
            │       │   │   │   ├── service.js
            │       │   │   │   └── service/
            │       │   │   │       ├── channel.d.ts
            │       │   │   │       ├── channel.js
            │       │   │   │       ├── role.d.ts
            │       │   │   │       ├── role.js
            │       │   │   │       ├── user.d.ts
            │       │   │   │       ├── user.js
            │       │   │   │       ├── channel/
            │       │   │   │       │   ├── invite.d.ts
            │       │   │   │       │   ├── invite.js
            │       │   │   │       │   ├── member.d.ts
            │       │   │   │       │   ├── member.js
            │       │   │   │       │   ├── message.d.ts
            │       │   │   │       │   └── message.js
            │       │   │   │       └── user/
            │       │   │   │           ├── userChannel.d.ts
            │       │   │   │           └── userChannel.js
            │       │   │   └── v2/
            │       │   │       ├── credential.d.ts
            │       │   │       ├── credential.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       └── service/
            │       │   │           ├── binding.d.ts
            │       │   │           ├── binding.js
            │       │   │           ├── channel.d.ts
            │       │   │           ├── channel.js
            │       │   │           ├── role.d.ts
            │       │   │           ├── role.js
            │       │   │           ├── user.d.ts
            │       │   │           ├── user.js
            │       │   │           ├── channel/
            │       │   │           │   ├── invite.d.ts
            │       │   │           │   ├── invite.js
            │       │   │           │   ├── member.d.ts
            │       │   │           │   ├── member.js
            │       │   │           │   ├── message.d.ts
            │       │   │           │   ├── message.js
            │       │   │           │   ├── webhook.d.ts
            │       │   │           │   └── webhook.js
            │       │   │           └── user/
            │       │   │               ├── userBinding.d.ts
            │       │   │               ├── userBinding.js
            │       │   │               ├── userChannel.d.ts
            │       │   │               └── userChannel.js
            │       │   ├── lookups/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── phoneNumber.d.ts
            │       │   │   │   └── phoneNumber.js
            │       │   │   └── v2/
            │       │   │       ├── phoneNumber.d.ts
            │       │   │       └── phoneNumber.js
            │       │   ├── marketplace/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── availableAddOn.d.ts
            │       │   │       ├── availableAddOn.js
            │       │   │       ├── installedAddOn.d.ts
            │       │   │       ├── installedAddOn.js
            │       │   │       ├── moduleData.d.ts
            │       │   │       ├── moduleData.js
            │       │   │       ├── moduleDataManagement.d.ts
            │       │   │       ├── moduleDataManagement.js
            │       │   │       ├── referralConversion.d.ts
            │       │   │       ├── referralConversion.js
            │       │   │       ├── availableAddOn/
            │       │   │       │   ├── availableAddOnExtension.d.ts
            │       │   │       │   └── availableAddOnExtension.js
            │       │   │       └── installedAddOn/
            │       │   │           ├── installedAddOnExtension.d.ts
            │       │   │           ├── installedAddOnExtension.js
            │       │   │           ├── installedAddOnUsage.d.ts
            │       │   │           └── installedAddOnUsage.js
            │       │   ├── messaging/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── brandRegistration.d.ts
            │       │   │       ├── brandRegistration.js
            │       │   │       ├── deactivations.d.ts
            │       │   │       ├── deactivations.js
            │       │   │       ├── domainCerts.d.ts
            │       │   │       ├── domainCerts.js
            │       │   │       ├── domainConfig.d.ts
            │       │   │       ├── domainConfig.js
            │       │   │       ├── domainConfigMessagingService.d.ts
            │       │   │       ├── domainConfigMessagingService.js
            │       │   │       ├── externalCampaign.d.ts
            │       │   │       ├── externalCampaign.js
            │       │   │       ├── linkshorteningMessagingService.d.ts
            │       │   │       ├── linkshorteningMessagingService.js
            │       │   │       ├── linkshorteningMessagingServiceDomainAssociation.d.ts
            │       │   │       ├── linkshorteningMessagingServiceDomainAssociation.js
            │       │   │       ├── requestManagedCert.d.ts
            │       │   │       ├── requestManagedCert.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       ├── tollfreeVerification.d.ts
            │       │   │       ├── tollfreeVerification.js
            │       │   │       ├── usecase.d.ts
            │       │   │       ├── usecase.js
            │       │   │       ├── brandRegistration/
            │       │   │       │   ├── brandRegistrationOtp.d.ts
            │       │   │       │   ├── brandRegistrationOtp.js
            │       │   │       │   ├── brandVetting.d.ts
            │       │   │       │   └── brandVetting.js
            │       │   │       └── service/
            │       │   │           ├── alphaSender.d.ts
            │       │   │           ├── alphaSender.js
            │       │   │           ├── channelSender.d.ts
            │       │   │           ├── channelSender.js
            │       │   │           ├── phoneNumber.d.ts
            │       │   │           ├── phoneNumber.js
            │       │   │           ├── shortCode.d.ts
            │       │   │           ├── shortCode.js
            │       │   │           ├── usAppToPerson.d.ts
            │       │   │           ├── usAppToPerson.js
            │       │   │           ├── usAppToPersonUsecase.d.ts
            │       │   │           └── usAppToPersonUsecase.js
            │       │   ├── microvisor/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── accountConfig.d.ts
            │       │   │       ├── accountConfig.js
            │       │   │       ├── accountSecret.d.ts
            │       │   │       ├── accountSecret.js
            │       │   │       ├── app.d.ts
            │       │   │       ├── app.js
            │       │   │       ├── device.d.ts
            │       │   │       ├── device.js
            │       │   │       ├── app/
            │       │   │       │   ├── appManifest.d.ts
            │       │   │       │   └── appManifest.js
            │       │   │       └── device/
            │       │   │           ├── deviceConfig.d.ts
            │       │   │           ├── deviceConfig.js
            │       │   │           ├── deviceSecret.d.ts
            │       │   │           └── deviceSecret.js
            │       │   ├── monitor/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── alert.d.ts
            │       │   │       ├── alert.js
            │       │   │       ├── event.d.ts
            │       │   │       └── event.js
            │       │   ├── notify/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── credential.d.ts
            │       │   │       ├── credential.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       └── service/
            │       │   │           ├── binding.d.ts
            │       │   │           ├── binding.js
            │       │   │           ├── notification.d.ts
            │       │   │           └── notification.js
            │       │   ├── numbers/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── bulkEligibility.d.ts
            │       │   │   │   ├── bulkEligibility.js
            │       │   │   │   ├── eligibility.d.ts
            │       │   │   │   ├── eligibility.js
            │       │   │   │   ├── portingPortIn.d.ts
            │       │   │   │   ├── portingPortIn.js
            │       │   │   │   ├── portingPortInPhoneNumber.d.ts
            │       │   │   │   ├── portingPortInPhoneNumber.js
            │       │   │   │   ├── portingPortability.d.ts
            │       │   │   │   ├── portingPortability.js
            │       │   │   │   ├── portingWebhookConfiguration.d.ts
            │       │   │   │   ├── portingWebhookConfiguration.js
            │       │   │   │   ├── portingWebhookConfigurationDelete.d.ts
            │       │   │   │   ├── portingWebhookConfigurationDelete.js
            │       │   │   │   ├── signingRequestConfiguration.d.ts
            │       │   │   │   ├── signingRequestConfiguration.js
            │       │   │   │   ├── webhook.d.ts
            │       │   │   │   └── webhook.js
            │       │   │   └── v2/
            │       │   │       ├── authorizationDocument.d.ts
            │       │   │       ├── authorizationDocument.js
            │       │   │       ├── bulkHostedNumberOrder.d.ts
            │       │   │       ├── bulkHostedNumberOrder.js
            │       │   │       ├── bundleClone.d.ts
            │       │   │       ├── bundleClone.js
            │       │   │       ├── hostedNumberOrder.d.ts
            │       │   │       ├── hostedNumberOrder.js
            │       │   │       ├── regulatoryCompliance.d.ts
            │       │   │       ├── regulatoryCompliance.js
            │       │   │       ├── authorizationDocument/
            │       │   │       │   ├── dependentHostedNumberOrder.d.ts
            │       │   │       │   └── dependentHostedNumberOrder.js
            │       │   │       └── regulatoryCompliance/
            │       │   │           ├── bundle.d.ts
            │       │   │           ├── bundle.js
            │       │   │           ├── endUser.d.ts
            │       │   │           ├── endUser.js
            │       │   │           ├── endUserType.d.ts
            │       │   │           ├── endUserType.js
            │       │   │           ├── regulation.d.ts
            │       │   │           ├── regulation.js
            │       │   │           ├── supportingDocument.d.ts
            │       │   │           ├── supportingDocument.js
            │       │   │           ├── supportingDocumentType.d.ts
            │       │   │           ├── supportingDocumentType.js
            │       │   │           └── bundle/
            │       │   │               ├── bundleCopy.d.ts
            │       │   │               ├── bundleCopy.js
            │       │   │               ├── evaluation.d.ts
            │       │   │               ├── evaluation.js
            │       │   │               ├── itemAssignment.d.ts
            │       │   │               ├── itemAssignment.js
            │       │   │               ├── replaceItems.d.ts
            │       │   │               └── replaceItems.js
            │       │   ├── oauth/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── authorize.d.ts
            │       │   │       ├── authorize.js
            │       │   │       ├── token.d.ts
            │       │   │       └── token.js
            │       │   ├── preview/
            │       │   │   ├── HostedNumbers.d.ts
            │       │   │   ├── HostedNumbers.js
            │       │   │   ├── Marketplace.d.ts
            │       │   │   ├── Marketplace.js
            │       │   │   ├── Sync.d.ts
            │       │   │   ├── Sync.js
            │       │   │   ├── Wireless.d.ts
            │       │   │   ├── Wireless.js
            │       │   │   ├── hosted_numbers/
            │       │   │   │   ├── authorizationDocument.d.ts
            │       │   │   │   ├── authorizationDocument.js
            │       │   │   │   ├── hostedNumberOrder.d.ts
            │       │   │   │   ├── hostedNumberOrder.js
            │       │   │   │   └── authorizationDocument/
            │       │   │   │       ├── dependentHostedNumberOrder.d.ts
            │       │   │   │       └── dependentHostedNumberOrder.js
            │       │   │   ├── marketplace/
            │       │   │   │   ├── availableAddOn.d.ts
            │       │   │   │   ├── availableAddOn.js
            │       │   │   │   ├── installedAddOn.d.ts
            │       │   │   │   ├── installedAddOn.js
            │       │   │   │   ├── availableAddOn/
            │       │   │   │   │   ├── availableAddOnExtension.d.ts
            │       │   │   │   │   └── availableAddOnExtension.js
            │       │   │   │   └── installedAddOn/
            │       │   │   │       ├── installedAddOnExtension.d.ts
            │       │   │   │       └── installedAddOnExtension.js
            │       │   │   ├── sync/
            │       │   │   │   ├── service.d.ts
            │       │   │   │   ├── service.js
            │       │   │   │   └── service/
            │       │   │   │       ├── document.d.ts
            │       │   │   │       ├── document.js
            │       │   │   │       ├── syncList.d.ts
            │       │   │   │       ├── syncList.js
            │       │   │   │       ├── syncMap.d.ts
            │       │   │   │       ├── syncMap.js
            │       │   │   │       ├── document/
            │       │   │   │       │   ├── documentPermission.d.ts
            │       │   │   │       │   └── documentPermission.js
            │       │   │   │       ├── syncList/
            │       │   │   │       │   ├── syncListItem.d.ts
            │       │   │   │       │   ├── syncListItem.js
            │       │   │   │       │   ├── syncListPermission.d.ts
            │       │   │   │       │   └── syncListPermission.js
            │       │   │   │       └── syncMap/
            │       │   │   │           ├── syncMapItem.d.ts
            │       │   │   │           ├── syncMapItem.js
            │       │   │   │           ├── syncMapPermission.d.ts
            │       │   │   │           └── syncMapPermission.js
            │       │   │   └── wireless/
            │       │   │       ├── command.d.ts
            │       │   │       ├── command.js
            │       │   │       ├── ratePlan.d.ts
            │       │   │       ├── ratePlan.js
            │       │   │       ├── sim.d.ts
            │       │   │       ├── sim.js
            │       │   │       └── sim/
            │       │   │           ├── usage.d.ts
            │       │   │           └── usage.js
            │       │   ├── previewIam/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── Versionless.d.ts
            │       │   │   ├── Versionless.js
            │       │   │   ├── v1/
            │       │   │   │   ├── authorize.d.ts
            │       │   │   │   ├── authorize.js
            │       │   │   │   ├── token.d.ts
            │       │   │   │   └── token.js
            │       │   │   └── versionless/
            │       │   │       ├── organization.d.ts
            │       │   │       ├── organization.js
            │       │   │       └── organization/
            │       │   │           ├── account.d.ts
            │       │   │           ├── account.js
            │       │   │           ├── roleAssignment.d.ts
            │       │   │           ├── roleAssignment.js
            │       │   │           ├── user.d.ts
            │       │   │           └── user.js
            │       │   ├── pricing/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── messaging.d.ts
            │       │   │   │   ├── messaging.js
            │       │   │   │   ├── phoneNumber.d.ts
            │       │   │   │   ├── phoneNumber.js
            │       │   │   │   ├── voice.d.ts
            │       │   │   │   ├── voice.js
            │       │   │   │   ├── messaging/
            │       │   │   │   │   ├── country.d.ts
            │       │   │   │   │   └── country.js
            │       │   │   │   ├── phoneNumber/
            │       │   │   │   │   ├── country.d.ts
            │       │   │   │   │   └── country.js
            │       │   │   │   └── voice/
            │       │   │   │       ├── country.d.ts
            │       │   │   │       ├── country.js
            │       │   │   │       ├── number.d.ts
            │       │   │   │       └── number.js
            │       │   │   └── v2/
            │       │   │       ├── country.d.ts
            │       │   │       ├── country.js
            │       │   │       ├── number.d.ts
            │       │   │       ├── number.js
            │       │   │       ├── voice.d.ts
            │       │   │       ├── voice.js
            │       │   │       └── voice/
            │       │   │           ├── country.d.ts
            │       │   │           ├── country.js
            │       │   │           ├── number.d.ts
            │       │   │           └── number.js
            │       │   ├── proxy/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       └── service/
            │       │   │           ├── phoneNumber.d.ts
            │       │   │           ├── phoneNumber.js
            │       │   │           ├── session.d.ts
            │       │   │           ├── session.js
            │       │   │           ├── shortCode.d.ts
            │       │   │           ├── shortCode.js
            │       │   │           └── session/
            │       │   │               ├── interaction.d.ts
            │       │   │               ├── interaction.js
            │       │   │               ├── participant.d.ts
            │       │   │               ├── participant.js
            │       │   │               └── participant/
            │       │   │                   ├── messageInteraction.d.ts
            │       │   │                   └── messageInteraction.js
            │       │   ├── routes/
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   └── v2/
            │       │   │       ├── phoneNumber.d.ts
            │       │   │       ├── phoneNumber.js
            │       │   │       ├── sipDomain.d.ts
            │       │   │       ├── sipDomain.js
            │       │   │       ├── trunk.d.ts
            │       │   │       └── trunk.js
            │       │   ├── serverless/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       └── service/
            │       │   │           ├── asset.d.ts
            │       │   │           ├── asset.js
            │       │   │           ├── build.d.ts
            │       │   │           ├── build.js
            │       │   │           ├── environment.d.ts
            │       │   │           ├── environment.js
            │       │   │           ├── function.d.ts
            │       │   │           ├── function.js
            │       │   │           ├── asset/
            │       │   │           │   ├── assetVersion.d.ts
            │       │   │           │   └── assetVersion.js
            │       │   │           ├── build/
            │       │   │           │   ├── buildStatus.d.ts
            │       │   │           │   └── buildStatus.js
            │       │   │           ├── environment/
            │       │   │           │   ├── deployment.d.ts
            │       │   │           │   ├── deployment.js
            │       │   │           │   ├── log.d.ts
            │       │   │           │   ├── log.js
            │       │   │           │   ├── variable.d.ts
            │       │   │           │   └── variable.js
            │       │   │           └── function/
            │       │   │               ├── functionVersion.d.ts
            │       │   │               ├── functionVersion.js
            │       │   │               └── functionVersion/
            │       │   │                   ├── functionVersionContent.d.ts
            │       │   │                   └── functionVersionContent.js
            │       │   ├── studio/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   ├── v1/
            │       │   │   │   ├── flow.d.ts
            │       │   │   │   ├── flow.js
            │       │   │   │   └── flow/
            │       │   │   │       ├── engagement.d.ts
            │       │   │   │       ├── engagement.js
            │       │   │   │       ├── execution.d.ts
            │       │   │   │       ├── execution.js
            │       │   │   │       ├── engagement/
            │       │   │   │       │   ├── engagementContext.d.ts
            │       │   │   │       │   ├── engagementContext.js
            │       │   │   │       │   ├── step.d.ts
            │       │   │   │       │   ├── step.js
            │       │   │   │       │   └── step/
            │       │   │   │       │       ├── stepContext.d.ts
            │       │   │   │       │       └── stepContext.js
            │       │   │   │       └── execution/
            │       │   │   │           ├── executionContext.d.ts
            │       │   │   │           ├── executionContext.js
            │       │   │   │           ├── executionStep.d.ts
            │       │   │   │           ├── executionStep.js
            │       │   │   │           └── executionStep/
            │       │   │   │               ├── executionStepContext.d.ts
            │       │   │   │               └── executionStepContext.js
            │       │   │   └── v2/
            │       │   │       ├── flow.d.ts
            │       │   │       ├── flow.js
            │       │   │       ├── flowValidate.d.ts
            │       │   │       ├── flowValidate.js
            │       │   │       └── flow/
            │       │   │           ├── execution.d.ts
            │       │   │           ├── execution.js
            │       │   │           ├── flowRevision.d.ts
            │       │   │           ├── flowRevision.js
            │       │   │           ├── flowTestUser.d.ts
            │       │   │           ├── flowTestUser.js
            │       │   │           └── execution/
            │       │   │               ├── executionContext.d.ts
            │       │   │               ├── executionContext.js
            │       │   │               ├── executionStep.d.ts
            │       │   │               ├── executionStep.js
            │       │   │               └── executionStep/
            │       │   │                   ├── executionStepContext.d.ts
            │       │   │                   └── executionStepContext.js
            │       │   ├── supersim/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── esimProfile.d.ts
            │       │   │       ├── esimProfile.js
            │       │   │       ├── fleet.d.ts
            │       │   │       ├── fleet.js
            │       │   │       ├── ipCommand.d.ts
            │       │   │       ├── ipCommand.js
            │       │   │       ├── network.d.ts
            │       │   │       ├── network.js
            │       │   │       ├── networkAccessProfile.d.ts
            │       │   │       ├── networkAccessProfile.js
            │       │   │       ├── settingsUpdate.d.ts
            │       │   │       ├── settingsUpdate.js
            │       │   │       ├── sim.d.ts
            │       │   │       ├── sim.js
            │       │   │       ├── smsCommand.d.ts
            │       │   │       ├── smsCommand.js
            │       │   │       ├── usageRecord.d.ts
            │       │   │       ├── usageRecord.js
            │       │   │       ├── networkAccessProfile/
            │       │   │       │   ├── networkAccessProfileNetwork.d.ts
            │       │   │       │   └── networkAccessProfileNetwork.js
            │       │   │       └── sim/
            │       │   │           ├── billingPeriod.d.ts
            │       │   │           ├── billingPeriod.js
            │       │   │           ├── simIpAddress.d.ts
            │       │   │           └── simIpAddress.js
            │       │   ├── sync/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       └── service/
            │       │   │           ├── document.d.ts
            │       │   │           ├── document.js
            │       │   │           ├── syncList.d.ts
            │       │   │           ├── syncList.js
            │       │   │           ├── syncMap.d.ts
            │       │   │           ├── syncMap.js
            │       │   │           ├── syncStream.d.ts
            │       │   │           ├── syncStream.js
            │       │   │           ├── document/
            │       │   │           │   ├── documentPermission.d.ts
            │       │   │           │   └── documentPermission.js
            │       │   │           ├── syncList/
            │       │   │           │   ├── syncListItem.d.ts
            │       │   │           │   ├── syncListItem.js
            │       │   │           │   ├── syncListPermission.d.ts
            │       │   │           │   └── syncListPermission.js
            │       │   │           ├── syncMap/
            │       │   │           │   ├── syncMapItem.d.ts
            │       │   │           │   ├── syncMapItem.js
            │       │   │           │   ├── syncMapPermission.d.ts
            │       │   │           │   └── syncMapPermission.js
            │       │   │           └── syncStream/
            │       │   │               ├── streamMessage.d.ts
            │       │   │               └── streamMessage.js
            │       │   ├── taskrouter/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── workspace.d.ts
            │       │   │       ├── workspace.js
            │       │   │       └── workspace/
            │       │   │           ├── activity.d.ts
            │       │   │           ├── activity.js
            │       │   │           ├── event.d.ts
            │       │   │           ├── event.js
            │       │   │           ├── task.d.ts
            │       │   │           ├── task.js
            │       │   │           ├── taskChannel.d.ts
            │       │   │           ├── taskChannel.js
            │       │   │           ├── taskQueue.d.ts
            │       │   │           ├── taskQueue.js
            │       │   │           ├── worker.d.ts
            │       │   │           ├── worker.js
            │       │   │           ├── workflow.d.ts
            │       │   │           ├── workflow.js
            │       │   │           ├── workspaceCumulativeStatistics.d.ts
            │       │   │           ├── workspaceCumulativeStatistics.js
            │       │   │           ├── workspaceRealTimeStatistics.d.ts
            │       │   │           ├── workspaceRealTimeStatistics.js
            │       │   │           ├── workspaceStatistics.d.ts
            │       │   │           ├── workspaceStatistics.js
            │       │   │           ├── task/
            │       │   │           │   ├── reservation.d.ts
            │       │   │           │   └── reservation.js
            │       │   │           ├── taskQueue/
            │       │   │           │   ├── taskQueueBulkRealTimeStatistics.d.ts
            │       │   │           │   ├── taskQueueBulkRealTimeStatistics.js
            │       │   │           │   ├── taskQueueCumulativeStatistics.d.ts
            │       │   │           │   ├── taskQueueCumulativeStatistics.js
            │       │   │           │   ├── taskQueueRealTimeStatistics.d.ts
            │       │   │           │   ├── taskQueueRealTimeStatistics.js
            │       │   │           │   ├── taskQueueStatistics.d.ts
            │       │   │           │   ├── taskQueueStatistics.js
            │       │   │           │   ├── taskQueuesStatistics.d.ts
            │       │   │           │   └── taskQueuesStatistics.js
            │       │   │           ├── worker/
            │       │   │           │   ├── reservation.d.ts
            │       │   │           │   ├── reservation.js
            │       │   │           │   ├── workerChannel.d.ts
            │       │   │           │   ├── workerChannel.js
            │       │   │           │   ├── workerStatistics.d.ts
            │       │   │           │   ├── workerStatistics.js
            │       │   │           │   ├── workersCumulativeStatistics.d.ts
            │       │   │           │   ├── workersCumulativeStatistics.js
            │       │   │           │   ├── workersRealTimeStatistics.d.ts
            │       │   │           │   ├── workersRealTimeStatistics.js
            │       │   │           │   ├── workersStatistics.d.ts
            │       │   │           │   └── workersStatistics.js
            │       │   │           └── workflow/
            │       │   │               ├── workflowCumulativeStatistics.d.ts
            │       │   │               ├── workflowCumulativeStatistics.js
            │       │   │               ├── workflowRealTimeStatistics.d.ts
            │       │   │               ├── workflowRealTimeStatistics.js
            │       │   │               ├── workflowStatistics.d.ts
            │       │   │               └── workflowStatistics.js
            │       │   ├── trunking/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── trunk.d.ts
            │       │   │       ├── trunk.js
            │       │   │       └── trunk/
            │       │   │           ├── credentialList.d.ts
            │       │   │           ├── credentialList.js
            │       │   │           ├── ipAccessControlList.d.ts
            │       │   │           ├── ipAccessControlList.js
            │       │   │           ├── originationUrl.d.ts
            │       │   │           ├── originationUrl.js
            │       │   │           ├── phoneNumber.d.ts
            │       │   │           ├── phoneNumber.js
            │       │   │           ├── recording.d.ts
            │       │   │           └── recording.js
            │       │   ├── trusthub/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── complianceInquiries.d.ts
            │       │   │       ├── complianceInquiries.js
            │       │   │       ├── complianceRegistrationInquiries.d.ts
            │       │   │       ├── complianceRegistrationInquiries.js
            │       │   │       ├── complianceTollfreeInquiries.d.ts
            │       │   │       ├── complianceTollfreeInquiries.js
            │       │   │       ├── customerProfiles.d.ts
            │       │   │       ├── customerProfiles.js
            │       │   │       ├── endUser.d.ts
            │       │   │       ├── endUser.js
            │       │   │       ├── endUserType.d.ts
            │       │   │       ├── endUserType.js
            │       │   │       ├── policies.d.ts
            │       │   │       ├── policies.js
            │       │   │       ├── supportingDocument.d.ts
            │       │   │       ├── supportingDocument.js
            │       │   │       ├── supportingDocumentType.d.ts
            │       │   │       ├── supportingDocumentType.js
            │       │   │       ├── trustProducts.d.ts
            │       │   │       ├── trustProducts.js
            │       │   │       ├── customerProfiles/
            │       │   │       │   ├── customerProfilesChannelEndpointAssignment.d.ts
            │       │   │       │   ├── customerProfilesChannelEndpointAssignment.js
            │       │   │       │   ├── customerProfilesEntityAssignments.d.ts
            │       │   │       │   ├── customerProfilesEntityAssignments.js
            │       │   │       │   ├── customerProfilesEvaluations.d.ts
            │       │   │       │   └── customerProfilesEvaluations.js
            │       │   │       └── trustProducts/
            │       │   │           ├── trustProductsChannelEndpointAssignment.d.ts
            │       │   │           ├── trustProductsChannelEndpointAssignment.js
            │       │   │           ├── trustProductsEntityAssignments.d.ts
            │       │   │           ├── trustProductsEntityAssignments.js
            │       │   │           ├── trustProductsEvaluations.d.ts
            │       │   │           └── trustProductsEvaluations.js
            │       │   ├── verify/
            │       │   │   ├── V2.d.ts
            │       │   │   ├── V2.js
            │       │   │   └── v2/
            │       │   │       ├── form.d.ts
            │       │   │       ├── form.js
            │       │   │       ├── safelist.d.ts
            │       │   │       ├── safelist.js
            │       │   │       ├── service.d.ts
            │       │   │       ├── service.js
            │       │   │       ├── template.d.ts
            │       │   │       ├── template.js
            │       │   │       ├── verificationAttempt.d.ts
            │       │   │       ├── verificationAttempt.js
            │       │   │       ├── verificationAttemptsSummary.d.ts
            │       │   │       ├── verificationAttemptsSummary.js
            │       │   │       └── service/
            │       │   │           ├── accessToken.d.ts
            │       │   │           ├── accessToken.js
            │       │   │           ├── entity.d.ts
            │       │   │           ├── entity.js
            │       │   │           ├── messagingConfiguration.d.ts
            │       │   │           ├── messagingConfiguration.js
            │       │   │           ├── rateLimit.d.ts
            │       │   │           ├── rateLimit.js
            │       │   │           ├── verification.d.ts
            │       │   │           ├── verification.js
            │       │   │           ├── verificationCheck.d.ts
            │       │   │           ├── verificationCheck.js
            │       │   │           ├── webhook.d.ts
            │       │   │           ├── webhook.js
            │       │   │           ├── entity/
            │       │   │           │   ├── challenge.d.ts
            │       │   │           │   ├── challenge.js
            │       │   │           │   ├── factor.d.ts
            │       │   │           │   ├── factor.js
            │       │   │           │   ├── newFactor.d.ts
            │       │   │           │   ├── newFactor.js
            │       │   │           │   └── challenge/
            │       │   │           │       ├── notification.d.ts
            │       │   │           │       └── notification.js
            │       │   │           └── rateLimit/
            │       │   │               ├── bucket.d.ts
            │       │   │               └── bucket.js
            │       │   ├── video/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── composition.d.ts
            │       │   │       ├── composition.js
            │       │   │       ├── compositionHook.d.ts
            │       │   │       ├── compositionHook.js
            │       │   │       ├── compositionSettings.d.ts
            │       │   │       ├── compositionSettings.js
            │       │   │       ├── recording.d.ts
            │       │   │       ├── recording.js
            │       │   │       ├── recordingSettings.d.ts
            │       │   │       ├── recordingSettings.js
            │       │   │       ├── room.d.ts
            │       │   │       ├── room.js
            │       │   │       └── room/
            │       │   │           ├── participant.d.ts
            │       │   │           ├── participant.js
            │       │   │           ├── recordingRules.d.ts
            │       │   │           ├── recordingRules.js
            │       │   │           ├── roomRecording.d.ts
            │       │   │           ├── roomRecording.js
            │       │   │           └── participant/
            │       │   │               ├── anonymize.d.ts
            │       │   │               ├── anonymize.js
            │       │   │               ├── publishedTrack.d.ts
            │       │   │               ├── publishedTrack.js
            │       │   │               ├── subscribeRules.d.ts
            │       │   │               ├── subscribeRules.js
            │       │   │               ├── subscribedTrack.d.ts
            │       │   │               └── subscribedTrack.js
            │       │   ├── voice/
            │       │   │   ├── V1.d.ts
            │       │   │   ├── V1.js
            │       │   │   └── v1/
            │       │   │       ├── archivedCall.d.ts
            │       │   │       ├── archivedCall.js
            │       │   │       ├── byocTrunk.d.ts
            │       │   │       ├── byocTrunk.js
            │       │   │       ├── connectionPolicy.d.ts
            │       │   │       ├── connectionPolicy.js
            │       │   │       ├── dialingPermissions.d.ts
            │       │   │       ├── dialingPermissions.js
            │       │   │       ├── ipRecord.d.ts
            │       │   │       ├── ipRecord.js
            │       │   │       ├── sourceIpMapping.d.ts
            │       │   │       ├── sourceIpMapping.js
            │       │   │       ├── connectionPolicy/
            │       │   │       │   ├── connectionPolicyTarget.d.ts
            │       │   │       │   └── connectionPolicyTarget.js
            │       │   │       └── dialingPermissions/
            │       │   │           ├── bulkCountryUpdate.d.ts
            │       │   │           ├── bulkCountryUpdate.js
            │       │   │           ├── country.d.ts
            │       │   │           ├── country.js
            │       │   │           ├── settings.d.ts
            │       │   │           ├── settings.js
            │       │   │           └── country/
            │       │   │               ├── highriskSpecialPrefix.d.ts
            │       │   │               └── highriskSpecialPrefix.js
            │       │   └── wireless/
            │       │       ├── V1.d.ts
            │       │       ├── V1.js
            │       │       └── v1/
            │       │           ├── command.d.ts
            │       │           ├── command.js
            │       │           ├── ratePlan.d.ts
            │       │           ├── ratePlan.js
            │       │           ├── sim.d.ts
            │       │           ├── sim.js
            │       │           ├── usageRecord.d.ts
            │       │           ├── usageRecord.js
            │       │           └── sim/
            │       │               ├── dataSession.d.ts
            │       │               ├── dataSession.js
            │       │               ├── usageRecord.d.ts
            │       │               └── usageRecord.js
            │       ├── twiml/
            │       │   ├── FaxResponse.d.ts
            │       │   ├── FaxResponse.js
            │       │   ├── MessagingResponse.d.ts
            │       │   ├── MessagingResponse.js
            │       │   ├── TwiML.d.ts
            │       │   ├── TwiML.js
            │       │   ├── VoiceResponse.d.ts
            │       │   └── VoiceResponse.js
            │       └── webhooks/
            │           ├── webhooks.d.ts
            │           └── webhooks.js
            ├── type-is/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── undici-types/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── agent.d.ts
            │   ├── api.d.ts
            │   ├── balanced-pool.d.ts
            │   ├── cache.d.ts
            │   ├── client.d.ts
            │   ├── connector.d.ts
            │   ├── content-type.d.ts
            │   ├── cookies.d.ts
            │   ├── diagnostics-channel.d.ts
            │   ├── dispatcher.d.ts
            │   ├── env-http-proxy-agent.d.ts
            │   ├── errors.d.ts
            │   ├── eventsource.d.ts
            │   ├── fetch.d.ts
            │   ├── file.d.ts
            │   ├── filereader.d.ts
            │   ├── formdata.d.ts
            │   ├── global-dispatcher.d.ts
            │   ├── global-origin.d.ts
            │   ├── handlers.d.ts
            │   ├── header.d.ts
            │   ├── index.d.ts
            │   ├── interceptors.d.ts
            │   ├── mock-agent.d.ts
            │   ├── mock-client.d.ts
            │   ├── mock-errors.d.ts
            │   ├── mock-interceptor.d.ts
            │   ├── mock-pool.d.ts
            │   ├── package.json
            │   ├── patch.d.ts
            │   ├── pool-stats.d.ts
            │   ├── pool.d.ts
            │   ├── proxy-agent.d.ts
            │   ├── readable.d.ts
            │   ├── retry-agent.d.ts
            │   ├── retry-handler.d.ts
            │   ├── util.d.ts
            │   ├── webidl.d.ts
            │   └── websocket.d.ts
            ├── unpipe/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── utils-merge/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── index.js
            │   ├── package.json
            │   └── .npmignore
            ├── uuid/
            │   ├── README.md
            │   ├── LICENSE.md
            │   ├── package.json
            │   └── dist/
            │       ├── cjs/
            │       │   ├── index.d.ts
            │       │   ├── index.js
            │       │   ├── max.d.ts
            │       │   ├── max.js
            │       │   ├── md5.d.ts
            │       │   ├── md5.js
            │       │   ├── native.d.ts
            │       │   ├── native.js
            │       │   ├── nil.d.ts
            │       │   ├── nil.js
            │       │   ├── package.json
            │       │   ├── parse.d.ts
            │       │   ├── parse.js
            │       │   ├── regex.d.ts
            │       │   ├── regex.js
            │       │   ├── rng.d.ts
            │       │   ├── rng.js
            │       │   ├── sha1.d.ts
            │       │   ├── sha1.js
            │       │   ├── stringify.d.ts
            │       │   ├── stringify.js
            │       │   ├── types.d.ts
            │       │   ├── types.js
            │       │   ├── uuid-bin.d.ts
            │       │   ├── uuid-bin.js
            │       │   ├── v1.d.ts
            │       │   ├── v1.js
            │       │   ├── v1ToV6.d.ts
            │       │   ├── v1ToV6.js
            │       │   ├── v3.d.ts
            │       │   ├── v3.js
            │       │   ├── v35.d.ts
            │       │   ├── v35.js
            │       │   ├── v4.d.ts
            │       │   ├── v4.js
            │       │   ├── v5.d.ts
            │       │   ├── v5.js
            │       │   ├── v6.d.ts
            │       │   ├── v6.js
            │       │   ├── v6ToV1.d.ts
            │       │   ├── v6ToV1.js
            │       │   ├── v7.d.ts
            │       │   ├── v7.js
            │       │   ├── validate.d.ts
            │       │   ├── validate.js
            │       │   ├── version.d.ts
            │       │   └── version.js
            │       ├── cjs-browser/
            │       │   ├── index.d.ts
            │       │   ├── index.js
            │       │   ├── max.d.ts
            │       │   ├── max.js
            │       │   ├── md5.d.ts
            │       │   ├── md5.js
            │       │   ├── native.d.ts
            │       │   ├── native.js
            │       │   ├── nil.d.ts
            │       │   ├── nil.js
            │       │   ├── package.json
            │       │   ├── parse.d.ts
            │       │   ├── parse.js
            │       │   ├── regex.d.ts
            │       │   ├── regex.js
            │       │   ├── rng.d.ts
            │       │   ├── rng.js
            │       │   ├── sha1.d.ts
            │       │   ├── sha1.js
            │       │   ├── stringify.d.ts
            │       │   ├── stringify.js
            │       │   ├── types.d.ts
            │       │   ├── types.js
            │       │   ├── uuid-bin.d.ts
            │       │   ├── uuid-bin.js
            │       │   ├── v1.d.ts
            │       │   ├── v1.js
            │       │   ├── v1ToV6.d.ts
            │       │   ├── v1ToV6.js
            │       │   ├── v3.d.ts
            │       │   ├── v3.js
            │       │   ├── v35.d.ts
            │       │   ├── v35.js
            │       │   ├── v4.d.ts
            │       │   ├── v4.js
            │       │   ├── v5.d.ts
            │       │   ├── v5.js
            │       │   ├── v6.d.ts
            │       │   ├── v6.js
            │       │   ├── v6ToV1.d.ts
            │       │   ├── v6ToV1.js
            │       │   ├── v7.d.ts
            │       │   ├── v7.js
            │       │   ├── validate.d.ts
            │       │   ├── validate.js
            │       │   ├── version.d.ts
            │       │   └── version.js
            │       ├── esm/
            │       │   ├── index.d.ts
            │       │   ├── index.js
            │       │   ├── max.d.ts
            │       │   ├── max.js
            │       │   ├── md5.d.ts
            │       │   ├── md5.js
            │       │   ├── native.d.ts
            │       │   ├── native.js
            │       │   ├── nil.d.ts
            │       │   ├── nil.js
            │       │   ├── parse.d.ts
            │       │   ├── parse.js
            │       │   ├── regex.d.ts
            │       │   ├── regex.js
            │       │   ├── rng.d.ts
            │       │   ├── rng.js
            │       │   ├── sha1.d.ts
            │       │   ├── sha1.js
            │       │   ├── stringify.d.ts
            │       │   ├── stringify.js
            │       │   ├── types.d.ts
            │       │   ├── types.js
            │       │   ├── uuid-bin.d.ts
            │       │   ├── uuid-bin.js
            │       │   ├── v1.d.ts
            │       │   ├── v1.js
            │       │   ├── v1ToV6.d.ts
            │       │   ├── v1ToV6.js
            │       │   ├── v3.d.ts
            │       │   ├── v3.js
            │       │   ├── v35.d.ts
            │       │   ├── v35.js
            │       │   ├── v4.d.ts
            │       │   ├── v4.js
            │       │   ├── v5.d.ts
            │       │   ├── v5.js
            │       │   ├── v6.d.ts
            │       │   ├── v6.js
            │       │   ├── v6ToV1.d.ts
            │       │   ├── v6ToV1.js
            │       │   ├── v7.d.ts
            │       │   ├── v7.js
            │       │   ├── validate.d.ts
            │       │   ├── validate.js
            │       │   ├── version.d.ts
            │       │   ├── version.js
            │       │   └── bin/
            │       │       └── uuid
            │       └── esm-browser/
            │           ├── index.d.ts
            │           ├── index.js
            │           ├── max.d.ts
            │           ├── max.js
            │           ├── md5.d.ts
            │           ├── md5.js
            │           ├── native.d.ts
            │           ├── native.js
            │           ├── nil.d.ts
            │           ├── nil.js
            │           ├── parse.d.ts
            │           ├── parse.js
            │           ├── regex.d.ts
            │           ├── regex.js
            │           ├── rng.d.ts
            │           ├── rng.js
            │           ├── sha1.d.ts
            │           ├── sha1.js
            │           ├── stringify.d.ts
            │           ├── stringify.js
            │           ├── types.d.ts
            │           ├── types.js
            │           ├── uuid-bin.d.ts
            │           ├── uuid-bin.js
            │           ├── v1.d.ts
            │           ├── v1.js
            │           ├── v1ToV6.d.ts
            │           ├── v1ToV6.js
            │           ├── v3.d.ts
            │           ├── v3.js
            │           ├── v35.d.ts
            │           ├── v35.js
            │           ├── v4.d.ts
            │           ├── v4.js
            │           ├── v5.d.ts
            │           ├── v5.js
            │           ├── v6.d.ts
            │           ├── v6.js
            │           ├── v6ToV1.d.ts
            │           ├── v6ToV1.js
            │           ├── v7.d.ts
            │           ├── v7.js
            │           ├── validate.d.ts
            │           ├── validate.js
            │           ├── version.d.ts
            │           └── version.js
            ├── vary/
            │   ├── README.md
            │   ├── HISTORY.md
            │   ├── LICENSE
            │   ├── index.js
            │   └── package.json
            ├── ws/
            │   ├── README.md
            │   ├── LICENSE
            │   ├── browser.js
            │   ├── index.js
            │   ├── package.json
            │   ├── wrapper.mjs
            │   └── lib/
            │       ├── buffer-util.js
            │       ├── constants.js
            │       ├── event-target.js
            │       ├── extension.js
            │       ├── limiter.js
            │       ├── permessage-deflate.js
            │       ├── receiver.js
            │       ├── sender.js
            │       ├── stream.js
            │       ├── subprotocol.js
            │       ├── validation.js
            │       ├── websocket-server.js
            │       └── websocket.js
            ├── xmlbuilder/
            │   ├── README.md
            │   ├── CHANGELOG.md
            │   ├── LICENSE
            │   ├── package.json
            │   ├── .nycrc
            │   ├── lib/
            │   │   ├── Derivation.js
            │   │   ├── DocumentPosition.js
            │   │   ├── NodeType.js
            │   │   ├── OperationType.js
            │   │   ├── Utility.js
            │   │   ├── WriterState.js
            │   │   ├── XMLAttribute.js
            │   │   ├── XMLCData.js
            │   │   ├── XMLCharacterData.js
            │   │   ├── XMLComment.js
            │   │   ├── XMLDOMConfiguration.js
            │   │   ├── XMLDOMErrorHandler.js
            │   │   ├── XMLDOMImplementation.js
            │   │   ├── XMLDOMStringList.js
            │   │   ├── XMLDTDAttList.js
            │   │   ├── XMLDTDElement.js
            │   │   ├── XMLDTDEntity.js
            │   │   ├── XMLDTDNotation.js
            │   │   ├── XMLDeclaration.js
            │   │   ├── XMLDocType.js
            │   │   ├── XMLDocument.js
            │   │   ├── XMLDocumentCB.js
            │   │   ├── XMLDocumentFragment.js
            │   │   ├── XMLDummy.js
            │   │   ├── XMLElement.js
            │   │   ├── XMLNamedNodeMap.js
            │   │   ├── XMLNode.js
            │   │   ├── XMLNodeFilter.js
            │   │   ├── XMLNodeList.js
            │   │   ├── XMLProcessingInstruction.js
            │   │   ├── XMLRaw.js
            │   │   ├── XMLStreamWriter.js
            │   │   ├── XMLStringWriter.js
            │   │   ├── XMLStringifier.js
            │   │   ├── XMLText.js
            │   │   ├── XMLTypeInfo.js
            │   │   ├── XMLUserDataHandler.js
            │   │   ├── XMLWriterBase.js
            │   │   └── index.js
            │   └── typings/
            │       └── index.d.ts
            └── .bin/
                ├── mime
                ├── mime
                ├── semver
                ├── semver
                ├── uuid
                └── uuid

================================================
File: client/README.md
================================================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh


================================================
File: client/eslint.config.js
================================================
import js from '@eslint/js'
import globals from 'globals'
import react from 'eslint-plugin-react'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    settings: { react: { version: '18.3' } },
    plugins: {
      react,
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...react.configs.recommended.rules,
      ...react.configs['jsx-runtime'].rules,
      ...reactHooks.configs.recommended.rules,
      'react/jsx-no-target-blank': 'off',
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]


================================================
File: client/index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


================================================
File: client/package.json
================================================
{
  "name": "client",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/material": "^6.4.0",
    "@reduxjs/toolkit": "^2.5.0",
    "axios": "^1.7.9",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-redux": "^9.2.0",
    "react-router-dom": "^7.1.3",
    "redux": "^5.0.1",
    "redux-persist": "^6.0.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@vitejs/plugin-react": "^4.3.4",
    "eslint": "^9.17.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "globals": "^15.14.0",
    "vite": "^6.0.5"
  }
}


================================================
File: client/vite.config.js
================================================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})


================================================
File: client/.gitignore
================================================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


================================================
File: client/src/App.jsx
================================================
import React, { useEffect } from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Intro from "./pages/intro";
import Room from "./pages/room";
import Join from "./pages/join";
import "./App.css";
import { connect } from "react-redux";
import { connectwithSocketIOServer } from "./sections/utils/wss";

function App() {
  useEffect(()=>{
    connectwithSocketIOServer();
  },[])

  return (
    <>
    <Routes>
      <Route path="/" index element={<Intro />} />
      <Route path="/room" element={<Room />} />
      <Route path="/join-room" element={<Join />} />
    </Routes>
    </>
  );
}

export default App;


================================================
File: client/src/app.css
================================================
html{
    margin: 0;
    padding: 0;
}

================================================
File: client/src/main.jsx
================================================

import ReactDOM from "react-dom/client"; // Import ReactDOM from react-dom/client 
import App from "./App"; // Import the main App component
import { BrowserRouter } from "react-router-dom";
import { Provider as ReduxProvider } from "react-redux";
import { persistor, store } from "./redux/store";
import { PersistGate } from "redux-persist/lib/integration/react";

ReactDOM.createRoot(document.getElementById("root")).render(
  // <React.StrictMode>
    <ReduxProvider store={store}>
      <PersistGate loading={null} persistor={persistor}>
        <BrowserRouter>
          <App />
        </BrowserRouter>
      </PersistGate>
    </ReduxProvider>
  // </React.StrictMode>
);


================================================
File: client/src/pages/room.jsx
================================================
import React, { useEffect } from "react";
import { Stack } from '@mui/material';
import Label from '../sections/rooms/label';
import Participants from '../sections/rooms/participants';
import Video from "../sections/rooms/video";
import Chat from "../sections/rooms/chat";
import * as webRTCHandler from '../sections/utils/webRTCHandler'
import { useSelector } from "react-redux";
import Overlay from "../sections/rooms/overlay";

const Room = () => {
  const {isRoomHost , identity , roomId, showOverlay} = useSelector((state) => state.app);
  useEffect(() => {
    webRTCHandler.localPreviewInitConnection(isRoomHost, identity, roomId)
  }, []);

  return (
    <Stack direction="row" alignItems="center" sx={{ position: 'relative', width: 1, height: 'calc(100vh - 64px)' }}>
      {/* Participants */}
      {/* Video Section */}
      <Video />
      {/* Group Chat Section */}
      {/* ID Label */}
      {/* <Label /> */}
      {showOverlay && <Overlay/>}
    </Stack>
  );
}

export default Room;

================================================
File: client/src/redux/rootReducer.js
================================================
import { combineReducers } from 'redux';
import storage from 'redux-persist/lib/storage';
import appReducer from './slices/app';

const rootPersistConfig = {
    key: 'root',
    storage, 
    keyPrefix : 'redux-',
    whitelist: [],
}

const rootReducer = combineReducers({
    app: appReducer,
});

export { rootPersistConfig, rootReducer };

================================================
File: client/src/redux/store.js
================================================
import { configureStore } from "@reduxjs/toolkit";
import { persistStore, persistReducer } from "redux-persist";
import { rootPersistConfig, rootReducer } from "./rootReducer";

const store = configureStore({
    reducer: persistReducer(rootPersistConfig, rootReducer),
    middleware: (getDefaultMiddleware) => getDefaultMiddleware({
        serializableCheck: false,
        immutableCheck: false,
    })
});

const persistor = persistStore(store);
export { store, persistor };

================================================
File: client/src/sections/rooms/label.jsx
================================================
import React from "react";
import { Box, Typography } from "@mui/material";

const Label = ({ roomId }) => {
  return (
    <Box
      sx={{
        position: "absolute",
        bottom: 20,
        right: 20,
        backgroundColor: "white",
        border: "2px solid black",
        borderRadius: "8px",
        padding: "10px 20px",
        textAlign: "center",
      }}
    >
      <Typography variant="h6" sx={{ fontWeight: "bold" }}>
        Your Meeting Room
      </Typography>
      <Typography variant="subtitle1">Room ID: {roomId || "Generating..."}</Typography>
    </Box>
  );
};

export default Label;


================================================
File: client/src/sections/rooms/overlay.jsx
================================================
import { Box, CircularProgress } from "@mui/material";

const Overlay = () => {
  return (
    <Box sx={{
        position: 'absolute',
        height: '100%',
        width: '100%',
        backgroundColor: 'rgba(240, 240, 240, 0.31)',
        display: 'flex',
        flexDirection: 'row',
        alignItems: 'center',   
        justifyContent: 'center',
    }}>
        <CircularProgress sx={{ color: 'black' }} />
    </Box>
  )
}

export default Overlay;

================================================
File: client/src/sections/utils/api.js
================================================
import axios from 'axios';

const serverAPI = "http://localhost:8000/api";

export const getRoomeExists = async (roomID) => {
    const response = await axios.get(`${serverAPI}/rooms-exists/${roomID}`);
    return response.data;

};

================================================
File: client/src/sections/utils/webRTCHandler.js
================================================
import { setShowOverlay } from "../../redux/slices/app";
import { store } from "../../redux/store";
import * as wss from "./wss";

const constraints = {
    audio: true,
    video: true,
}

let localstream;

export const localPreviewInitConnection = async (isRoomHost, identity, roomId=null ) => {
    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {
        console.log("Local Stream Received");
        store.dispatch(setShowOverlay(false));
        localstream = stream;
        showlocalVideoPreview(localstream);
        isRoomHost ? wss.createNewRoom(identity) : wss.joinRoom({roomID,identity }); 

    }).catch((err) => {
        console.log("error occured when trying to get an access to local stream");
        console.log(err);
    });
};

const showlocalVideoPreview = (stream) => {
    //show local video preview 
};

================================================
File: client/src/sections/utils/wss.js
================================================
import io from 'socket.io-client';

const server = 'http://localhost:8000';
let socket = null;

export const connectwithSocketIOServer = () => {
    socket = io(server);
    socket.on('connect', () => {
        console.log('Connected to socket server');
        console.log(socket.id);
    });
};

export const createNewRoom = (identity) => {
    //emit to server to create a new room
    const data = {
        identity,
    };
    socket.emit("create-new-room",data);
};

export const joinRoom = (roomId,identity) => {
       //emit to server to join a new room
    const data = {
        roomId,
        identity,
    };
    socket.emit("join-room",data);
};

================================================
File: server/package.json
================================================
{
  "name": "server",
  "version": "1.0.0",
  "description": "Server For Project LinkNest",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Nesar",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.21.2",
    "socket.io": "^4.8.1",
    "twilio": "^5.4.2",
    "uuid": "^11.0.5"
  }
}


================================================
File: server/node_modules/@socket.io/component-emitter/package.json
================================================
{
  "name": "@socket.io/component-emitter",
  "description": "Event emitter",
  "version": "3.1.2",
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "component": {
    "scripts": {
      "emitter/index.js": "index.js"
    }
  },
  "main": "./lib/cjs/index.js",
  "module": "./lib/esm/index.js",
  "types": "./lib/cjs/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/socketio/emitter.git"
  },
  "scripts": {
    "test": "make test"
  },
  "files": [
    "lib/"
  ]
}


================================================
File: server/node_modules/@socket.io/component-emitter/lib/cjs/package.json
================================================
{
  "name": "@socket.io/component-emitter",
  "type": "commonjs"
}


================================================
File: server/node_modules/@socket.io/component-emitter/lib/esm/package.json
================================================
{
  "name": "@socket.io/component-emitter",
  "type": "module"
}


================================================
File: server/node_modules/@types/cookie/README.md
================================================
# Installation
> `npm install --save @types/cookie`

# Summary
This package contains type definitions for cookie (https://github.com/jshttp/cookie).

# Details
Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cookie.

### Additional Details
 * Last updated: Tue, 06 Jul 2021 20:32:30 GMT
 * Dependencies: none
 * Global values: none

# Credits
These definitions were written by [Pine Mizune](https://github.com/pine), and [Piotr Błażejewicz](https://github.com/peterblazejewicz).


================================================
File: server/node_modules/@types/cookie/package.json
================================================
{
    "name": "@types/cookie",
    "version": "0.4.1",
    "description": "TypeScript definitions for cookie",
    "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cookie",
    "license": "MIT",
    "contributors": [
        {
            "name": "Pine Mizune",
            "url": "https://github.com/pine",
            "githubUsername": "pine"
        },
        {
            "name": "Piotr Błażejewicz",
            "url": "https://github.com/peterblazejewicz",
            "githubUsername": "peterblazejewicz"
        }
    ],
    "main": "",
    "types": "index.d.ts",
    "repository": {
        "type": "git",
        "url": "https://github.com/DefinitelyTyped/DefinitelyTyped.git",
        "directory": "types/cookie"
    },
    "scripts": {},
    "dependencies": {},
    "typesPublisherContentHash": "7d4a6dd505c896319459ae131b5fa8fc0a2ed25552db53dac87946119bb21559",
    "typeScriptVersion": "3.6"
}

================================================
File: server/node_modules/@types/cors/package.json
================================================
{
    "name": "@types/cors",
    "version": "2.8.17",
    "description": "TypeScript definitions for cors",
    "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cors",
    "license": "MIT",
    "contributors": [
        {
            "name": "Alan Plum",
            "githubUsername": "pluma",
            "url": "https://github.com/pluma"
        },
        {
            "name": "Gaurav Sharma",
            "githubUsername": "gtpan77",
            "url": "https://github.com/gtpan77"
        }
    ],
    "main": "",
    "types": "index.d.ts",
    "repository": {
        "type": "git",
        "url": "https://github.com/DefinitelyTyped/DefinitelyTyped.git",
        "directory": "types/cors"
    },
    "scripts": {},
    "dependencies": {
        "@types/node": "*"
    },
    "typesPublisherContentHash": "04d506dbb23d9e7a142bfb227d59c61102abec00fb40694bb64a8d9fe1f1a3a1",
    "typeScriptVersion": "4.5"
}

================================================
File: server/node_modules/@types/node/constants.d.ts
================================================
/** @deprecated since v6.3.0 - use constants property exposed by the relevant module instead. */
declare module "constants" {
    import { constants as osConstants, SignalConstants } from "node:os";
    import { constants as cryptoConstants } from "node:crypto";
    import { constants as fsConstants } from "node:fs";

    const exp:
        & typeof osConstants.errno
        & typeof osConstants.priority
        & SignalConstants
        & typeof cryptoConstants
        & typeof fsConstants;
    export = exp;
}

declare module "node:constants" {
    import constants = require("constants");
    export = constants;
}


================================================
File: server/node_modules/@types/node/globals.typedarray.d.ts
================================================
export {}; // Make this a module

declare global {
    namespace NodeJS {
        type TypedArray<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> =
            | Uint8Array<TArrayBuffer>
            | Uint8ClampedArray<TArrayBuffer>
            | Uint16Array<TArrayBuffer>
            | Uint32Array<TArrayBuffer>
            | Int8Array<TArrayBuffer>
            | Int16Array<TArrayBuffer>
            | Int32Array<TArrayBuffer>
            | BigUint64Array<TArrayBuffer>
            | BigInt64Array<TArrayBuffer>
            | Float32Array<TArrayBuffer>
            | Float64Array<TArrayBuffer>;
        type ArrayBufferView<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> =
            | TypedArray<TArrayBuffer>
            | DataView<TArrayBuffer>;
    }
}


================================================
File: server/node_modules/@types/node/assert/strict.d.ts
================================================
declare module "assert/strict" {
    import { strict } from "node:assert";
    export = strict;
}
declare module "node:assert/strict" {
    import { strict } from "node:assert";
    export = strict;
}


================================================
File: server/node_modules/@types/node/compatibility/disposable.d.ts
================================================
// Polyfills for the explicit resource management types added in TypeScript 5.2.
// TODO: remove once this package no longer supports TS 5.1, and replace with a
// <reference> to TypeScript's disposable library in index.d.ts.

interface SymbolConstructor {
    readonly dispose: unique symbol;
    readonly asyncDispose: unique symbol;
}

interface Disposable {
    [Symbol.dispose](): void;
}

interface AsyncDisposable {
    [Symbol.asyncDispose](): PromiseLike<void>;
}


================================================
File: server/node_modules/@types/node/compatibility/index.d.ts
================================================
// Declaration files in this directory contain types relating to TypeScript library features
// that are not included in all TypeScript versions supported by DefinitelyTyped, but
// which can be made backwards-compatible without needing `typesVersions`.
// If adding declarations to this directory, please specify which versions of TypeScript require them,
// so that they can be removed when no longer needed.

/// <reference path="disposable.d.ts" />
/// <reference path="indexable.d.ts" />
/// <reference path="iterators.d.ts" />


================================================
File: server/node_modules/@types/node/stream/consumers.d.ts
================================================
declare module "stream/consumers" {
    import { Blob as NodeBlob } from "node:buffer";
    import { Readable } from "node:stream";
    function buffer(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<Buffer>;
    function text(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<string>;
    function arrayBuffer(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<ArrayBuffer>;
    function blob(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<NodeBlob>;
    function json(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<unknown>;
}
declare module "node:stream/consumers" {
    export * from "stream/consumers";
}


================================================
File: server/node_modules/@types/node/ts5.6/globals.typedarray.d.ts
================================================
export {}; // Make this a module

declare global {
    namespace NodeJS {
        type TypedArray =
            | Uint8Array
            | Uint8ClampedArray
            | Uint16Array
            | Uint32Array
            | Int8Array
            | Int16Array
            | Int32Array
            | BigUint64Array
            | BigInt64Array
            | Float32Array
            | Float64Array;
        type ArrayBufferView = TypedArray | DataView;
    }
}


================================================
File: server/node_modules/agent-base/dist/src/promisify.d.ts
================================================
import { ClientRequest, RequestOptions, AgentCallbackCallback, AgentCallbackPromise } from './index';
declare type LegacyCallback = (req: ClientRequest, opts: RequestOptions, fn: AgentCallbackCallback) => void;
export default function promisify(fn: LegacyCallback): AgentCallbackPromise;
export {};


================================================
File: server/node_modules/agent-base/dist/src/promisify.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function promisify(fn) {
    return function (req, opts) {
        return new Promise((resolve, reject) => {
            fn.call(this, req, opts, (err, rtn) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(rtn);
                }
            });
        });
    };
}
exports.default = promisify;
//# sourceMappingURL=promisify.js.map

================================================
File: server/node_modules/agent-base/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/agent-base/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/agent-base/src/promisify.ts
================================================
import {
	Agent,
	ClientRequest,
	RequestOptions,
	AgentCallbackCallback,
	AgentCallbackPromise,
	AgentCallbackReturn
} from './index';

type LegacyCallback = (
	req: ClientRequest,
	opts: RequestOptions,
	fn: AgentCallbackCallback
) => void;

export default function promisify(fn: LegacyCallback): AgentCallbackPromise {
	return function(this: Agent, req: ClientRequest, opts: RequestOptions) {
		return new Promise((resolve, reject) => {
			fn.call(
				this,
				req,
				opts,
				(err: Error | null | undefined, rtn?: AgentCallbackReturn) => {
					if (err) {
						reject(err);
					} else {
						resolve(rtn);
					}
				}
			);
		});
	};
}


================================================
File: server/node_modules/array-flatten/package.json
================================================
{
  "name": "array-flatten",
  "version": "1.1.1",
  "description": "Flatten an array of nested arrays into a single flat array",
  "main": "array-flatten.js",
  "files": [
    "array-flatten.js",
    "LICENSE"
  ],
  "scripts": {
    "test": "istanbul cover _mocha -- -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/blakeembrey/array-flatten.git"
  },
  "keywords": [
    "array",
    "flatten",
    "arguments",
    "depth"
  ],
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/blakeembrey/array-flatten/issues"
  },
  "homepage": "https://github.com/blakeembrey/array-flatten",
  "devDependencies": {
    "istanbul": "^0.3.13",
    "mocha": "^2.2.4",
    "pre-commit": "^1.0.7",
    "standard": "^3.7.3"
  }
}


================================================
File: server/node_modules/asynckit/index.js
================================================
module.exports =
{
  parallel      : require('./parallel.js'),
  serial        : require('./serial.js'),
  serialOrdered : require('./serialOrdered.js')
};


================================================
File: server/node_modules/asynckit/parallel.js
================================================
var iterate    = require('./lib/iterate.js')
  , initState  = require('./lib/state.js')
  , terminator = require('./lib/terminator.js')
  ;

// Public API
module.exports = parallel;

/**
 * Runs iterator over provided array elements in parallel
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */
function parallel(list, iterator, callback)
{
  var state = initState(list);

  while (state.index < (state['keyedList'] || list).length)
  {
    iterate(list, iterator, state, function(error, result)
    {
      if (error)
      {
        callback(error, result);
        return;
      }

      // looks like it's the last one
      if (Object.keys(state.jobs).length === 0)
      {
        callback(null, state.results);
        return;
      }
    });

    state.index++;
  }

  return terminator.bind(state, callback);
}


================================================
File: server/node_modules/asynckit/serial.js
================================================
var serialOrdered = require('./serialOrdered.js');

// Public API
module.exports = serial;

/**
 * Runs iterator over provided array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */
function serial(list, iterator, callback)
{
  return serialOrdered(list, iterator, null, callback);
}


================================================
File: server/node_modules/asynckit/stream.js
================================================
var inherits              = require('util').inherits
  , Readable              = require('stream').Readable
  , ReadableAsyncKit      = require('./lib/readable_asynckit.js')
  , ReadableParallel      = require('./lib/readable_parallel.js')
  , ReadableSerial        = require('./lib/readable_serial.js')
  , ReadableSerialOrdered = require('./lib/readable_serial_ordered.js')
  ;

// API
module.exports =
{
  parallel      : ReadableParallel,
  serial        : ReadableSerial,
  serialOrdered : ReadableSerialOrdered, 
};

inherits(ReadableAsyncKit, Readable);

inherits(ReadableParallel, ReadableAsyncKit);
inherits(ReadableSerial, ReadableAsyncKit);
inherits(ReadableSerialOrdered, ReadableAsyncKit);


================================================
File: server/node_modules/asynckit/lib/abort.js
================================================
// API
module.exports = abort;

/**
 * Aborts leftover active jobs
 *
 * @param {object} state - current state object
 */
function abort(state)
{
  Object.keys(state.jobs).forEach(clean.bind(state));

  // reset leftover jobs
  state.jobs = {};
}

/**
 * Cleans up leftover job by invoking abort function for the provided job id
 *
 * @this  state
 * @param {string|number} key - job id to abort
 */
function clean(key)
{
  if (typeof this.jobs[key] == 'function')
  {
    this.jobs[key]();
  }
}


================================================
File: server/node_modules/asynckit/lib/async.js
================================================
var defer = require('./defer.js');

// API
module.exports = async;

/**
 * Runs provided callback asynchronously
 * even if callback itself is not
 *
 * @param   {function} callback - callback to invoke
 * @returns {function} - augmented callback
 */
function async(callback)
{
  var isAsync = false;

  // check if async happened
  defer(function() { isAsync = true; });

  return function async_callback(err, result)
  {
    if (isAsync)
    {
      callback(err, result);
    }
    else
    {
      defer(function nextTick_callback()
      {
        callback(err, result);
      });
    }
  };
}


================================================
File: server/node_modules/asynckit/lib/defer.js
================================================
module.exports = defer;

/**
 * Runs provided function on next iteration of the event loop
 *
 * @param {function} fn - function to run
 */
function defer(fn)
{
  var nextTick = typeof setImmediate == 'function'
    ? setImmediate
    : (
      typeof process == 'object' && typeof process.nextTick == 'function'
      ? process.nextTick
      : null
    );

  if (nextTick)
  {
    nextTick(fn);
  }
  else
  {
    setTimeout(fn, 0);
  }
}


================================================
File: server/node_modules/asynckit/lib/readable_parallel.js
================================================
var parallel = require('../parallel.js');

// API
module.exports = ReadableParallel;

/**
 * Streaming wrapper to `asynckit.parallel`
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {stream.Readable#}
 */
function ReadableParallel(list, iterator, callback)
{
  if (!(this instanceof ReadableParallel))
  {
    return new ReadableParallel(list, iterator, callback);
  }

  // turn on object mode
  ReadableParallel.super_.call(this, {objectMode: true});

  this._start(parallel, list, iterator, callback);
}


================================================
File: server/node_modules/asynckit/lib/readable_serial.js
================================================
var serial = require('../serial.js');

// API
module.exports = ReadableSerial;

/**
 * Streaming wrapper to `asynckit.serial`
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {stream.Readable#}
 */
function ReadableSerial(list, iterator, callback)
{
  if (!(this instanceof ReadableSerial))
  {
    return new ReadableSerial(list, iterator, callback);
  }

  // turn on object mode
  ReadableSerial.super_.call(this, {objectMode: true});

  this._start(serial, list, iterator, callback);
}


================================================
File: server/node_modules/asynckit/lib/readable_serial_ordered.js
================================================
var serialOrdered = require('../serialOrdered.js');

// API
module.exports = ReadableSerialOrdered;
// expose sort helpers
module.exports.ascending  = serialOrdered.ascending;
module.exports.descending = serialOrdered.descending;

/**
 * Streaming wrapper to `asynckit.serialOrdered`
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} sortMethod - custom sort function
 * @param   {function} callback - invoked when all elements processed
 * @returns {stream.Readable#}
 */
function ReadableSerialOrdered(list, iterator, sortMethod, callback)
{
  if (!(this instanceof ReadableSerialOrdered))
  {
    return new ReadableSerialOrdered(list, iterator, sortMethod, callback);
  }

  // turn on object mode
  ReadableSerialOrdered.super_.call(this, {objectMode: true});

  this._start(serialOrdered, list, iterator, sortMethod, callback);
}


================================================
File: server/node_modules/asynckit/lib/state.js
================================================
// API
module.exports = state;

/**
 * Creates initial state object
 * for iteration over list
 *
 * @param   {array|object} list - list to iterate over
 * @param   {function|null} sortMethod - function to use for keys sort,
 *                                     or `null` to keep them as is
 * @returns {object} - initial state object
 */
function state(list, sortMethod)
{
  var isNamedList = !Array.isArray(list)
    , initState =
    {
      index    : 0,
      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
      jobs     : {},
      results  : isNamedList ? {} : [],
      size     : isNamedList ? Object.keys(list).length : list.length
    }
    ;

  if (sortMethod)
  {
    // sort array keys based on it's values
    // sort object's keys just on own merit
    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)
    {
      return sortMethod(list[a], list[b]);
    });
  }

  return initState;
}


================================================
File: server/node_modules/asynckit/lib/terminator.js
================================================
var abort = require('./abort.js')
  , async = require('./async.js')
  ;

// API
module.exports = terminator;

/**
 * Terminates jobs in the attached state context
 *
 * @this  AsyncKitState#
 * @param {function} callback - final callback to invoke after termination
 */
function terminator(callback)
{
  if (!Object.keys(this.jobs).length)
  {
    return;
  }

  // fast forward iteration index
  this.index = this.size;

  // abort jobs
  abort(this);

  // send back results we have so far
  async(callback)(null, this.results);
}


================================================
File: server/node_modules/axios/MIGRATION_GUIDE.md
================================================
# Migration Guide

## 0.x.x -> 1.1.0


================================================
File: server/node_modules/axios/SECURITY.md
================================================
# Reporting a Vulnerability

If you discover a security vulnerability in axios please disclose it via [our huntr page](https://huntr.dev/repos/axios/axios/). Bounty eligibility, CVE assignment, response times and past reports are all there.


Thank you for improving the security of axios.


================================================
File: server/node_modules/axios/index.js
================================================
import axios from './lib/axios.js';

// This module is intended to unwrap Axios default export as named.
// Keep top-level export same with static properties
// so that it can keep same with es module or cjs
const {
  Axios,
  AxiosError,
  CanceledError,
  isCancel,
  CancelToken,
  VERSION,
  all,
  Cancel,
  isAxiosError,
  spread,
  toFormData,
  AxiosHeaders,
  HttpStatusCode,
  formToJSON,
  getAdapter,
  mergeConfig
} = axios;

export {
  axios as default,
  Axios,
  AxiosError,
  CanceledError,
  isCancel,
  CancelToken,
  VERSION,
  all,
  Cancel,
  isAxiosError,
  spread,
  toFormData,
  AxiosHeaders,
  HttpStatusCode,
  formToJSON,
  getAdapter,
  mergeConfig
}


================================================
File: server/node_modules/axios/lib/adapters/README.md
================================================
# axios // adapters

The modules under `adapters/` are modules that handle dispatching a request and settling a returned `Promise` once a response is received.

## Example

```js
var settle = require('./../core/settle');

module.exports = function myAdapter(config) {
  // At this point:
  //  - config has been merged with defaults
  //  - request transformers have already run
  //  - request interceptors have already run
  
  // Make the request using config provided
  // Upon response settle the Promise

  return new Promise(function(resolve, reject) {
  
    var response = {
      data: responseData,
      status: request.status,
      statusText: request.statusText,
      headers: responseHeaders,
      config: config,
      request: request
    };

    settle(resolve, reject, response);

    // From here:
    //  - response transformers will run
    //  - response interceptors will run
  });
}
```


================================================
File: server/node_modules/axios/lib/cancel/CanceledError.js
================================================
'use strict';

import AxiosError from '../core/AxiosError.js';
import utils from '../utils.js';

/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}

utils.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});

export default CanceledError;


================================================
File: server/node_modules/axios/lib/cancel/isCancel.js
================================================
'use strict';

export default function isCancel(value) {
  return !!(value && value.__CANCEL__);
}


================================================
File: server/node_modules/axios/lib/core/README.md
================================================
# axios // core

The modules found in `core/` should be modules that are specific to the domain logic of axios. These modules would most likely not make sense to be consumed outside of the axios module, as their logic is too specific. Some examples of core modules are:

- Dispatching requests
  - Requests sent via `adapters/` (see lib/adapters/README.md)
- Managing interceptors
- Handling config


================================================
File: server/node_modules/axios/lib/core/buildFullPath.js
================================================
'use strict';

import isAbsoluteURL from '../helpers/isAbsoluteURL.js';
import combineURLs from '../helpers/combineURLs.js';

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */
export default function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}


================================================
File: server/node_modules/axios/lib/core/settle.js
================================================
'use strict';

import AxiosError from './AxiosError.js';

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */
export default function settle(resolve, reject, response) {
  const validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError(
      'Request failed with status code ' + response.status,
      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}


================================================
File: server/node_modules/axios/lib/core/transformData.js
================================================
'use strict';

import utils from './../utils.js';
import defaults from '../defaults/index.js';
import AxiosHeaders from '../core/AxiosHeaders.js';

/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */
export default function transformData(fns, response) {
  const config = this || defaults;
  const context = response || config;
  const headers = AxiosHeaders.from(context.headers);
  let data = context.data;

  utils.forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
  });

  headers.normalize();

  return data;
}


================================================
File: server/node_modules/axios/lib/defaults/transitional.js
================================================
'use strict';

export default {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};


================================================
File: server/node_modules/axios/lib/env/README.md
================================================
# axios // env

The `data.js` file is updated automatically when the package version is upgrading. Please do not edit it manually.


================================================
File: server/node_modules/axios/lib/env/data.js
================================================
export const VERSION = "1.7.9";

================================================
File: server/node_modules/axios/lib/env/classes/FormData.js
================================================
import _FormData from 'form-data';
export default typeof FormData !== 'undefined' ? FormData : _FormData;


================================================
File: server/node_modules/axios/lib/helpers/README.md
================================================
# axios // helpers

The modules found in `helpers/` should be generic modules that are _not_ specific to the domain logic of axios. These modules could theoretically be published to npm on their own and consumed by other modules or apps. Some examples of generic modules are things like:

- Browser polyfills
- Managing cookies
- Parsing HTTP headers


================================================
File: server/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js
================================================
"use strict";

import stream from "stream";

class ZlibHeaderTransformStream extends stream.Transform {
  __transform(chunk, encoding, callback) {
    this.push(chunk);
    callback();
  }

  _transform(chunk, encoding, callback) {
    if (chunk.length !== 0) {
      this._transform = this.__transform;

      // Add Default Compression headers if no zlib headers are present
      if (chunk[0] !== 120) { // Hex: 78
        const header = Buffer.alloc(2);
        header[0] = 120; // Hex: 78
        header[1] = 156; // Hex: 9C 
        this.push(header, encoding);
      }
    }

    this.__transform(chunk, encoding, callback);
  }
}

export default ZlibHeaderTransformStream;


================================================
File: server/node_modules/axios/lib/helpers/bind.js
================================================
'use strict';

export default function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}


================================================
File: server/node_modules/axios/lib/helpers/callbackify.js
================================================
import utils from "../utils.js";

const callbackify = (fn, reducer) => {
  return utils.isAsyncFn(fn) ? function (...args) {
    const cb = args.pop();
    fn.apply(this, args).then((value) => {
      try {
        reducer ? cb(null, ...reducer(value)) : cb(null, value);
      } catch (err) {
        cb(err);
      }
    }, cb);
  } : fn;
}

export default callbackify;


================================================
File: server/node_modules/axios/lib/helpers/combineURLs.js
================================================
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */
export default function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
}


================================================
File: server/node_modules/axios/lib/helpers/deprecatedMethod.js
================================================
'use strict';

/*eslint no-console:0*/

/**
 * Supply a warning to the developer that a method they are using
 * has been deprecated.
 *
 * @param {string} method The name of the deprecated method
 * @param {string} [instead] The alternate method to use if applicable
 * @param {string} [docs] The documentation URL to get further details
 *
 * @returns {void}
 */
export default function deprecatedMethod(method, instead, docs) {
  try {
    console.warn(
      'DEPRECATED method `' + method + '`.' +
      (instead ? ' Use `' + instead + '` instead.' : '') +
      ' This method will be removed in a future release.');

    if (docs) {
      console.warn('For more information about usage see ' + docs);
    }
  } catch (e) { /* Ignore */ }
}


================================================
File: server/node_modules/axios/lib/helpers/isAbsoluteURL.js
================================================
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
export default function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}


================================================
File: server/node_modules/axios/lib/helpers/isAxiosError.js
================================================
'use strict';

import utils from './../utils.js';

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
export default function isAxiosError(payload) {
  return utils.isObject(payload) && (payload.isAxiosError === true);
}


================================================
File: server/node_modules/axios/lib/helpers/isURLSameOrigin.js
================================================
import platform from '../platform/index.js';

export default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {
  url = new URL(url, platform.origin);

  return (
    origin.protocol === url.protocol &&
    origin.host === url.host &&
    (isMSIE || origin.port === url.port)
  );
})(
  new URL(platform.origin),
  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)
) : () => true;


================================================
File: server/node_modules/axios/lib/helpers/null.js
================================================
// eslint-disable-next-line strict
export default null;


================================================
File: server/node_modules/axios/lib/helpers/parseProtocol.js
================================================
'use strict';

export default function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
}


================================================
File: server/node_modules/axios/lib/helpers/readBlob.js
================================================
const {asyncIterator} = Symbol;

const readBlob = async function* (blob) {
  if (blob.stream) {
    yield* blob.stream()
  } else if (blob.arrayBuffer) {
    yield await blob.arrayBuffer()
  } else if (blob[asyncIterator]) {
    yield* blob[asyncIterator]();
  } else {
    yield blob;
  }
}

export default readBlob;


================================================
File: server/node_modules/axios/lib/helpers/spread.js
================================================
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */
export default function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}


================================================
File: server/node_modules/axios/lib/helpers/throttle.js
================================================
/**
 * Throttle decorator
 * @param {Function} fn
 * @param {Number} freq
 * @return {Function}
 */
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1000 / freq;
  let lastArgs;
  let timer;

  const invoke = (args, now = Date.now()) => {
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn.apply(null, args);
  }

  const throttled = (...args) => {
    const now = Date.now();
    const passed = now - timestamp;
    if ( passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs)
        }, threshold - passed);
      }
    }
  }

  const flush = () => lastArgs && invoke(lastArgs);

  return [throttled, flush];
}

export default throttle;


================================================
File: server/node_modules/axios/lib/helpers/toURLEncodedForm.js
================================================
'use strict';

import utils from '../utils.js';
import toFormData from './toFormData.js';
import platform from '../platform/index.js';

export default function toURLEncodedForm(data, options) {
  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      if (platform.isNode && utils.isBuffer(value)) {
        this.append(key, value.toString('base64'));
        return false;
      }

      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}


================================================
File: server/node_modules/axios/lib/platform/index.js
================================================
import platform from './node/index.js';
import * as utils from './common/utils.js';

export default {
  ...utils,
  ...platform
}


================================================
File: server/node_modules/axios/lib/platform/browser/index.js
================================================
import URLSearchParams from './classes/URLSearchParams.js'
import FormData from './classes/FormData.js'
import Blob from './classes/Blob.js'

export default {
  isBrowser: true,
  classes: {
    URLSearchParams,
    FormData,
    Blob
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
};


================================================
File: server/node_modules/axios/lib/platform/browser/classes/Blob.js
================================================
'use strict'

export default typeof Blob !== 'undefined' ? Blob : null


================================================
File: server/node_modules/axios/lib/platform/browser/classes/FormData.js
================================================
'use strict';

export default typeof FormData !== 'undefined' ? FormData : null;


================================================
File: server/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js
================================================
'use strict';

import AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';
export default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;


================================================
File: server/node_modules/axios/lib/platform/node/index.js
================================================
import URLSearchParams from './classes/URLSearchParams.js'
import FormData from './classes/FormData.js'

export default {
  isNode: true,
  classes: {
    URLSearchParams,
    FormData,
    Blob: typeof Blob !== 'undefined' && Blob || null
  },
  protocols: [ 'http', 'https', 'file', 'data' ]
};


================================================
File: server/node_modules/axios/lib/platform/node/classes/FormData.js
================================================
import FormData from 'form-data';

export default FormData;


================================================
File: server/node_modules/axios/lib/platform/node/classes/URLSearchParams.js
================================================
'use strict';

import url from 'url';
export default url.URLSearchParams;


================================================
File: server/node_modules/base64id/README.md
================================================
base64id
========

Node.js module that generates a base64 id.

Uses crypto.randomBytes when available, falls back to unsafe methods for node.js <= 0.4.

To increase performance, random bytes are buffered to minimize the number of synchronous calls to crypto.randomBytes.

## Installation

   $ npm install base64id

## Usage

   var base64id = require('base64id');

   var id = base64id.generateId();


================================================
File: server/node_modules/base64id/CHANGELOG.md
================================================
# [2.0.0](https://github.com/faeldt/base64id/compare/1.0.0...2.0.0) (2019-05-27)


### Code Refactoring

* **buffer:** replace deprecated Buffer constructor usage ([#11](https://github.com/faeldt/base64id/issues/11)) ([ccfba54](https://github.com/faeldt/base64id/commit/ccfba54))


### BREAKING CHANGES

* **buffer:** drop support for Node.js ≤ 4.4.x and 5.0.0 - 5.9.x

See: https://nodejs.org/en/docs/guides/buffer-constructor-deprecation/





================================================
File: server/node_modules/base64id/package.json
================================================
{
    "name": "base64id"
  , "version": "2.0.0"
  , "license": "MIT"
  , "description": "Generates a base64 id"
  , "author": "Kristian Faeldt <faeldt_kristian@cyberagent.co.jp>"
  , "repository": {
        "type": "git"
      , "url": "https://github.com/faeldt/base64id.git"
   }
  , "main": "./lib/base64id.js"
  , "engines": { "node": "^4.5.0 || >= 5.9" }
}


================================================
File: server/node_modules/buffer-equal-constant-time/package.json
================================================
{
  "name": "buffer-equal-constant-time",
  "version": "1.0.1",
  "description": "Constant-time comparison of Buffers",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": "git@github.com:goinstant/buffer-equal-constant-time.git",
  "keywords": [
    "buffer",
    "equal",
    "constant-time",
    "crypto"
  ],
  "author": "GoInstant Inc., a salesforce.com company",
  "license": "BSD-3-Clause",
  "devDependencies": {
    "mocha": "~1.15.1"
  }
}


================================================
File: server/node_modules/buffer-equal-constant-time/test.js
================================================
/*jshint node:true */
'use strict';

var bufferEq = require('./index');
var assert = require('assert');

describe('buffer-equal-constant-time', function() {
  var a = new Buffer('asdfasdf123456');
  var b = new Buffer('asdfasdf123456');
  var c = new Buffer('asdfasdf');

  describe('bufferEq', function() {
    it('says a == b', function() {
      assert.strictEqual(bufferEq(a, b), true);
    });

    it('says a != c', function() {
      assert.strictEqual(bufferEq(a, c), false);
    });
  });

  describe('install/restore', function() {
    before(function() {
      bufferEq.install();
    });
    after(function() {
      bufferEq.restore();
    });

    it('installed an .equal method', function() {
      var SlowBuffer = require('buffer').SlowBuffer;
      assert.ok(Buffer.prototype.equal);
      assert.ok(SlowBuffer.prototype.equal);
    });

    it('infected existing Buffers', function() {
      assert.strictEqual(a.equal(b), true);
      assert.strictEqual(a.equal(c), false);
    });
  });

});


================================================
File: server/node_modules/buffer-equal-constant-time/.npmignore
================================================
.*.sw[mnop]
node_modules/


================================================
File: server/node_modules/buffer-equal-constant-time/.travis.yml
================================================
language: node_js
node_js:
- "0.11"
- "0.10"


================================================
File: server/node_modules/bytes/package.json
================================================
{
  "name": "bytes",
  "description": "Utility to parse a string bytes to bytes and vice-versa",
  "version": "3.1.2",
  "author": "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)",
  "contributors": [
    "Jed Watson <jed.watson@me.com>",
    "Théo FIDRY <theo.fidry@gmail.com>"
  ],
  "license": "MIT",
  "keywords": [
    "byte",
    "bytes",
    "utility",
    "parse",
    "parser",
    "convert",
    "converter"
  ],
  "repository": "visionmedia/bytes.js",
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-plugin-markdown": "2.2.1",
    "mocha": "9.2.0",
    "nyc": "15.1.0"
  },
  "files": [
    "History.md",
    "LICENSE",
    "Readme.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --check-leaks --reporter spec",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}


================================================
File: server/node_modules/call-bind-apply-helpers/actualApply.d.ts
================================================
export = Reflect.apply;

================================================
File: server/node_modules/call-bind-apply-helpers/actualApply.js
================================================
'use strict';

var bind = require('function-bind');

var $apply = require('./functionApply');
var $call = require('./functionCall');
var $reflectApply = require('./reflectApply');

/** @type {import('./actualApply')} */
module.exports = $reflectApply || bind.call($call, $apply);


================================================
File: server/node_modules/call-bind-apply-helpers/applyBind.d.ts
================================================
import actualApply from './actualApply';

type TupleSplitHead<T extends any[], N extends number> = T['length'] extends N
  ? T
  : T extends [...infer R, any]
  ? TupleSplitHead<R, N>
  : never

type TupleSplitTail<T, N extends number, O extends any[] = []> = O['length'] extends N
  ? T
  : T extends [infer F, ...infer R]
  ? TupleSplitTail<[...R], N, [...O, F]>
  : never

type TupleSplit<T extends any[], N extends number> = [TupleSplitHead<T, N>, TupleSplitTail<T, N>]

declare function applyBind(...args: TupleSplit<Parameters<typeof actualApply>, 2>[1]): ReturnType<typeof actualApply>;

export = applyBind;

================================================
File: server/node_modules/call-bind-apply-helpers/applyBind.js
================================================
'use strict';

var bind = require('function-bind');
var $apply = require('./functionApply');
var actualApply = require('./actualApply');

/** @type {import('./applyBind')} */
module.exports = function applyBind() {
	return actualApply(bind, $apply, arguments);
};


================================================
File: server/node_modules/call-bind-apply-helpers/functionApply.d.ts
================================================
export = Function.prototype.apply;

================================================
File: server/node_modules/call-bind-apply-helpers/functionApply.js
================================================
'use strict';

/** @type {import('./functionApply')} */
module.exports = Function.prototype.apply;


================================================
File: server/node_modules/call-bind-apply-helpers/functionCall.d.ts
================================================
export = Function.prototype.call;

================================================
File: server/node_modules/call-bind-apply-helpers/functionCall.js
================================================
'use strict';

/** @type {import('./functionCall')} */
module.exports = Function.prototype.call;


================================================
File: server/node_modules/call-bind-apply-helpers/index.js
================================================
'use strict';

var bind = require('function-bind');
var $TypeError = require('es-errors/type');

var $call = require('./functionCall');
var $actualApply = require('./actualApply');

/** @type {import('.')} */
module.exports = function callBindBasic(args) {
	if (args.length < 1 || typeof args[0] !== 'function') {
		throw new $TypeError('a function is required');
	}
	return $actualApply(bind, $call, args);
};


================================================
File: server/node_modules/call-bind-apply-helpers/reflectApply.d.ts
================================================
declare const reflectApply: false | typeof Reflect.apply;

export = reflectApply;


================================================
File: server/node_modules/call-bind-apply-helpers/reflectApply.js
================================================
'use strict';

/** @type {import('./reflectApply')} */
module.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;


================================================
File: server/node_modules/call-bind-apply-helpers/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}

================================================
File: server/node_modules/call-bind-apply-helpers/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"func-name-matching": 0,
		"id-length": 0,
		"new-cap": [2, {
			"capIsNewExceptions": [
				"GetIntrinsic",
			],
		}],
		"no-magic-numbers": 0,
	},
}


================================================
File: server/node_modules/call-bind-apply-helpers/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/call-bind-apply-helpers/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/call-bind-apply-helpers
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/call-bound/index.d.ts
================================================
import callBind from 'call-bind-apply-helpers';

declare function callBoundIntrinsic(
    name: string,
    allowMissing?: false
): ReturnType<typeof callBind>;

declare function callBoundIntrinsic(
    name: string,
    allowMissing: true
): undefined | ReturnType<typeof callBind>;

export = callBoundIntrinsic;

================================================
File: server/node_modules/call-bound/index.js
================================================
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBindBasic = require('call-bind-apply-helpers');

/** @type {(thisArg: string, searchString: string, position?: number) => number} */
var $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);

/** @type {import('.')} */
module.exports = function callBoundIntrinsic(name, allowMissing) {
	// eslint-disable-next-line no-extra-parens
	var intrinsic = /** @type {Parameters<typeof callBindBasic>[0][0]} */ (GetIntrinsic(name, !!allowMissing));
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBindBasic([intrinsic]);
	}
	return intrinsic;
};


================================================
File: server/node_modules/call-bound/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/call-bound/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"new-cap": [2, {
			"capIsNewExceptions": [
				"GetIntrinsic",
			],
		}],
	},
}


================================================
File: server/node_modules/call-bound/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/call-bound/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/call-bound
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/combined-stream/package.json
================================================
{
  "author": "Felix Geisendörfer <felix@debuggable.com> (http://debuggable.com/)",
  "name": "combined-stream",
  "description": "A stream that emits multiple other streams one after another.",
  "version": "1.0.8",
  "homepage": "https://github.com/felixge/node-combined-stream",
  "repository": {
    "type": "git",
    "url": "git://github.com/felixge/node-combined-stream.git"
  },
  "main": "./lib/combined_stream",
  "scripts": {
    "test": "node test/run.js"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "dependencies": {
    "delayed-stream": "~1.0.0"
  },
  "devDependencies": {
    "far": "~0.0.7"
  },
  "license": "MIT"
}


================================================
File: server/node_modules/combined-stream/yarn.lock
================================================
# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1


delayed-stream@~1.0.0:
  version "1.0.0"
  resolved "https://registry.yarnpkg.com/delayed-stream/-/delayed-stream-1.0.0.tgz#df3ae199acadfb7d440aaae0b29e2272b24ec619"

far@~0.0.7:
  version "0.0.7"
  resolved "https://registry.yarnpkg.com/far/-/far-0.0.7.tgz#01c1fd362bcd26ce9cf161af3938aa34619f79a7"
  dependencies:
    oop "0.0.3"

oop@0.0.3:
  version "0.0.3"
  resolved "https://registry.yarnpkg.com/oop/-/oop-0.0.3.tgz#70fa405a5650891a194fdc82ca68dad6dabf4401"


================================================
File: server/node_modules/content-disposition/HISTORY.md
================================================
0.5.4 / 2021-12-10
==================

  * deps: safe-buffer@5.2.1

0.5.3 / 2018-12-17
==================

  * Use `safe-buffer` for improved Buffer API

0.5.2 / 2016-12-08
==================

  * Fix `parse` to accept any linear whitespace character

0.5.1 / 2016-01-17
==================

  * perf: enable strict mode

0.5.0 / 2014-10-11
==================

  * Add `parse` function

0.4.0 / 2014-09-21
==================

  * Expand non-Unicode `filename` to the full ISO-8859-1 charset

0.3.0 / 2014-09-20
==================

  * Add `fallback` option
  * Add `type` option

0.2.0 / 2014-09-19
==================

  * Reduce ambiguity of file names with hex escape in buggy browsers

0.1.2 / 2014-09-19
==================

  * Fix periodic invalid Unicode filename header

0.1.1 / 2014-09-19
==================

  * Fix invalid characters appearing in `filename*` parameter

0.1.0 / 2014-09-18
==================

  * Make the `filename` argument optional

0.0.0 / 2014-09-18
==================

  * Initial release


================================================
File: server/node_modules/content-type/HISTORY.md
================================================
1.0.5 / 2023-01-29
==================

  * perf: skip value escaping when unnecessary

1.0.4 / 2017-09-11
==================

  * perf: skip parameter parsing when no parameters

1.0.3 / 2017-09-10
==================

  * perf: remove argument reassignment

1.0.2 / 2016-05-09
==================

  * perf: enable strict mode

1.0.1 / 2015-02-13
==================

  * Improve missing `Content-Type` header error message

1.0.0 / 2015-02-01
==================

  * Initial implementation, derived from `media-typer@0.3.0`


================================================
File: server/node_modules/cookie-signature/History.md
================================================
1.0.6 / 2015-02-03
==================

* use `npm test` instead of `make test` to run tests
* clearer assertion messages when checking input


1.0.5 / 2014-09-05
==================

* add license to package.json

1.0.4 / 2014-06-25
==================

 * corrected avoidance of timing attacks (thanks @tenbits!)

1.0.3 / 2014-01-28
==================

 * [incorrect] fix for timing attacks

1.0.2 / 2014-01-28
==================

 * fix missing repository warning
 * fix typo in test

1.0.1 / 2013-04-15
==================

  * Revert "Changed underlying HMAC algo. to sha512."
  * Revert "Fix for timing attacks on MAC verification."

0.0.1 / 2010-01-03
==================

  * Initial release


================================================
File: server/node_modules/cookie-signature/package.json
================================================
{
  "name": "cookie-signature",
  "version": "1.0.6",
  "description": "Sign and unsign cookies",
  "keywords": ["cookie", "sign", "unsign"],
  "author": "TJ Holowaychuk <tj@learnboost.com>",
  "license": "MIT",
  "repository": { "type": "git", "url": "https://github.com/visionmedia/node-cookie-signature.git"},
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --require should --reporter spec"
  },
  "main": "index"
}


================================================
File: server/node_modules/cookie-signature/.npmignore
================================================
support
test
examples
*.sock


================================================
File: server/node_modules/cors/package.json
================================================
{
  "name": "cors",
  "description": "Node.js CORS middleware",
  "version": "2.8.5",
  "author": "Troy Goode <troygoode@gmail.com> (https://github.com/troygoode/)",
  "license": "MIT",
  "keywords": [
    "cors",
    "express",
    "connect",
    "middleware"
  ],
  "repository": "expressjs/cors",
  "main": "./lib/index.js",
  "dependencies": {
    "object-assign": "^4",
    "vary": "^1"
  },
  "devDependencies": {
    "after": "0.8.2",
    "eslint": "2.13.1",
    "express": "4.16.3",
    "mocha": "5.2.0",
    "nyc": "13.1.0",
    "supertest": "3.3.0"
  },
  "files": [
    "lib/index.js",
    "CONTRIBUTING.md",
    "HISTORY.md",
    "LICENSE",
    "README.md"
  ],
  "engines": {
    "node": ">= 0.10"
  },
  "scripts": {
    "test": "npm run lint && nyc --reporter=html --reporter=text mocha --require test/support/env",
    "lint": "eslint lib test"
  }
}


================================================
File: server/node_modules/dayjs/.editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_size = 2


================================================
File: server/node_modules/dayjs/esm/locale/be.js
================================================
// Belarusian [be]
import dayjs from '../index';
var locale = {
  name: 'be',
  weekdays: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
  months: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
  weekStart: 1,
  weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
  monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
  weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'DD.MM.YYYY',
    LL: 'D MMMM YYYY г.',
    LLL: 'D MMMM YYYY г., HH:mm',
    LLLL: 'dddd, D MMMM YYYY г., HH:mm'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/bi.js
================================================
// Bislama [bi]
import dayjs from '../index';
var locale = {
  name: 'bi',
  weekdays: 'Sande_Mande_Tusde_Wenesde_Tosde_Fraede_Sarade'.split('_'),
  months: 'Januari_Februari_Maj_Eprel_Mei_Jun_Julae_Okis_Septemba_Oktoba_Novemba_Disemba'.split('_'),
  weekStart: 1,
  weekdaysShort: 'San_Man_Tus_Wen_Tos_Frae_Sar'.split('_'),
  monthsShort: 'Jan_Feb_Maj_Epr_Mai_Jun_Jul_Oki_Sep_Okt_Nov_Dis'.split('_'),
  weekdaysMin: 'San_Ma_Tu_We_To_Fr_Sar'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'h:mm A',
    LTS: 'h:mm:ss A',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY h:mm A',
    LLLL: 'dddd, D MMMM YYYY h:mm A'
  },
  relativeTime: {
    future: 'lo %s',
    past: '%s bifo',
    s: 'sam seken',
    m: 'wan minit',
    mm: '%d minit',
    h: 'wan haoa',
    hh: '%d haoa',
    d: 'wan dei',
    dd: '%d dei',
    M: 'wan manis',
    MM: '%d manis',
    y: 'wan yia',
    yy: '%d yia'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/bs.js
================================================
// Bosnian [bs]
import dayjs from '../index';
var locale = {
  name: 'bs',
  weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
  months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
  weekStart: 1,
  weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'H:mm',
    LTS: 'H:mm:ss',
    L: 'DD.MM.YYYY',
    LL: 'D. MMMM YYYY',
    LLL: 'D. MMMM YYYY H:mm',
    LLLL: 'dddd, D. MMMM YYYY H:mm'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/en-il.js
================================================
// English (Israel) [en-il]
import dayjs from '../index';
var locale = {
  name: 'en-il',
  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY HH:mm',
    LLLL: 'dddd, D MMMM YYYY HH:mm'
  },
  relativeTime: {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/en.js
================================================
// English [en]
// We don't need weekdaysShort, weekdaysMin, monthsShort in en.js locale
export default {
  name: 'en',
  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
  ordinal: function ordinal(n) {
    var s = ['th', 'st', 'nd', 'rd'];
    var v = n % 100;
    return "[" + n + (s[(v - 20) % 10] || s[v] || s[0]) + "]";
  }
};

================================================
File: server/node_modules/dayjs/esm/locale/gom-latn.js
================================================
// Konkani Latin script [gom-latn]
import dayjs from '../index';
var locale = {
  name: 'gom-latn',
  weekdays: "Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son'var".split('_'),
  months: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
  weekStart: 1,
  weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
  monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
  weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'A h:mm [vazta]',
    LTS: 'A h:mm:ss [vazta]',
    L: 'DD-MM-YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY A h:mm [vazta]',
    LLLL: 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
    llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/ht.js
================================================
// Haitian Creole (Haiti) [ht]
import dayjs from '../index';
var locale = {
  name: 'ht',
  weekdays: 'dimanch_lendi_madi_mèkredi_jedi_vandredi_samdi'.split('_'),
  months: 'janvye_fevriye_mas_avril_me_jen_jiyè_out_septanm_oktòb_novanm_desanm'.split('_'),
  weekdaysShort: 'dim._len._mad._mèk._jed._van._sam.'.split('_'),
  monthsShort: 'jan._fev._mas_avr._me_jen_jiyè._out_sept._okt._nov._des.'.split('_'),
  weekdaysMin: 'di_le_ma_mè_je_va_sa'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY HH:mm',
    LLLL: 'dddd D MMMM YYYY HH:mm'
  },
  relativeTime: {
    future: 'nan %s',
    past: 'sa gen %s',
    s: 'kèk segond',
    m: 'yon minit',
    mm: '%d minit',
    h: 'inèdtan',
    hh: '%d zè',
    d: 'yon jou',
    dd: '%d jou',
    M: 'yon mwa',
    MM: '%d mwa',
    y: 'yon ane',
    yy: '%d ane'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/index.d.ts
================================================
/// <reference path="./types.d.ts" />

declare module 'dayjs/esm/locale/*' {
  namespace locale {
    interface Locale extends ILocale {}
  }

  const locale: locale.Locale

  export = locale
}


================================================
File: server/node_modules/dayjs/esm/locale/lb.js
================================================
// Luxembourgish [lb]
import dayjs from '../index';
var locale = {
  name: 'lb',
  weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
  months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
  weekStart: 1,
  weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
  monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
  weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'H:mm [Auer]',
    LTS: 'H:mm:ss [Auer]',
    L: 'DD.MM.YYYY',
    LL: 'D. MMMM YYYY',
    LLL: 'D. MMMM YYYY H:mm [Auer]',
    LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/me.js
================================================
// Montenegrin [me]
import dayjs from '../index';
var locale = {
  name: 'me',
  weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
  months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
  weekStart: 1,
  weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
  monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'H:mm',
    LTS: 'H:mm:ss',
    L: 'DD.MM.YYYY',
    LL: 'D. MMMM YYYY',
    LLL: 'D. MMMM YYYY H:mm',
    LLLL: 'dddd, D. MMMM YYYY H:mm'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/ms.js
================================================
// Malay [ms]
import dayjs from '../index';
var locale = {
  name: 'ms',
  weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
  weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
  weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
  months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
  monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
  weekStart: 1,
  formats: {
    LT: 'HH.mm',
    LTS: 'HH.mm.ss',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY HH.mm',
    LLLL: 'dddd, D MMMM YYYY HH.mm'
  },
  relativeTime: {
    future: 'dalam %s',
    past: '%s yang lepas',
    s: 'beberapa saat',
    m: 'seminit',
    mm: '%d minit',
    h: 'sejam',
    hh: '%d jam',
    d: 'sehari',
    dd: '%d hari',
    M: 'sebulan',
    MM: '%d bulan',
    y: 'setahun',
    yy: '%d tahun'
  },
  ordinal: function ordinal(n) {
    return n + ".";
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/rw.js
================================================
// Kinyarwanda (Rwanda) [rw]
import dayjs from '../index';
var locale = {
  name: 'rw',
  weekdays: 'Ku Cyumweru_Kuwa Mbere_Kuwa Kabiri_Kuwa Gatatu_Kuwa Kane_Kuwa Gatanu_Kuwa Gatandatu'.split('_'),
  months: 'Mutarama_Gashyantare_Werurwe_Mata_Gicurasi_Kamena_Nyakanga_Kanama_Nzeri_Ukwakira_Ugushyingo_Ukuboza'.split('_'),
  relativeTime: {
    future: 'mu %s',
    past: '%s',
    s: 'amasegonda',
    m: 'Umunota',
    mm: '%d iminota',
    h: 'isaha',
    hh: '%d amasaha',
    d: 'Umunsi',
    dd: '%d iminsi',
    M: 'ukwezi',
    MM: '%d amezi',
    y: 'umwaka',
    yy: '%d imyaka'
  },
  formats: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY HH:mm',
    LLLL: 'dddd, D MMMM YYYY HH:mm'
  },
  ordinal: function ordinal(n) {
    return n;
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/locale/types.d.ts
================================================
declare interface ILocale {
  name: string
  weekdays?: string[]
  months?: string[]
  weekStart?: number
  weekdaysShort?: string[]
  monthsShort?: string[]
  weekdaysMin?: string[]
  ordinal?: (n: number) => number | string
  formats: Partial<{
    LT: string
    LTS: string
    L: string
    LL: string
    LLL: string
    LLLL: string
  }>
  relativeTime: Partial<{
    future: string
    past: string
    s: string
    m: string
    mm: string
    h: string
    hh: string
    d: string
    dd: string
    M: string
    MM: string
    y: string
    yy: string
  }>
}


================================================
File: server/node_modules/dayjs/esm/locale/tzl.js
================================================
// Talossan [tzl]
import dayjs from '../index';
var locale = {
  name: 'tzl',
  weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
  months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
  weekStart: 1,
  weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
  monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
  weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
  ordinal: function ordinal(n) {
    return n;
  },
  formats: {
    LT: 'HH.mm',
    LTS: 'HH.mm.ss',
    L: 'DD.MM.YYYY',
    LL: 'D. MMMM [dallas] YYYY',
    LLL: 'D. MMMM [dallas] YYYY HH.mm',
    LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
  }
};
dayjs.locale(locale, null, true);
export default locale;

================================================
File: server/node_modules/dayjs/esm/plugin/advancedFormat/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/arraySupport/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare module 'dayjs/esm' {
  interface ConfigTypeMap {
    arraySupport: [number?, number?, number?, number?, number?, number?, number?]
  }
}

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/arraySupport/index.js
================================================
export default (function (o, c, dayjs) {
  var proto = c.prototype;

  var parseDate = function parseDate(cfg) {
    var date = cfg.date,
        utc = cfg.utc;

    if (Array.isArray(date)) {
      if (utc) {
        if (!date.length) {
          return new Date();
        }

        return new Date(Date.UTC.apply(null, date));
      }

      if (date.length === 1) {
        return dayjs(String(date[0])).toDate();
      }

      return new (Function.prototype.bind.apply(Date, [null].concat(date)))();
    }

    return date;
  };

  var oldParse = proto.parse;

  proto.parse = function (cfg) {
    cfg.date = parseDate.bind(this)(cfg);
    oldParse.bind(this)(cfg);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/badMutable/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/bigIntSupport/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare module 'dayjs/esm' {
  interface ConfigTypeMap {
    bigIntSupport: BigInt
  }
  export function unix(t: BigInt): Dayjs
}

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/bigIntSupport/index.js
================================================
// eslint-disable-next-line valid-typeof
var isBigInt = function isBigInt(num) {
  return typeof num === 'bigint';
};

export default (function (o, c, dayjs) {
  var proto = c.prototype;

  var parseDate = function parseDate(cfg) {
    var date = cfg.date;

    if (isBigInt(date)) {
      return Number(date);
    }

    return date;
  };

  var oldParse = proto.parse;

  proto.parse = function (cfg) {
    cfg.date = parseDate.bind(this)(cfg);
    oldParse.bind(this)(cfg);
  };

  var oldUnix = dayjs.unix;

  dayjs.unix = function (timestamp) {
    var ts = isBigInt(timestamp) ? Number(timestamp) : timestamp;
    return oldUnix(ts);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/buddhistEra/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/buddhistEra/index.js
================================================
import { FORMAT_DEFAULT } from '../../constant';
export default (function (o, c) {
  // locale needed later
  var proto = c.prototype;
  var oldFormat = proto.format; // extend en locale here

  proto.format = function (formatStr) {
    var _this = this;

    var yearBias = 543;
    var str = formatStr || FORMAT_DEFAULT;
    var result = str.replace(/(\[[^\]]+])|BBBB|BB/g, function (match, a) {
      var _this$$utils;

      var year = String(_this.$y + yearBias);
      var args = match === 'BB' ? [year.slice(-2), 2] : [year, 4];
      return a || (_this$$utils = _this.$utils()).s.apply(_this$$utils, args.concat(['0']));
    });
    return oldFormat.bind(this)(result);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/calendar/index.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    calendar(referenceTime?: ConfigType, formats?: object): string
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/customParseFormat/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare interface PluginOptions {
    parseTwoDigitYear?: (yearString: string) => number
}

declare const plugin: PluginFunc<PluginOptions>
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/dayOfYear/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    dayOfYear(): number
    dayOfYear(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/dayOfYear/index.js
================================================
export default (function (o, c, d) {
  var proto = c.prototype;

  proto.dayOfYear = function (input) {
    // d(this) is for badMutable
    var dayOfYear = Math.round((d(this).startOf('day') - d(this).startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add(input - dayOfYear, 'day');
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/devHelper/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/isBetween/index.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isBetween(a: ConfigType, b: ConfigType, c?: OpUnitType | null, d?: '()' | '[]' | '[)' | '(]'): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isBetween/index.js
================================================
export default (function (o, c, d) {
  c.prototype.isBetween = function (a, b, u, i) {
    var dA = d(a);
    var dB = d(b);
    i = i || '()';
    var dAi = i[0] === '(';
    var dBi = i[1] === ')';
    return (dAi ? this.isAfter(dA, u) : !this.isBefore(dA, u)) && (dBi ? this.isBefore(dB, u) : !this.isAfter(dB, u)) || (dAi ? this.isBefore(dA, u) : !this.isAfter(dA, u)) && (dBi ? this.isAfter(dB, u) : !this.isBefore(dB, u));
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isLeapYear/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isLeapYear(): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isLeapYear/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.isLeapYear = function () {
    return this.$y % 4 === 0 && this.$y % 100 !== 0 || this.$y % 400 === 0;
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isMoment/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {

  export function isMoment(input: any): boolean

}


================================================
File: server/node_modules/dayjs/esm/plugin/isMoment/index.js
================================================
export default (function (o, c, f) {
  f.isMoment = function (input) {
    return f.isDayjs(input);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isSameOrAfter/index.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isSameOrAfter(date?: ConfigType, unit?: OpUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isSameOrAfter/index.js
================================================
export default (function (o, c) {
  c.prototype.isSameOrAfter = function (that, units) {
    return this.isSame(that, units) || this.isAfter(that, units);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isSameOrBefore/index.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isSameOrBefore(date?: ConfigType, unit?: OpUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isSameOrBefore/index.js
================================================
export default (function (o, c) {
  c.prototype.isSameOrBefore = function (that, units) {
    return this.isSame(that, units) || this.isBefore(that, units);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isToday/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isToday(): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isToday/index.js
================================================
export default (function (o, c, d) {
  var proto = c.prototype;

  proto.isToday = function () {
    var comparisonTemplate = 'YYYY-MM-DD';
    var now = d();
    return this.format(comparisonTemplate) === now.format(comparisonTemplate);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isTomorrow/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isTomorrow(): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isTomorrow/index.js
================================================
export default (function (o, c, d) {
  var proto = c.prototype;

  proto.isTomorrow = function () {
    var comparisonTemplate = 'YYYY-MM-DD';
    var tomorrow = d().add(1, 'day');
    return this.format(comparisonTemplate) === tomorrow.format(comparisonTemplate);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isYesterday/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isYesterday(): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isYesterday/index.js
================================================
export default (function (o, c, d) {
  var proto = c.prototype;

  proto.isYesterday = function () {
    var comparisonTemplate = 'YYYY-MM-DD';
    var yesterday = d().subtract(1, 'day');
    return this.format(comparisonTemplate) === yesterday.format(comparisonTemplate);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/isoWeek/index.d.ts
================================================
import { PluginFunc, OpUnitType, ConfigType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

type ISOUnitType = OpUnitType | 'isoWeek';

declare module 'dayjs/esm' {
  interface Dayjs {
    isoWeekYear(): number
    isoWeek(): number
    isoWeek(value: number): Dayjs

    isoWeekday(): number
    isoWeekday(value: number): Dayjs

    startOf(unit: ISOUnitType): Dayjs

    endOf(unit: ISOUnitType): Dayjs

    isSame(date?: ConfigType, unit?: ISOUnitType): boolean

    isBefore(date?: ConfigType, unit?: ISOUnitType): boolean

    isAfter(date?: ConfigType, unit?: ISOUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isoWeeksInYear/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    isoWeeksInYear(): number
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/isoWeeksInYear/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.isoWeeksInYear = function () {
    var isLeapYear = this.isLeapYear();
    var last = this.endOf('y');
    var day = last.day();

    if (day === 4 || isLeapYear && day === 5) {
      return 53;
    }

    return 52;
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/localizedFormat/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/localizedFormat/index.js
================================================
import { FORMAT_DEFAULT } from '../../constant';
import { u, englishFormats } from './utils';
export default (function (o, c, d) {
  var proto = c.prototype;
  var oldFormat = proto.format;
  d.en.formats = englishFormats;

  proto.format = function (formatStr) {
    if (formatStr === void 0) {
      formatStr = FORMAT_DEFAULT;
    }

    var _this$$locale = this.$locale(),
        _this$$locale$formats = _this$$locale.formats,
        formats = _this$$locale$formats === void 0 ? {} : _this$$locale$formats;

    var result = u(formatStr, formats);
    return oldFormat.call(this, result);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/localizedFormat/utils.js
================================================
// eslint-disable-next-line import/prefer-default-export
export var t = function t(format) {
  return format.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function (_, a, b) {
    return a || b.slice(1);
  });
};
export var englishFormats = {
  LTS: 'h:mm:ss A',
  LT: 'h:mm A',
  L: 'MM/DD/YYYY',
  LL: 'MMMM D, YYYY',
  LLL: 'MMMM D, YYYY h:mm A',
  LLLL: 'dddd, MMMM D, YYYY h:mm A'
};
export var u = function u(formatStr, formats) {
  return formatStr.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function (_, a, b) {
    var B = b && b.toUpperCase();
    return a || formats[b] || englishFormats[b] || t(formats[B]);
  });
};

================================================
File: server/node_modules/dayjs/esm/plugin/minMax/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  export function max(dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function max(noDates: never[]): null
  export function max(maybeDates: Dayjs[]): Dayjs | null

  export function max(...dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function max(...noDates: never[]): null
  export function max(...maybeDates: Dayjs[]): Dayjs | null

  export function min(dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function min(noDates: never[]): null
  export function min(maybeDates: Dayjs[]): Dayjs | null

  export function min(...dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function min(...noDates: never[]): null
  export function min(...maybeDates: Dayjs[]): Dayjs | null
}


================================================
File: server/node_modules/dayjs/esm/plugin/minMax/index.js
================================================
export default (function (o, c, d) {
  var sortBy = function sortBy(method, dates) {
    if (!dates || !dates.length || dates.length === 1 && !dates[0] || dates.length === 1 && Array.isArray(dates[0]) && !dates[0].length) {
      return null;
    }

    if (dates.length === 1 && dates[0].length > 0) {
      var _dates = dates;
      dates = _dates[0];
    }

    dates = dates.filter(function (date) {
      return date;
    });
    var result;
    var _dates2 = dates;
    result = _dates2[0];

    for (var i = 1; i < dates.length; i += 1) {
      if (!dates[i].isValid() || dates[i][method](result)) {
        result = dates[i];
      }
    }

    return result;
  };

  d.max = function () {
    var args = [].slice.call(arguments, 0); // eslint-disable-line prefer-rest-params

    return sortBy('isAfter', args);
  };

  d.min = function () {
    var args = [].slice.call(arguments, 0); // eslint-disable-line prefer-rest-params

    return sortBy('isBefore', args);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/negativeYear/index.d.ts
================================================
import {PluginFunc} from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

================================================
File: server/node_modules/dayjs/esm/plugin/negativeYear/index.js
================================================
export default (function (_, c, dayjs) {
  var proto = c.prototype;

  var parseDate = function parseDate(cfg) {
    var date = cfg.date,
        utc = cfg.utc;

    if (typeof date === 'string' && date.charAt(0) === '-') {
      var normalData = date.slice(1);
      var newDate = dayjs(normalData);

      if (utc) {
        newDate = dayjs.utc(normalData);
      } else {
        newDate = dayjs(normalData);
      }

      var fullYear = newDate.year();

      if (date.indexOf("-" + fullYear) !== -1) {
        return dayjs(newDate).subtract(fullYear * 2, 'year').toDate();
      }

      return date;
    }

    return date;
  };

  var oldParse = proto.parse;

  proto.parse = function (cfg) {
    cfg.date = parseDate.bind(this)(cfg);
    oldParse.bind(this)(cfg);
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/pluralGetSet/index.d.ts
================================================
import { PluginFunc, UnitType, ConfigType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    years(): number

    years(value: number): Dayjs

    months(): number

    months(value: number): Dayjs

    dates(): number

    dates(value: number): Dayjs

    weeks(): number

    weeks(value: number): Dayjs

    days(): number

    days(value: number): Dayjs

    hours(): number

    hours(value: number): Dayjs

    minutes(): number

    minutes(value: number): Dayjs

    seconds(): number

    seconds(value: number): Dayjs

    milliseconds(): number

    milliseconds(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/pluralGetSet/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;
  var pluralAliases = ['milliseconds', 'seconds', 'minutes', 'hours', 'days', 'weeks', 'isoWeeks', 'months', 'quarters', 'years', 'dates'];
  pluralAliases.forEach(function (alias) {
    proto[alias] = proto[alias.replace(/s$/, '')];
  });
});

================================================
File: server/node_modules/dayjs/esm/plugin/preParsePostFormat/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/esm/plugin/quarterOfYear/index.d.ts
================================================
import { PluginFunc, ConfigType, QUnitType, OpUnitType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    quarter(): number

    quarter(quarter: number): Dayjs

    add(value: number, unit: QUnitType): Dayjs

    subtract(value: number, unit: QUnitType): Dayjs

    startOf(unit: QUnitType | OpUnitType): Dayjs

    endOf(unit: QUnitType | OpUnitType): Dayjs

    isSame(date?: ConfigType, unit?: QUnitType): boolean

    isBefore(date?: ConfigType, unit?: QUnitType): boolean

    isAfter(date?: ConfigType, unit?: QUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/relativeTime/index.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs/esm'

declare interface RelativeTimeThreshold {
  l: string
  r?: number
  d?: string
}

declare interface RelativeTimeOptions {
  rounding?: (num: number) => number
  thresholds?: RelativeTimeThreshold[]
}

declare const plugin: PluginFunc<RelativeTimeOptions>
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    fromNow(withoutSuffix?: boolean): string
    from(compared: ConfigType, withoutSuffix?: boolean): string
    toNow(withoutSuffix?: boolean): string
    to(compared: ConfigType, withoutSuffix?: boolean): string
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/timezone/index.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    tz(timezone?: string, keepLocalTime?: boolean): Dayjs
    offsetName(type?: 'short' | 'long'): string | undefined
  }

  interface DayjsTimezone {
    (date?: ConfigType, timezone?: string): Dayjs
    (date: ConfigType, format: string, timezone?: string): Dayjs
    guess(): string
    setDefault(timezone?: string): void
  }

  const tz: DayjsTimezone
}


================================================
File: server/node_modules/dayjs/esm/plugin/toArray/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    toArray(): number[]
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/toArray/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.toArray = function () {
    return [this.$y, this.$M, this.$D, this.$H, this.$m, this.$s, this.$ms];
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/toObject/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

interface DayjsObject {
  years: number
  months: number
  date: number
  hours: number
  minutes: number
  seconds: number
  milliseconds: number
}

declare module 'dayjs/esm' {
  interface Dayjs {
    toObject(): DayjsObject
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/toObject/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.toObject = function () {
    return {
      years: this.$y,
      months: this.$M,
      date: this.$D,
      hours: this.$H,
      minutes: this.$m,
      seconds: this.$s,
      milliseconds: this.$ms
    };
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/updateLocale/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  export function updateLocale(localeName: string, customConfig: Record<string, unknown>): Record<string, unknown>
}


================================================
File: server/node_modules/dayjs/esm/plugin/updateLocale/index.js
================================================
export default (function (option, Dayjs, dayjs) {
  dayjs.updateLocale = function (locale, customConfig) {
    var localeList = dayjs.Ls;
    var localeConfig = localeList[locale];
    if (!localeConfig) return;
    var customConfigKeys = customConfig ? Object.keys(customConfig) : [];
    customConfigKeys.forEach(function (c) {
      localeConfig[c] = customConfig[c];
    });
    return localeConfig; // eslint-disable-line consistent-return
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/utc/index.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    
    utc(keepLocalTime?: boolean): Dayjs
    
    local(): Dayjs

    isUTC(): boolean

    utcOffset(offset: number | string, keepLocalTime?: boolean): Dayjs
  }

  export function utc(config?: ConfigType, format?: string, strict?: boolean): Dayjs
}


================================================
File: server/node_modules/dayjs/esm/plugin/weekOfYear/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    week(): number

    week(value : number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/weekYear/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    weekYear(): number
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/weekYear/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.weekYear = function () {
    var month = this.month();
    var weekOfYear = this.week();
    var year = this.year();

    if (weekOfYear === 1 && month === 11) {
      return year + 1;
    }

    if (month === 0 && weekOfYear >= 52) {
      return year - 1;
    }

    return year;
  };
});

================================================
File: server/node_modules/dayjs/esm/plugin/weekday/index.d.ts
================================================
import { PluginFunc } from 'dayjs/esm'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs/esm' {
  interface Dayjs {
    weekday(): number

    weekday(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/esm/plugin/weekday/index.js
================================================
export default (function (o, c) {
  var proto = c.prototype;

  proto.weekday = function (input) {
    var weekStart = this.$locale().weekStart || 0;
    var $W = this.$W;
    var weekday = ($W < weekStart ? $W + 7 : $W) - weekStart;

    if (this.$utils().u(input)) {
      return weekday;
    }

    return this.subtract(weekday, 'day').add(input, 'day');
  };
});

================================================
File: server/node_modules/dayjs/locale/bs.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("dayjs")):"function"==typeof define&&define.amd?define(["dayjs"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_bs=t(e.dayjs)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var _=t(e),a={name:"bs",weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),months:"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),weekStart:1,weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),monthsShort:"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),ordinal:function(e){return e},formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"}};return _.default.locale(a,null,!0),a}));

================================================
File: server/node_modules/dayjs/locale/en.js
================================================
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_en=n()}(this,(function(){"use strict";return{name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var n=["th","st","nd","rd"],t=e%100;return"["+e+(n[(t-20)%10]||n[t]||n[0])+"]"}}}));

================================================
File: server/node_modules/dayjs/locale/index.d.ts
================================================
/// <reference path="./types.d.ts" />

declare module 'dayjs/locale/*' {
  namespace locale {
    interface Locale extends ILocale {}
  }

  const locale: locale.Locale

  export = locale
}


================================================
File: server/node_modules/dayjs/locale/lb.js
================================================
!function(e,_){"object"==typeof exports&&"undefined"!=typeof module?module.exports=_(require("dayjs")):"function"==typeof define&&define.amd?define(["dayjs"],_):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_lb=_(e.dayjs)}(this,(function(e){"use strict";function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=_(e),n={name:"lb",weekdays:"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),months:"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),weekStart:1,weekdaysShort:"So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),monthsShort:"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),weekdaysMin:"So_Mé_Dë_Më_Do_Fr_Sa".split("_"),ordinal:function(e){return e},formats:{LT:"H:mm [Auer]",LTS:"H:mm:ss [Auer]",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm [Auer]",LLLL:"dddd, D. MMMM YYYY H:mm [Auer]"}};return t.default.locale(n,null,!0),n}));

================================================
File: server/node_modules/dayjs/locale/me.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("dayjs")):"function"==typeof define&&define.amd?define(["dayjs"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_me=t(e.dayjs)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var _=t(e),a={name:"me",weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),months:"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),weekStart:1,weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),monthsShort:"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),ordinal:function(e){return e},formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"}};return _.default.locale(a,null,!0),a}));

================================================
File: server/node_modules/dayjs/locale/rw.js
================================================
!function(a,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("dayjs")):"function"==typeof define&&define.amd?define(["dayjs"],e):(a="undefined"!=typeof globalThis?globalThis:a||self).dayjs_locale_rw=e(a.dayjs)}(this,(function(a){"use strict";function e(a){return a&&"object"==typeof a&&"default"in a?a:{default:a}}var u=e(a),t={name:"rw",weekdays:"Ku Cyumweru_Kuwa Mbere_Kuwa Kabiri_Kuwa Gatatu_Kuwa Kane_Kuwa Gatanu_Kuwa Gatandatu".split("_"),months:"Mutarama_Gashyantare_Werurwe_Mata_Gicurasi_Kamena_Nyakanga_Kanama_Nzeri_Ukwakira_Ugushyingo_Ukuboza".split("_"),relativeTime:{future:"mu %s",past:"%s",s:"amasegonda",m:"Umunota",mm:"%d iminota",h:"isaha",hh:"%d amasaha",d:"Umunsi",dd:"%d iminsi",M:"ukwezi",MM:"%d amezi",y:"umwaka",yy:"%d imyaka"},formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},ordinal:function(a){return a}};return u.default.locale(t,null,!0),t}));

================================================
File: server/node_modules/dayjs/locale/types.d.ts
================================================
declare interface ILocale {
  name: string
  weekdays?: string[]
  months?: string[]
  weekStart?: number
  weekdaysShort?: string[]
  monthsShort?: string[]
  weekdaysMin?: string[]
  ordinal?: (n: number) => number | string
  formats: Partial<{
    LT: string
    LTS: string
    L: string
    LL: string
    LLL: string
    LLLL: string
  }>
  relativeTime: Partial<{
    future: string
    past: string
    s: string
    m: string
    mm: string
    h: string
    hh: string
    d: string
    dd: string
    M: string
    MM: string
    y: string
    yy: string
  }>
}


================================================
File: server/node_modules/dayjs/locale/tzl.js
================================================
!function(e,_){"object"==typeof exports&&"undefined"!=typeof module?module.exports=_(require("dayjs")):"function"==typeof define&&define.amd?define(["dayjs"],_):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_tzl=_(e.dayjs)}(this,(function(e){"use strict";function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=_(e),a={name:"tzl",weekdays:"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),months:"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),weekStart:1,weekdaysShort:"Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),monthsShort:"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),weekdaysMin:"Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),ordinal:function(e){return e},formats:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD.MM.YYYY",LL:"D. MMMM [dallas] YYYY",LLL:"D. MMMM [dallas] YYYY HH.mm",LLLL:"dddd, [li] D. MMMM [dallas] YYYY HH.mm"}};return t.default.locale(a,null,!0),a}));

================================================
File: server/node_modules/dayjs/plugin/advancedFormat.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/arraySupport.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare module 'dayjs' {
  interface ConfigTypeMap {
    arraySupport: [number?, number?, number?, number?, number?, number?, number?]
  }
}

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/arraySupport.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_arraySupport=t()}(this,(function(){"use strict";return function(e,t,n){var o=t.prototype,i=function(e){var t=e.date,o=e.utc;return Array.isArray(t)?o?t.length?new Date(Date.UTC.apply(null,t)):new Date:1===t.length?n(String(t[0])).toDate():new(Function.prototype.bind.apply(Date,[null].concat(t))):t},a=o.parse;o.parse=function(e){e.date=i.bind(this)(e),a.bind(this)(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/badMutable.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/badMutable.js
================================================
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_badMutable=i()}(this,(function(){"use strict";return function(t,i){var n=i.prototype;n.$g=function(t,i,n){return this.$utils().u(t)?this[i]:this.$set(n,t)},n.set=function(t,i){return this.$set(t,i)};var e=n.startOf;n.startOf=function(t,i){return this.$d=e.bind(this)(t,i).toDate(),this.init(),this};var s=n.add;n.add=function(t,i){return this.$d=s.bind(this)(t,i).toDate(),this.init(),this};var o=n.locale;n.locale=function(t,i){return t?(this.$L=o.bind(this)(t,i).$L,this):this.$L};var r=n.daysInMonth;n.daysInMonth=function(){return r.bind(this.clone())()};var u=n.isSame;n.isSame=function(t,i){return u.bind(this.clone())(t,i)};var f=n.isBefore;n.isBefore=function(t,i){return f.bind(this.clone())(t,i)};var d=n.isAfter;n.isAfter=function(t,i){return d.bind(this.clone())(t,i)}}}));

================================================
File: server/node_modules/dayjs/plugin/bigIntSupport.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare module 'dayjs' {
  interface ConfigTypeMap {
    bigIntSupport: BigInt
  }
  export function unix(t: BigInt): Dayjs
}

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/bigIntSupport.js
================================================
!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(n="undefined"!=typeof globalThis?globalThis:n||self).dayjs_plugin_bigIntSupport=e()}(this,(function(){"use strict";var n=function(n){return"bigint"==typeof n};return function(e,t,i){var o=t.prototype,u=function(e){var t=e.date;return n(t)?Number(t):t},r=o.parse;o.parse=function(n){n.date=u.bind(this)(n),r.bind(this)(n)};var f=i.unix;i.unix=function(e){var t=n(e)?Number(e):e;return f(t)}}}));

================================================
File: server/node_modules/dayjs/plugin/buddhistEra.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/buddhistEra.js
================================================
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_buddhistEra=e()}(this,(function(){"use strict";return function(t,e){var n=e.prototype,i=n.format;n.format=function(t){var e=this,n=(t||"YYYY-MM-DDTHH:mm:ssZ").replace(/(\[[^\]]+])|BBBB|BB/g,(function(t,n){var i,o=String(e.$y+543),f="BB"===t?[o.slice(-2),2]:[o,4];return n||(i=e.$utils()).s.apply(i,f.concat(["0"]))}));return i.bind(this)(n)}}}));

================================================
File: server/node_modules/dayjs/plugin/calendar.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    calendar(referenceTime?: ConfigType, formats?: object): string
  }
}


================================================
File: server/node_modules/dayjs/plugin/calendar.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_calendar=t()}(this,(function(){"use strict";return function(e,t,a){var n="h:mm A",d={lastDay:"[Yesterday at] "+n,sameDay:"[Today at] "+n,nextDay:"[Tomorrow at] "+n,nextWeek:"dddd [at] "+n,lastWeek:"[Last] dddd [at] "+n,sameElse:"MM/DD/YYYY"};t.prototype.calendar=function(e,t){var n=t||this.$locale().calendar||d,o=a(e||void 0).startOf("d"),s=this.diff(o,"d",!0),i="sameElse",f=s<-6?i:s<-1?"lastWeek":s<0?"lastDay":s<1?"sameDay":s<2?"nextDay":s<7?"nextWeek":i,l=n[f]||d[f];return"function"==typeof l?l.call(this,a()):this.format(l)}}}));

================================================
File: server/node_modules/dayjs/plugin/customParseFormat.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare interface PluginOptions {
    parseTwoDigitYear?: (yearString: string) => number
}

declare const plugin: PluginFunc<PluginOptions>
export = plugin


================================================
File: server/node_modules/dayjs/plugin/dayOfYear.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    dayOfYear(): number
    dayOfYear(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/plugin/dayOfYear.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_dayOfYear=t()}(this,(function(){"use strict";return function(e,t,n){t.prototype.dayOfYear=function(e){var t=Math.round((n(this).startOf("day")-n(this).startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"day")}}}));

================================================
File: server/node_modules/dayjs/plugin/devHelper.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/isBetween.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isBetween(a: ConfigType, b: ConfigType, c?: OpUnitType | null, d?: '()' | '[]' | '[)' | '(]'): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isBetween.js
================================================
!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isBetween=i()}(this,(function(){"use strict";return function(e,i,t){i.prototype.isBetween=function(e,i,s,f){var n=t(e),o=t(i),r="("===(f=f||"()")[0],u=")"===f[1];return(r?this.isAfter(n,s):!this.isBefore(n,s))&&(u?this.isBefore(o,s):!this.isAfter(o,s))||(r?this.isBefore(n,s):!this.isAfter(n,s))&&(u?this.isAfter(o,s):!this.isBefore(o,s))}}}));

================================================
File: server/node_modules/dayjs/plugin/isLeapYear.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isLeapYear(): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isLeapYear.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isLeapYear=t()}(this,(function(){"use strict";return function(e,t){t.prototype.isLeapYear=function(){return this.$y%4==0&&this.$y%100!=0||this.$y%400==0}}}));

================================================
File: server/node_modules/dayjs/plugin/isMoment.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {

  export function isMoment(input: any): boolean

}


================================================
File: server/node_modules/dayjs/plugin/isMoment.js
================================================
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isMoment=n()}(this,(function(){"use strict";return function(e,n,t){t.isMoment=function(e){return t.isDayjs(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/isSameOrAfter.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isSameOrAfter(date?: ConfigType, unit?: OpUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isSameOrAfter.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrAfter=t()}(this,(function(){"use strict";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}}));

================================================
File: server/node_modules/dayjs/plugin/isSameOrBefore.d.ts
================================================
import { PluginFunc, ConfigType, OpUnitType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isSameOrBefore(date?: ConfigType, unit?: OpUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isSameOrBefore.js
================================================
!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrBefore=i()}(this,(function(){"use strict";return function(e,i){i.prototype.isSameOrBefore=function(e,i){return this.isSame(e,i)||this.isBefore(e,i)}}}));

================================================
File: server/node_modules/dayjs/plugin/isToday.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isToday(): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isToday.js
================================================
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isToday=o()}(this,(function(){"use strict";return function(e,o,t){o.prototype.isToday=function(){var e="YYYY-MM-DD",o=t();return this.format(e)===o.format(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/isTomorrow.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isTomorrow(): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isTomorrow.js
================================================
!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(o="undefined"!=typeof globalThis?globalThis:o||self).dayjs_plugin_isTomorrow=e()}(this,(function(){"use strict";return function(o,e,t){e.prototype.isTomorrow=function(){var o="YYYY-MM-DD",e=t().add(1,"day");return this.format(o)===e.format(o)}}}));

================================================
File: server/node_modules/dayjs/plugin/isYesterday.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isYesterday(): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isYesterday.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isYesterday=t()}(this,(function(){"use strict";return function(e,t,n){t.prototype.isYesterday=function(){var e="YYYY-MM-DD",t=n().subtract(1,"day");return this.format(e)===t.format(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/isoWeek.d.ts
================================================
import { PluginFunc, OpUnitType, ConfigType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

type ISOUnitType = OpUnitType | 'isoWeek';

declare module 'dayjs' {
  interface Dayjs {
    isoWeekYear(): number
    isoWeek(): number
    isoWeek(value: number): Dayjs

    isoWeekday(): number
    isoWeekday(value: number): Dayjs

    startOf(unit: ISOUnitType): Dayjs

    endOf(unit: ISOUnitType): Dayjs

    isSame(date?: ConfigType, unit?: ISOUnitType): boolean

    isBefore(date?: ConfigType, unit?: ISOUnitType): boolean

    isAfter(date?: ConfigType, unit?: ISOUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/isoWeek.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){"use strict";var e="day";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf("year"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,"week")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return"isoweek"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf("day"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf("day"):n.bind(this)(e,t)}}}));

================================================
File: server/node_modules/dayjs/plugin/isoWeeksInYear.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    isoWeeksInYear(): number
  }
}


================================================
File: server/node_modules/dayjs/plugin/isoWeeksInYear.js
================================================
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeeksInYear=n()}(this,(function(){"use strict";return function(e,n){n.prototype.isoWeeksInYear=function(){var e=this.isLeapYear(),n=this.endOf("y").day();return 4===n||e&&5===n?53:52}}}));

================================================
File: server/node_modules/dayjs/plugin/localizedFormat.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/localizedFormat.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_localizedFormat=t()}(this,(function(){"use strict";var e={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t="YYYY-MM-DDTHH:mm:ssZ");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));

================================================
File: server/node_modules/dayjs/plugin/minMax.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  export function max(dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function max(noDates: never[]): null
  export function max(maybeDates: Dayjs[]): Dayjs | null

  export function max(...dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function max(...noDates: never[]): null
  export function max(...maybeDates: Dayjs[]): Dayjs | null

  export function min(dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function min(noDates: never[]): null
  export function min(maybeDates: Dayjs[]): Dayjs | null

  export function min(...dayjs: [Dayjs, ...Dayjs[]]): Dayjs
  export function min(...noDates: never[]): null
  export function min(...maybeDates: Dayjs[]): Dayjs | null
}


================================================
File: server/node_modules/dayjs/plugin/minMax.js
================================================
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_minMax=n()}(this,(function(){"use strict";return function(e,n,t){var i=function(e,n){if(!n||!n.length||1===n.length&&!n[0]||1===n.length&&Array.isArray(n[0])&&!n[0].length)return null;var t;1===n.length&&n[0].length>0&&(n=n[0]);t=(n=n.filter((function(e){return e})))[0];for(var i=1;i<n.length;i+=1)n[i].isValid()&&!n[i][e](t)||(t=n[i]);return t};t.max=function(){var e=[].slice.call(arguments,0);return i("isAfter",e)},t.min=function(){var e=[].slice.call(arguments,0);return i("isBefore",e)}}}));

================================================
File: server/node_modules/dayjs/plugin/negativeYear.d.ts
================================================
import {PluginFunc} from 'dayjs'

declare const plugin: PluginFunc
export = plugin

================================================
File: server/node_modules/dayjs/plugin/negativeYear.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_negativeYear=t()}(this,(function(){"use strict";return function(e,t,n){var i=t.prototype,o=function(e){var t=e.date,i=e.utc;if("string"==typeof t&&"-"===t.charAt(0)){var o=t.slice(1),r=n(o),f=(r=i?n.utc(o):n(o)).year();return-1!==t.indexOf("-"+f)?n(r).subtract(2*f,"year").toDate():t}return t},r=i.parse;i.parse=function(e){e.date=o.bind(this)(e),r.bind(this)(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/pluralGetSet.d.ts
================================================
import { PluginFunc, UnitType, ConfigType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    years(): number

    years(value: number): Dayjs

    months(): number

    months(value: number): Dayjs

    dates(): number

    dates(value: number): Dayjs

    weeks(): number

    weeks(value: number): Dayjs

    days(): number

    days(value: number): Dayjs

    hours(): number

    hours(value: number): Dayjs

    minutes(): number

    minutes(value: number): Dayjs

    seconds(): number

    seconds(value: number): Dayjs

    milliseconds(): number

    milliseconds(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/plugin/pluralGetSet.js
================================================
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_pluralGetSet=o()}(this,(function(){"use strict";return function(e,o){var s=o.prototype;["milliseconds","seconds","minutes","hours","days","weeks","isoWeeks","months","quarters","years","dates"].forEach((function(e){s[e]=s[e.replace(/s$/,"")]}))}}));

================================================
File: server/node_modules/dayjs/plugin/preParsePostFormat.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin


================================================
File: server/node_modules/dayjs/plugin/preParsePostFormat.js
================================================
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_preParsePostFormat=e()}(this,(function(){"use strict";return function(t,e){var o=e.prototype.parse;e.prototype.parse=function(t){if("string"==typeof t.date){var e=this.$locale();t.date=e&&e.preparse?e.preparse(t.date):t.date}return o.bind(this)(t)};var r=e.prototype.format;e.prototype.format=function(){for(var t=arguments.length,e=new Array(t),o=0;o<t;o++)e[o]=arguments[o];var a=r.call.apply(r,[this].concat(e)),p=this.$locale();return p&&p.postformat?p.postformat(a):a};var a=e.prototype.fromToBase;a&&(e.prototype.fromToBase=function(t,e,o,r){var p=this.$locale()||o.$locale();return a.call(this,t,e,o,r,p&&p.postformat)})}}));

================================================
File: server/node_modules/dayjs/plugin/quarterOfYear.d.ts
================================================
import { PluginFunc, ConfigType, QUnitType, OpUnitType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    quarter(): number

    quarter(quarter: number): Dayjs

    add(value: number, unit: QUnitType): Dayjs

    subtract(value: number, unit: QUnitType): Dayjs

    startOf(unit: QUnitType | OpUnitType): Dayjs

    endOf(unit: QUnitType | OpUnitType): Dayjs

    isSame(date?: ConfigType, unit?: QUnitType): boolean

    isBefore(date?: ConfigType, unit?: QUnitType): boolean

    isAfter(date?: ConfigType, unit?: QUnitType): boolean
  }
}


================================================
File: server/node_modules/dayjs/plugin/quarterOfYear.js
================================================
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){"use strict";var t="month",n="quarter";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf("day"):this.month(3*o+2).endOf(t).endOf("day")}return u.bind(this)(e,i)}}}));

================================================
File: server/node_modules/dayjs/plugin/relativeTime.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs'

declare interface RelativeTimeThreshold {
  l: string
  r?: number
  d?: string
}

declare interface RelativeTimeOptions {
  rounding?: (num: number) => number
  thresholds?: RelativeTimeThreshold[]
}

declare const plugin: PluginFunc<RelativeTimeOptions>
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    fromNow(withoutSuffix?: boolean): string
    from(compared: ConfigType, withoutSuffix?: boolean): string
    toNow(withoutSuffix?: boolean): string
    to(compared: ConfigType, withoutSuffix?: boolean): string
  }
}


================================================
File: server/node_modules/dayjs/plugin/timezone.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    tz(timezone?: string, keepLocalTime?: boolean): Dayjs
    offsetName(type?: 'short' | 'long'): string | undefined
  }

  interface DayjsTimezone {
    (date?: ConfigType, timezone?: string): Dayjs
    (date: ConfigType, format: string, timezone?: string): Dayjs
    guess(): string
    setDefault(timezone?: string): void
  }

  const tz: DayjsTimezone
}


================================================
File: server/node_modules/dayjs/plugin/toArray.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    toArray(): number[]
  }
}


================================================
File: server/node_modules/dayjs/plugin/toArray.js
================================================
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_toArray=e()}(this,(function(){"use strict";return function(t,e){e.prototype.toArray=function(){return[this.$y,this.$M,this.$D,this.$H,this.$m,this.$s,this.$ms]}}}));

================================================
File: server/node_modules/dayjs/plugin/toObject.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

interface DayjsObject {
  years: number
  months: number
  date: number
  hours: number
  minutes: number
  seconds: number
  milliseconds: number
}

declare module 'dayjs' {
  interface Dayjs {
    toObject(): DayjsObject
  }
}


================================================
File: server/node_modules/dayjs/plugin/toObject.js
================================================
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_toObject=e()}(this,(function(){"use strict";return function(t,e){e.prototype.toObject=function(){return{years:this.$y,months:this.$M,date:this.$D,hours:this.$H,minutes:this.$m,seconds:this.$s,milliseconds:this.$ms}}}}));

================================================
File: server/node_modules/dayjs/plugin/updateLocale.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  export function updateLocale(localeName: string, customConfig: Record<string, unknown>): Record<string, unknown>
}


================================================
File: server/node_modules/dayjs/plugin/updateLocale.js
================================================
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_updateLocale=n()}(this,(function(){"use strict";return function(e,n,t){t.updateLocale=function(e,n){var o=t.Ls[e];if(o)return(n?Object.keys(n):[]).forEach((function(e){o[e]=n[e]})),o}}}));

================================================
File: server/node_modules/dayjs/plugin/utc.d.ts
================================================
import { PluginFunc, ConfigType } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    
    utc(keepLocalTime?: boolean): Dayjs
    
    local(): Dayjs

    isUTC(): boolean

    utcOffset(offset: number | string, keepLocalTime?: boolean): Dayjs
  }

  export function utc(config?: ConfigType, format?: string, strict?: boolean): Dayjs
}


================================================
File: server/node_modules/dayjs/plugin/weekOfYear.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    week(): number

    week(value : number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/plugin/weekOfYear.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){"use strict";var e="week",t="year";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),"day");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,"millisecond"),o=this.diff(a,e,!0);return o<0?r(this).startOf("week").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));

================================================
File: server/node_modules/dayjs/plugin/weekYear.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    weekYear(): number
  }
}


================================================
File: server/node_modules/dayjs/plugin/weekYear.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekYear=t()}(this,(function(){"use strict";return function(e,t){t.prototype.weekYear=function(){var e=this.month(),t=this.week(),n=this.year();return 1===t&&11===e?n+1:0===e&&t>=52?n-1:n}}}));

================================================
File: server/node_modules/dayjs/plugin/weekday.d.ts
================================================
import { PluginFunc } from 'dayjs'

declare const plugin: PluginFunc
export = plugin

declare module 'dayjs' {
  interface Dayjs {
    weekday(): number

    weekday(value: number): Dayjs
  }
}


================================================
File: server/node_modules/dayjs/plugin/weekday.js
================================================
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){"use strict";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,"day").add(e,"day")}}}));

================================================
File: server/node_modules/debug/component.json
================================================
{
  "name": "debug",
  "repo": "visionmedia/debug",
  "description": "small debugging utility",
  "version": "2.6.9",
  "keywords": [
    "debug",
    "log",
    "debugger"
  ],
  "main": "src/browser.js",
  "scripts": [
    "src/browser.js",
    "src/debug.js"
  ],
  "dependencies": {
    "rauchg/ms.js": "0.7.1"
  }
}


================================================
File: server/node_modules/debug/node.js
================================================
module.exports = require('./src/node');


================================================
File: server/node_modules/debug/.coveralls.yml
================================================
repo_token: SIAeZjKYlHK74rbcFvNHMUzjRiMpflxve


================================================
File: server/node_modules/debug/.eslintrc
================================================
{
  "env": {
    "browser": true,
    "node": true
  },
  "rules": {
    "no-console": 0,
    "no-empty": [1, { "allowEmptyCatch": true }]
  },
  "extends": "eslint:recommended"
}


================================================
File: server/node_modules/debug/.npmignore
================================================
support
test
examples
example
*.sock
dist
yarn.lock
coverage
bower.json


================================================
File: server/node_modules/debug/.travis.yml
================================================

language: node_js
node_js:
  - "6"
  - "5"
  - "4"

install:
  - make node_modules

script:
  - make lint
  - make test
  - make coveralls


================================================
File: server/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process !== 'undefined' && process.type === 'renderer') {
  module.exports = require('./browser.js');
} else {
  module.exports = require('./node.js');
}


================================================
File: server/node_modules/debug/src/inspector-log.js
================================================
module.exports = inspectorLog;

// black hole
const nullStream = new (require('stream').Writable)();
nullStream._write = () => {};

/**
 * Outputs a `console.log()` to the Node.js Inspector console *only*.
 */
function inspectorLog() {
  const stdout = console._stdout;
  console._stdout = nullStream;
  console.log.apply(console, arguments);
  console._stdout = stdout;
}


================================================
File: server/node_modules/delayed-stream/Makefile
================================================
SHELL := /bin/bash

test:
	@./test/run.js

.PHONY: test



================================================
File: server/node_modules/delayed-stream/package.json
================================================
{
  "author": "Felix Geisendörfer <felix@debuggable.com> (http://debuggable.com/)",
  "contributors": [
    "Mike Atkins <apeherder@gmail.com>"
  ],
  "name": "delayed-stream",
  "description": "Buffers events from a stream until you are ready to handle them.",
  "license": "MIT",
  "version": "1.0.0",
  "homepage": "https://github.com/felixge/node-delayed-stream",
  "repository": {
    "type": "git",
    "url": "git://github.com/felixge/node-delayed-stream.git"
  },
  "main": "./lib/delayed_stream",
  "engines": {
    "node": ">=0.4.0"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {},
  "devDependencies": {
    "fake": "0.2.0",
    "far": "0.0.1"
  }
}


================================================
File: server/node_modules/delayed-stream/.npmignore
================================================
test


================================================
File: server/node_modules/dunder-proto/get.d.ts
================================================
declare function getDunderProto(target: {}): object | null;

declare const x: false | typeof getDunderProto;

export = x;

================================================
File: server/node_modules/dunder-proto/get.js
================================================
'use strict';

var callBind = require('call-bind-apply-helpers');
var gOPD = require('gopd');

var hasProtoAccessor;
try {
	// eslint-disable-next-line no-extra-parens, no-proto
	hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;
} catch (e) {
	if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
		throw e;
	}
}

// eslint-disable-next-line no-extra-parens
var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));

var $Object = Object;
var $getPrototypeOf = $Object.getPrototypeOf;

/** @type {import('./get')} */
module.exports = desc && typeof desc.get === 'function'
	? callBind([desc.get])
	: typeof $getPrototypeOf === 'function'
		? /** @type {import('./get')} */ function getDunder(value) {
			// eslint-disable-next-line eqeqeq
			return $getPrototypeOf(value == null ? value : $Object(value));
		}
		: false;


================================================
File: server/node_modules/dunder-proto/set.d.ts
================================================
declare function setDunderProto<P extends null | object>(target: {}, proto: P): P;

declare const x: false | typeof setDunderProto;

export = x;

================================================
File: server/node_modules/dunder-proto/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "ES2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/dunder-proto/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",
}


================================================
File: server/node_modules/dunder-proto/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/dunder-proto/test/index.js
================================================
'use strict';

require('./get');
require('./set');


================================================
File: server/node_modules/dunder-proto/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/dunder-proto
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/ecdsa-sig-formatter/CODEOWNERS
================================================
* @omsmith


================================================
File: server/node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.d.ts
================================================
/// <reference types="node" />

declare module "ecdsa-sig-formatter" {
	/**
	 * Convert the ASN.1/DER encoded signature to a JOSE-style concatenated signature. Returns a base64 url encoded String.
	 *    If signature is a String, it should be base64 encoded
	 *    alg must be one of ES256, ES384 or ES512
	 */
	export function derToJose(signature: Buffer | string, alg: string): string;

	/**
	 * Convert the JOSE-style concatenated signature to an ASN.1/DER encoded signature. Returns a Buffer
	 *     If signature is a String, it should be base64 url encoded
	 *     alg must be one of ES256, ES384 or ES512
	 */
	export function joseToDer(signature: Buffer | string, alg: string): Buffer
}


================================================
File: server/node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js
================================================
'use strict';

function getParamSize(keySize) {
	var result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);
	return result;
}

var paramBytesForAlg = {
	ES256: getParamSize(256),
	ES384: getParamSize(384),
	ES512: getParamSize(521)
};

function getParamBytesForAlg(alg) {
	var paramBytes = paramBytesForAlg[alg];
	if (paramBytes) {
		return paramBytes;
	}

	throw new Error('Unknown algorithm "' + alg + '"');
}

module.exports = getParamBytesForAlg;


================================================
File: server/node_modules/ee-first/package.json
================================================
{
  "name": "ee-first",
  "description": "return the first event in a set of ee/event pairs",
  "version": "1.1.1",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com",
    "twitter": "https://twitter.com/jongleberry"
  },
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "repository": "jonathanong/ee-first",
  "devDependencies": {
    "istanbul": "0.3.9",
    "mocha": "2.2.5"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}


================================================
File: server/node_modules/engine.io/wrapper.mjs
================================================
export {
  Server,
  Socket,
  Transport,
  transports,
  listen,
  attach,
  parser,
  protocol,
} from "./build/engine.io.js";


================================================
File: server/node_modules/engine.io/build/engine.io.d.ts
================================================
import { Server, AttachOptions, ServerOptions } from "./server";
import transports from "./transports/index";
import * as parser from "engine.io-parser";
export { Server, transports, listen, attach, parser };
export type { AttachOptions, ServerOptions, BaseServer } from "./server";
export { uServer } from "./userver";
export { Socket } from "./socket";
export { Transport } from "./transport";
export declare const protocol = 4;
/**
 * Creates an http.Server exclusively used for WS upgrades.
 *
 * @param {Number} port
 * @param {Function} callback
 * @param {Object} options
 * @return {Server} websocket.io server
 */
declare function listen(port: any, options: AttachOptions & ServerOptions, fn: any): Server;
/**
 * Captures upgrade requests for a http.Server.
 *
 * @param {http.Server} server
 * @param {Object} options
 * @return {Server} engine server
 */
declare function attach(server: any, options: AttachOptions & ServerOptions): Server;


================================================
File: server/node_modules/engine.io/build/parser-v3/utf8.d.ts
================================================
/*! https://mths.be/utf8js v2.1.2 by @mathias */
declare var stringFromCharCode: (...codes: number[]) => string;
declare function ucs2decode(string: any): any[];
declare function ucs2encode(array: any): string;
declare function checkScalarValue(codePoint: any, strict: any): boolean;
declare function createByte(codePoint: any, shift: any): string;
declare function encodeCodePoint(codePoint: any, strict: any): string;
declare function utf8encode(string: any, opts: any): string;
declare function readContinuationByte(): number;
declare function decodeSymbol(strict: any): any;
declare var byteArray: any;
declare var byteCount: any;
declare var byteIndex: any;
declare function utf8decode(byteString: any, opts: any): string;


================================================
File: server/node_modules/engine.io/build/transports/index.d.ts
================================================
import { Polling as XHR } from "./polling";
import { WebSocket } from "./websocket";
import { WebTransport } from "./webtransport";
declare const _default: {
    polling: typeof polling;
    websocket: typeof WebSocket;
    webtransport: typeof WebTransport;
};
export default _default;
/**
 * Polling polymorphic constructor.
 */
declare function polling(req: any): XHR;
declare namespace polling {
    var upgradesTo: string[];
}


================================================
File: server/node_modules/engine.io/build/transports/index.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const polling_1 = require("./polling");
const polling_jsonp_1 = require("./polling-jsonp");
const websocket_1 = require("./websocket");
const webtransport_1 = require("./webtransport");
exports.default = {
    polling: polling,
    websocket: websocket_1.WebSocket,
    webtransport: webtransport_1.WebTransport,
};
/**
 * Polling polymorphic constructor.
 */
function polling(req) {
    if ("string" === typeof req._query.j) {
        return new polling_jsonp_1.JSONP(req);
    }
    else {
        return new polling_1.Polling(req);
    }
}
polling.upgradesTo = ["websocket", "webtransport"];


================================================
File: server/node_modules/engine.io/build/transports/polling-jsonp.d.ts
================================================
import { Polling } from "./polling";
import type { RawData } from "engine.io-parser";
export declare class JSONP extends Polling {
    private readonly head;
    private readonly foot;
    /**
     * JSON-P polling transport.
     */
    constructor(req: any);
    onData(data: RawData): void;
    doWrite(data: any, options: any, callback: any): void;
}


================================================
File: server/node_modules/engine.io/build/transports/websocket.d.ts
================================================
import { EngineRequest, Transport } from "../transport";
import type { Packet } from "engine.io-parser";
export declare class WebSocket extends Transport {
    protected perMessageDeflate: any;
    private socket;
    /**
     * WebSocket transport
     *
     * @param {EngineRequest} req
     */
    constructor(req: EngineRequest);
    /**
     * Transport name
     */
    get name(): string;
    /**
     * Advertise upgrade support.
     */
    get handlesUpgrades(): boolean;
    send(packets: Packet[]): void;
    /**
     * Whether the encoding of the WebSocket frame can be skipped.
     * @param packet
     * @private
     */
    private _canSendPreEncodedFrame;
    private _doSend;
    private _doSendLast;
    private _onSent;
    private _onSentLast;
    doClose(fn?: () => void): void;
}


================================================
File: server/node_modules/engine.io/build/transports/webtransport.d.ts
================================================
import { Transport } from "../transport";
/**
 * Reference: https://developer.mozilla.org/en-US/docs/Web/API/WebTransport_API
 */
export declare class WebTransport extends Transport {
    private readonly session;
    private readonly writer;
    constructor(session: any, stream: any, reader: any);
    get name(): string;
    send(packets: any): Promise<void>;
    doClose(fn: any): void;
}


================================================
File: server/node_modules/engine.io/build/transports-uws/index.d.ts
================================================
import { Polling } from "./polling";
import { WebSocket } from "./websocket";
declare const _default: {
    polling: typeof Polling;
    websocket: typeof WebSocket;
};
export default _default;


================================================
File: server/node_modules/engine.io/build/transports-uws/index.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const polling_1 = require("./polling");
const websocket_1 = require("./websocket");
exports.default = {
    polling: polling_1.Polling,
    websocket: websocket_1.WebSocket,
};


================================================
File: server/node_modules/engine.io/build/transports-uws/websocket.d.ts
================================================
import { Transport } from "../transport";
export declare class WebSocket extends Transport {
    protected perMessageDeflate: any;
    private socket;
    /**
     * WebSocket transport
     *
     * @param req
     */
    constructor(req: any);
    /**
     * Transport name
     */
    get name(): string;
    /**
     * Advertise upgrade support.
     */
    get handlesUpgrades(): boolean;
    /**
     * Writes a packet payload.
     *
     * @param {Array} packets
     * @private
     */
    send(packets: any): void;
    /**
     * Closes the transport.
     *
     * @private
     */
    doClose(fn: any): void;
}


================================================
File: server/node_modules/engine.io/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/engine.io/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/engine.io-parser/build/cjs/commons.d.ts
================================================
declare const PACKET_TYPES: any;
declare const PACKET_TYPES_REVERSE: any;
declare const ERROR_PACKET: Packet;
export { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };
export type PacketType = "open" | "close" | "ping" | "pong" | "message" | "upgrade" | "noop" | "error";
export type RawData = any;
export interface Packet {
    type: PacketType;
    options?: {
        compress: boolean;
    };
    data?: RawData;
}
export type BinaryType = "nodebuffer" | "arraybuffer" | "blob";


================================================
File: server/node_modules/engine.io-parser/build/cjs/commons.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERROR_PACKET = exports.PACKET_TYPES_REVERSE = exports.PACKET_TYPES = void 0;
const PACKET_TYPES = Object.create(null); // no Map = no polyfill
exports.PACKET_TYPES = PACKET_TYPES;
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";
const PACKET_TYPES_REVERSE = Object.create(null);
exports.PACKET_TYPES_REVERSE = PACKET_TYPES_REVERSE;
Object.keys(PACKET_TYPES).forEach((key) => {
    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});
const ERROR_PACKET = { type: "error", data: "parser error" };
exports.ERROR_PACKET = ERROR_PACKET;


================================================
File: server/node_modules/engine.io-parser/build/cjs/decodePacket.browser.d.ts
================================================
import { Packet, BinaryType, RawData } from "./commons.js";
export declare const decodePacket: (encodedPacket: RawData, binaryType?: BinaryType) => Packet;


================================================
File: server/node_modules/engine.io-parser/build/cjs/decodePacket.d.ts
================================================
import { Packet, BinaryType, RawData } from "./commons.js";
export declare const decodePacket: (encodedPacket: RawData, binaryType?: BinaryType) => Packet;


================================================
File: server/node_modules/engine.io-parser/build/cjs/encodePacket.browser.d.ts
================================================
import { Packet, RawData } from "./commons.js";
declare const encodePacket: ({ type, data }: Packet, supportsBinary: boolean, callback: (encodedPacket: RawData) => void) => void;
export declare function encodePacketToBinary(packet: Packet, callback: (encodedPacket: RawData) => void): void | Promise<void>;
export { encodePacket };


================================================
File: server/node_modules/engine.io-parser/build/cjs/encodePacket.d.ts
================================================
import { Packet, RawData } from "./commons.js";
export declare const encodePacket: ({ type, data }: Packet, supportsBinary: boolean, callback: (encodedPacket: RawData) => void) => void;
export declare function encodePacketToBinary(packet: Packet, callback: (encodedPacket: RawData) => void): void;


================================================
File: server/node_modules/engine.io-parser/build/cjs/index.d.ts
================================================
import { encodePacket } from "./encodePacket.js";
import { decodePacket } from "./decodePacket.js";
import { Packet, PacketType, RawData, BinaryType } from "./commons.js";
declare const encodePayload: (packets: Packet[], callback: (encodedPayload: string) => void) => void;
declare const decodePayload: (encodedPayload: string, binaryType?: BinaryType) => Packet[];
export declare function createPacketEncoderStream(): any;
export declare function createPacketDecoderStream(maxPayload: number, binaryType: BinaryType): any;
export declare const protocol = 4;
export { encodePacket, encodePayload, decodePacket, decodePayload, Packet, PacketType, RawData, BinaryType, };


================================================
File: server/node_modules/engine.io-parser/build/cjs/package.json
================================================
{
  "name": "engine.io-parser",
  "type": "commonjs",
  "browser": {
    "./encodePacket.js": "./encodePacket.browser.js",
    "./decodePacket.js": "./decodePacket.browser.js"
  }
}


================================================
File: server/node_modules/engine.io-parser/build/cjs/contrib/base64-arraybuffer.d.ts
================================================
export declare const encode: (arraybuffer: ArrayBuffer) => string;
export declare const decode: (base64: string) => ArrayBuffer;


================================================
File: server/node_modules/engine.io-parser/build/esm/commons.d.ts
================================================
declare const PACKET_TYPES: any;
declare const PACKET_TYPES_REVERSE: any;
declare const ERROR_PACKET: Packet;
export { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };
export type PacketType = "open" | "close" | "ping" | "pong" | "message" | "upgrade" | "noop" | "error";
export type RawData = any;
export interface Packet {
    type: PacketType;
    options?: {
        compress: boolean;
    };
    data?: RawData;
}
export type BinaryType = "nodebuffer" | "arraybuffer" | "blob";


================================================
File: server/node_modules/engine.io-parser/build/esm/commons.js
================================================
const PACKET_TYPES = Object.create(null); // no Map = no polyfill
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";
const PACKET_TYPES_REVERSE = Object.create(null);
Object.keys(PACKET_TYPES).forEach((key) => {
    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});
const ERROR_PACKET = { type: "error", data: "parser error" };
export { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };


================================================
File: server/node_modules/engine.io-parser/build/esm/decodePacket.browser.d.ts
================================================
import { Packet, BinaryType, RawData } from "./commons.js";
export declare const decodePacket: (encodedPacket: RawData, binaryType?: BinaryType) => Packet;


================================================
File: server/node_modules/engine.io-parser/build/esm/decodePacket.d.ts
================================================
import { Packet, BinaryType, RawData } from "./commons.js";
export declare const decodePacket: (encodedPacket: RawData, binaryType?: BinaryType) => Packet;


================================================
File: server/node_modules/engine.io-parser/build/esm/encodePacket.browser.d.ts
================================================
import { Packet, RawData } from "./commons.js";
declare const encodePacket: ({ type, data }: Packet, supportsBinary: boolean, callback: (encodedPacket: RawData) => void) => void;
export declare function encodePacketToBinary(packet: Packet, callback: (encodedPacket: RawData) => void): void | Promise<void>;
export { encodePacket };


================================================
File: server/node_modules/engine.io-parser/build/esm/encodePacket.d.ts
================================================
import { Packet, RawData } from "./commons.js";
export declare const encodePacket: ({ type, data }: Packet, supportsBinary: boolean, callback: (encodedPacket: RawData) => void) => void;
export declare function encodePacketToBinary(packet: Packet, callback: (encodedPacket: RawData) => void): void;


================================================
File: server/node_modules/engine.io-parser/build/esm/index.d.ts
================================================
import { encodePacket } from "./encodePacket.js";
import { decodePacket } from "./decodePacket.js";
import { Packet, PacketType, RawData, BinaryType } from "./commons.js";
declare const encodePayload: (packets: Packet[], callback: (encodedPayload: string) => void) => void;
declare const decodePayload: (encodedPayload: string, binaryType?: BinaryType) => Packet[];
export declare function createPacketEncoderStream(): any;
export declare function createPacketDecoderStream(maxPayload: number, binaryType: BinaryType): any;
export declare const protocol = 4;
export { encodePacket, encodePayload, decodePacket, decodePayload, Packet, PacketType, RawData, BinaryType, };


================================================
File: server/node_modules/engine.io-parser/build/esm/package.json
================================================
{
  "name": "engine.io-parser",
  "type": "module",
  "browser": {
    "./encodePacket.js": "./encodePacket.browser.js",
    "./decodePacket.js": "./decodePacket.browser.js"
  }
}


================================================
File: server/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.d.ts
================================================
export declare const encode: (arraybuffer: ArrayBuffer) => string;
export declare const decode: (base64: string) => ArrayBuffer;


================================================
File: server/node_modules/es-define-property/index.d.ts
================================================
declare const defineProperty: false | typeof Object.defineProperty;

export = defineProperty;

================================================
File: server/node_modules/es-define-property/index.js
================================================
'use strict';

/** @type {import('.')} */
var $defineProperty = Object.defineProperty || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;


================================================
File: server/node_modules/es-define-property/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2022",
	},
	"exclude": [
		"coverage",
		"test/list-exports"
	],
}


================================================
File: server/node_modules/es-define-property/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"new-cap": ["error", {
			"capIsNewExceptions": [
				"GetIntrinsic",
			],
		}],
	},
}


================================================
File: server/node_modules/es-define-property/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/es-define-property/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/es-define-property
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/es-errors/eval.d.ts
================================================
declare const EvalError: EvalErrorConstructor;

export = EvalError;


================================================
File: server/node_modules/es-errors/eval.js
================================================
'use strict';

/** @type {import('./eval')} */
module.exports = EvalError;


================================================
File: server/node_modules/es-errors/index.d.ts
================================================
declare const Error: ErrorConstructor;

export = Error;


================================================
File: server/node_modules/es-errors/index.js
================================================
'use strict';

/** @type {import('.')} */
module.exports = Error;


================================================
File: server/node_modules/es-errors/range.d.ts
================================================
declare const RangeError: RangeErrorConstructor;

export = RangeError;


================================================
File: server/node_modules/es-errors/range.js
================================================
'use strict';

/** @type {import('./range')} */
module.exports = RangeError;


================================================
File: server/node_modules/es-errors/ref.d.ts
================================================
declare const ReferenceError: ReferenceErrorConstructor;

export = ReferenceError;


================================================
File: server/node_modules/es-errors/ref.js
================================================
'use strict';

/** @type {import('./ref')} */
module.exports = ReferenceError;


================================================
File: server/node_modules/es-errors/syntax.d.ts
================================================
declare const SyntaxError: SyntaxErrorConstructor;

export = SyntaxError;


================================================
File: server/node_modules/es-errors/syntax.js
================================================
'use strict';

/** @type {import('./syntax')} */
module.exports = SyntaxError;


================================================
File: server/node_modules/es-errors/type.d.ts
================================================
declare const TypeError: TypeErrorConstructor

export = TypeError;


================================================
File: server/node_modules/es-errors/type.js
================================================
'use strict';

/** @type {import('./type')} */
module.exports = TypeError;


================================================
File: server/node_modules/es-errors/uri.d.ts
================================================
declare const URIError: URIErrorConstructor;

export = URIError;


================================================
File: server/node_modules/es-errors/uri.js
================================================
'use strict';

/** @type {import('./uri')} */
module.exports = URIError;


================================================
File: server/node_modules/es-errors/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",
}


================================================
File: server/node_modules/es-errors/test/index.js
================================================
'use strict';

var test = require('tape');

var E = require('../');
var R = require('../range');
var Ref = require('../ref');
var S = require('../syntax');
var T = require('../type');

test('errors', function (t) {
	t.equal(E, Error);
	t.equal(R, RangeError);
	t.equal(Ref, ReferenceError);
	t.equal(S, SyntaxError);
	t.equal(T, TypeError);

	t.end();
});


================================================
File: server/node_modules/es-errors/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/es-errors
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/es-object-atoms/RequireObjectCoercible.d.ts
================================================
declare function RequireObjectCoercible<T extends {}>(value: T, optMessage?: string): T;

export = RequireObjectCoercible;


================================================
File: server/node_modules/es-object-atoms/RequireObjectCoercible.js
================================================
'use strict';

var $TypeError = require('es-errors/type');

/** @type {import('./RequireObjectCoercible')} */
module.exports = function RequireObjectCoercible(value) {
	if (value == null) {
		throw new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));
	}
	return value;
};


================================================
File: server/node_modules/es-object-atoms/ToObject.d.ts
================================================
declare function ToObject<T extends object>(value: number): Number;
declare function ToObject<T extends object>(value: boolean): Boolean;
declare function ToObject<T extends object>(value: string): String;
declare function ToObject<T extends object>(value: bigint): BigInt;
declare function ToObject<T extends object>(value: T): T;

export = ToObject;


================================================
File: server/node_modules/es-object-atoms/ToObject.js
================================================
'use strict';

var $Object = require('./');
var RequireObjectCoercible = require('./RequireObjectCoercible');

/** @type {import('./ToObject')} */
module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};


================================================
File: server/node_modules/es-object-atoms/index.d.ts
================================================
declare const Object: ObjectConstructor;

export = Object;


================================================
File: server/node_modules/es-object-atoms/index.js
================================================
'use strict';

/** @type {import('.')} */
module.exports = Object;


================================================
File: server/node_modules/es-object-atoms/isObject.d.ts
================================================
declare function isObject(x: unknown): x is object;

export = isObject;


================================================
File: server/node_modules/es-object-atoms/isObject.js
================================================
'use strict';

/** @type {import('./isObject')} */
module.exports = function isObject(x) {
	return !!x && (typeof x === 'function' || typeof x === 'object');
};


================================================
File: server/node_modules/es-object-atoms/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es5",
	},
}


================================================
File: server/node_modules/es-object-atoms/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"eqeqeq": ["error", "allow-null"],
		"id-length": "off",
		"new-cap": ["error", {
			"capIsNewExceptions": [
				"RequireObjectCoercible",
				"ToObject",
			],
		}],
	},
}


================================================
File: server/node_modules/es-object-atoms/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/es-object
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/escape-html/Readme.md
================================================

# escape-html

  Escape string for use in HTML

## Example

```js
var escape = require('escape-html');
var html = escape('foo & bar');
// -> foo &amp; bar
```

## Benchmark

```
$ npm run-script bench

> escape-html@1.0.3 bench nodejs-escape-html
> node benchmark/index.js


  http_parser@1.0
  node@0.10.33
  v8@3.14.5.9
  ares@1.9.0-DEV
  uv@0.10.29
  zlib@1.2.3
  modules@11
  openssl@1.0.1j

  1 test completed.
  2 tests completed.
  3 tests completed.

  no special characters    x 19,435,271 ops/sec ±0.85% (187 runs sampled)
  single special character x  6,132,421 ops/sec ±0.67% (194 runs sampled)
  many special characters  x  3,175,826 ops/sec ±0.65% (193 runs sampled)
```

## License

  MIT

================================================
File: server/node_modules/escape-html/package.json
================================================
{
  "name": "escape-html",
  "description": "Escape string for use in HTML",
  "version": "1.0.3",
  "license": "MIT",
  "keywords": [
    "escape",
    "html",
    "utility"
  ],
  "repository": "component/escape-html",
  "devDependencies": {
    "benchmark": "1.0.0",
    "beautify-benchmark": "0.2.4"
  },
  "files": [
    "LICENSE",
    "Readme.md",
    "index.js"
  ],
  "scripts": {
    "bench": "node benchmark/index.js"
  }
}


================================================
File: server/node_modules/express/index.js
================================================
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

module.exports = require('./lib/express');


================================================
File: server/node_modules/express/lib/middleware/init.js
================================================
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @private
 */

var setPrototypeOf = require('setprototypeof')

/**
 * Initialization middleware, exposing the
 * request and response to each other, as well
 * as defaulting the X-Powered-By header field.
 *
 * @param {Function} app
 * @return {Function}
 * @api private
 */

exports.init = function(app){
  return function expressInit(req, res, next){
    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');
    req.res = res;
    res.req = req;
    req.next = next;

    setPrototypeOf(req, app.request)
    setPrototypeOf(res, app.response)

    res.locals = res.locals || Object.create(null);

    next();
  };
};



================================================
File: server/node_modules/express/lib/middleware/query.js
================================================
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var merge = require('utils-merge')
var parseUrl = require('parseurl');
var qs = require('qs');

/**
 * @param {Object} options
 * @return {Function}
 * @api public
 */

module.exports = function query(options) {
  var opts = merge({}, options)
  var queryparse = qs.parse;

  if (typeof options === 'function') {
    queryparse = options;
    opts = undefined;
  }

  if (opts !== undefined && opts.allowPrototypes === undefined) {
    // back-compat for qs module
    opts.allowPrototypes = true;
  }

  return function query(req, res, next){
    if (!req.query) {
      var val = parseUrl(req).query;
      req.query = queryparse(val, opts);
    }

    next();
  };
};


================================================
File: server/node_modules/follow-redirects/debug.js
================================================
var debug;

module.exports = function () {
  if (!debug) {
    try {
      /* eslint global-require: off */
      debug = require("debug")("follow-redirects");
    }
    catch (error) { /* */ }
    if (typeof debug !== "function") {
      debug = function () { /* */ };
    }
  }
  debug.apply(null, arguments);
};


================================================
File: server/node_modules/follow-redirects/http.js
================================================
module.exports = require("./").http;


================================================
File: server/node_modules/follow-redirects/https.js
================================================
module.exports = require("./").https;


================================================
File: server/node_modules/form-data/lib/browser.js
================================================
/* eslint-env browser */
module.exports = typeof self == 'object' ? self.FormData : window.FormData;


================================================
File: server/node_modules/form-data/lib/populate.js
================================================
// populates missing values
module.exports = function(dst, src) {

  Object.keys(src).forEach(function(prop)
  {
    dst[prop] = dst[prop] || src[prop];
  });

  return dst;
};


================================================
File: server/node_modules/forwarded/HISTORY.md
================================================
0.2.0 / 2021-05-31
==================

  * Use `req.socket` over deprecated `req.connection`

0.1.2 / 2017-09-14
==================

  * perf: improve header parsing
  * perf: reduce overhead when no `X-Forwarded-For` header

0.1.1 / 2017-09-10
==================

  * Fix trimming leading / trailing OWS
  * perf: hoist regular expression

0.1.0 / 2014-09-21
==================

  * Initial release


================================================
File: server/node_modules/function-bind/index.js
================================================
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;


================================================
File: server/node_modules/function-bind/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"func-name-matching": 0,
		"indent": [2, 4],
		"no-new-func": [1],
	},

	"overrides": [
		{
			"files": "test/**",
			"rules": {
				"max-lines-per-function": 0,
				"strict": [0]
			},
		},
	],
}


================================================
File: server/node_modules/function-bind/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/function-bind/test/.eslintrc
================================================
{
	"rules": {
		"array-bracket-newline": 0,
		"array-element-newline": 0,
		"max-statements-per-line": [2, { "max": 2 }],
		"no-invalid-this": 0,
		"no-magic-numbers": 0,
	}
}


================================================
File: server/node_modules/function-bind/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/function-bind
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/function-bind/.github/SECURITY.md
================================================
# Security

Please email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.


================================================
File: server/node_modules/get-intrinsic/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"env": {
		"es6": true,
		"es2017": true,
		"es2020": true,
		"es2021": true,
		"es2022": true,
	},

	"rules": {
		"array-bracket-newline": 0,
		"complexity": 0,
		"eqeqeq": [2, "allow-null"],
		"func-name-matching": 0,
		"id-length": 0,
		"max-lines": 0,
		"max-lines-per-function": [2, 90],
		"max-params": [2, 4],
		"max-statements": 0,
		"max-statements-per-line": [2, { "max": 2 }],
		"multiline-comment-style": 0,
		"no-magic-numbers": 0,
		"sort-keys": 0,
	},

	"overrides": [
		{
			"files": "test/**",
			"rules": {
				"new-cap": 0,
			},
		},
	],
}


================================================
File: server/node_modules/get-intrinsic/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/get-intrinsic/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/get-intrinsic
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/get-proto/Object.getPrototypeOf.d.ts
================================================
declare function getProto<O extends object>(object: O): object | null;

declare const x: typeof getProto | null;

export = x;

================================================
File: server/node_modules/get-proto/Object.getPrototypeOf.js
================================================
'use strict';

var $Object = require('es-object-atoms');

/** @type {import('./Object.getPrototypeOf')} */
module.exports = $Object.getPrototypeOf || null;


================================================
File: server/node_modules/get-proto/Reflect.getPrototypeOf.d.ts
================================================
declare const x: typeof Reflect.getPrototypeOf | null;

export = x;

================================================
File: server/node_modules/get-proto/Reflect.getPrototypeOf.js
================================================
'use strict';

/** @type {import('./Reflect.getPrototypeOf')} */
module.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;


================================================
File: server/node_modules/get-proto/index.d.ts
================================================
declare function getProto<O extends object>(object: O): object | null;

declare const x: typeof getProto | null;

export = x;


================================================
File: server/node_modules/get-proto/index.js
================================================
'use strict';

var reflectGetProto = require('./Reflect.getPrototypeOf');
var originalGetProto = require('./Object.getPrototypeOf');

var getDunderProto = require('dunder-proto/get');

/** @type {import('.')} */
module.exports = reflectGetProto
	? function getProto(O) {
		// @ts-expect-error TS can't narrow inside a closure, for some reason
		return reflectGetProto(O);
	}
	: originalGetProto
		? function getProto(O) {
			if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
				throw new TypeError('getProto: not an object');
			}
			// @ts-expect-error TS can't narrow inside a closure, for some reason
			return originalGetProto(O);
		}
		: getDunderProto
			? function getProto(O) {
				// @ts-expect-error TS can't narrow inside a closure, for some reason
				return getDunderProto(O);
			}
			: null;


================================================
File: server/node_modules/get-proto/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		//"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/get-proto/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"id-length": "off",
		"sort-keys": "off",
	},
}


================================================
File: server/node_modules/get-proto/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/get-proto/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/get-proto
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/gopd/gOPD.d.ts
================================================
export = Object.getOwnPropertyDescriptor;


================================================
File: server/node_modules/gopd/gOPD.js
================================================
'use strict';

/** @type {import('./gOPD')} */
module.exports = Object.getOwnPropertyDescriptor;


================================================
File: server/node_modules/gopd/index.d.ts
================================================
declare function gOPD<O extends object, K extends keyof O>(obj: O, prop: K): PropertyDescriptor | undefined;

declare const fn: typeof gOPD | undefined | null;

export = fn;

================================================
File: server/node_modules/gopd/index.js
================================================
'use strict';

/** @type {import('.')} */
var $gOPD = require('./gOPD');

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;


================================================
File: server/node_modules/gopd/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/gopd/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"func-style": [2, "declaration"],
		"id-length": 0,
		"multiline-comment-style": 0,
		"new-cap": [2, {
			"capIsNewExceptions": [
				"GetIntrinsic",
			],
		}],
	},
}


================================================
File: server/node_modules/gopd/test/index.js
================================================
'use strict';

var test = require('tape');
var gOPD = require('../');

test('gOPD', function (t) {
	t.test('supported', { skip: !gOPD }, function (st) {
		st.equal(typeof gOPD, 'function', 'is a function');

		var obj = { x: 1 };
		st.ok('x' in obj, 'property exists');

		// @ts-expect-error TS can't figure out narrowing from `skip`
		var desc = gOPD(obj, 'x');
		st.deepEqual(
			desc,
			{
				configurable: true,
				enumerable: true,
				value: 1,
				writable: true
			},
			'descriptor is as expected'
		);

		st.end();
	});

	t.test('not supported', { skip: !!gOPD }, function (st) {
		st.notOk(gOPD, 'is falsy');

		st.end();
	});

	t.end();
});


================================================
File: server/node_modules/gopd/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/gopd
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/has-symbols/index.d.ts
================================================
declare function hasNativeSymbols(): boolean;

export = hasNativeSymbols;

================================================
File: server/node_modules/has-symbols/index.js
================================================
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

/** @type {import('.')} */
module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


================================================
File: server/node_modules/has-symbols/shams.d.ts
================================================
declare function hasSymbolShams(): boolean;

export = hasSymbolShams;

================================================
File: server/node_modules/has-symbols/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "ES2021",
		"maxNodeModuleJsDepth": 0,
	},
	"exclude": [
		"coverage"
	]
}


================================================
File: server/node_modules/has-symbols/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"max-statements-per-line": [2, { "max": 2 }],
		"no-magic-numbers": 0,
		"multiline-comment-style": 0,
	}
}


================================================
File: server/node_modules/has-symbols/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/has-symbols/test/index.js
================================================
'use strict';

var test = require('tape');
var hasSymbols = require('../');
var runSymbolTests = require('./tests');

test('interface', function (t) {
	t.equal(typeof hasSymbols, 'function', 'is a function');
	t.equal(typeof hasSymbols(), 'boolean', 'returns a boolean');
	t.end();
});

test('Symbols are supported', { skip: !hasSymbols() }, function (t) {
	runSymbolTests(t);
	t.end();
});

test('Symbols are not supported', { skip: hasSymbols() }, function (t) {
	t.equal(typeof Symbol, 'undefined', 'global Symbol is undefined');
	t.equal(typeof Object.getOwnPropertySymbols, 'undefined', 'Object.getOwnPropertySymbols does not exist');
	t.end();
});


================================================
File: server/node_modules/has-symbols/test/shams/core-js.js
================================================
'use strict';

var test = require('tape');

if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {
	test('has native Symbol support', function (t) {
		t.equal(typeof Symbol, 'function');
		t.equal(typeof Symbol(), 'symbol');
		t.end();
	});
	// @ts-expect-error TS is stupid and doesn't know about top level return
	return;
}

var hasSymbols = require('../../shams');

test('polyfilled Symbols', function (t) {
	/* eslint-disable global-require */
	t.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');
	require('core-js/fn/symbol');
	require('core-js/fn/symbol/to-string-tag');

	require('../tests')(t);

	var hasSymbolsAfter = hasSymbols();
	t.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');
	/* eslint-enable global-require */
	t.end();
});


================================================
File: server/node_modules/has-symbols/test/shams/get-own-property-symbols.js
================================================
'use strict';

var test = require('tape');

if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {
	test('has native Symbol support', function (t) {
		t.equal(typeof Symbol, 'function');
		t.equal(typeof Symbol(), 'symbol');
		t.end();
	});
	// @ts-expect-error TS is stupid and doesn't know about top level return
	return;
}

var hasSymbols = require('../../shams');

test('polyfilled Symbols', function (t) {
	/* eslint-disable global-require */
	t.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');

	require('get-own-property-symbols');

	require('../tests')(t);

	var hasSymbolsAfter = hasSymbols();
	t.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');
	/* eslint-enable global-require */
	t.end();
});


================================================
File: server/node_modules/has-symbols/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/has-symbols
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/hasown/index.d.ts
================================================
declare function hasOwn<O, K extends PropertyKey, V = unknown>(o: O, p: K): o is O & Record<K, V>;

export = hasOwn;


================================================
File: server/node_modules/hasown/index.js
================================================
'use strict';

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = require('function-bind');

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);


================================================
File: server/node_modules/hasown/tsconfig.json
================================================
{
  "extends": "@ljharb/tsconfig",
  "exclude": [
    "coverage",
  ],
}


================================================
File: server/node_modules/hasown/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",
}


================================================
File: server/node_modules/hasown/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/hasown/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/hasown
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/https-proxy-agent/dist/index.d.ts
================================================
/// <reference types="node" />
import net from 'net';
import tls from 'tls';
import { Url } from 'url';
import { AgentOptions } from 'agent-base';
import { OutgoingHttpHeaders } from 'http';
import _HttpsProxyAgent from './agent';
declare function createHttpsProxyAgent(opts: string | createHttpsProxyAgent.HttpsProxyAgentOptions): _HttpsProxyAgent;
declare namespace createHttpsProxyAgent {
    interface BaseHttpsProxyAgentOptions {
        headers?: OutgoingHttpHeaders;
        secureProxy?: boolean;
        host?: string | null;
        path?: string | null;
        port?: string | number | null;
    }
    export interface HttpsProxyAgentOptions extends AgentOptions, BaseHttpsProxyAgentOptions, Partial<Omit<Url & net.NetConnectOpts & tls.ConnectionOptions, keyof BaseHttpsProxyAgentOptions>> {
    }
    export type HttpsProxyAgent = _HttpsProxyAgent;
    export const HttpsProxyAgent: typeof _HttpsProxyAgent;
    export {};
}
export = createHttpsProxyAgent;


================================================
File: server/node_modules/https-proxy-agent/dist/index.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const agent_1 = __importDefault(require("./agent"));
function createHttpsProxyAgent(opts) {
    return new agent_1.default(opts);
}
(function (createHttpsProxyAgent) {
    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;
    createHttpsProxyAgent.prototype = agent_1.default.prototype;
})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));
module.exports = createHttpsProxyAgent;
//# sourceMappingURL=index.js.map

================================================
File: server/node_modules/https-proxy-agent/dist/parse-proxy-response.d.ts
================================================
/// <reference types="node" />
import { Readable } from 'stream';
export interface ProxyResponse {
    statusCode: number;
    buffered: Buffer;
}
export default function parseProxyResponse(socket: Readable): Promise<ProxyResponse>;


================================================
File: server/node_modules/https-proxy-agent/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/https-proxy-agent/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/iconv-lite/encodings/index.js
================================================
"use strict";

// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules = [
    require("./internal"),
    require("./utf16"),
    require("./utf7"),
    require("./sbcs-codec"),
    require("./sbcs-data"),
    require("./sbcs-data-generated"),
    require("./dbcs-codec"),
    require("./dbcs-data"),
];

// Put all encoding/alias/codec definitions to single object and export it. 
for (var i = 0; i < modules.length; i++) {
    var module = modules[i];
    for (var enc in module)
        if (Object.prototype.hasOwnProperty.call(module, enc))
            exports[enc] = module[enc];
}


================================================
File: server/node_modules/iconv-lite/lib/index.d.ts
================================================
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License.
 *  REQUIREMENT: This definition is dependent on the @types/node definition.
 *  Install with `npm install @types/node --save-dev`
 *--------------------------------------------------------------------------------------------*/

declare module 'iconv-lite' {
	export function decode(buffer: Buffer, encoding: string, options?: Options): string;

	export function encode(content: string, encoding: string, options?: Options): Buffer;

	export function encodingExists(encoding: string): boolean;

	export function decodeStream(encoding: string, options?: Options): NodeJS.ReadWriteStream;

	export function encodeStream(encoding: string, options?: Options): NodeJS.ReadWriteStream;
}

export interface Options {
    stripBOM?: boolean;
    addBOM?: boolean;
    defaultEncoding?: string;
}


================================================
File: server/node_modules/inherits/LICENSE
================================================
The ISC License

Copyright (c) Isaac Z. Schlueter

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.



================================================
File: server/node_modules/inherits/inherits.js
================================================
try {
  var util = require('util');
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = require('./inherits_browser.js');
}


================================================
File: server/node_modules/inherits/inherits_browser.js
================================================
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


================================================
File: server/node_modules/inherits/package.json
================================================
{
  "name": "inherits",
  "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
  "version": "2.0.4",
  "keywords": [
    "inheritance",
    "class",
    "klass",
    "oop",
    "object-oriented",
    "inherits",
    "browser",
    "browserify"
  ],
  "main": "./inherits.js",
  "browser": "./inherits_browser.js",
  "repository": "git://github.com/isaacs/inherits",
  "license": "ISC",
  "scripts": {
    "test": "tap"
  },
  "devDependencies": {
    "tap": "^14.2.4"
  },
  "files": [
    "inherits.js",
    "inherits_browser.js"
  ]
}


================================================
File: server/node_modules/ipaddr.js/package.json
================================================
{
  "name": "ipaddr.js",
  "description": "A library for manipulating IPv4 and IPv6 addresses in JavaScript.",
  "version": "1.9.1",
  "author": "whitequark <whitequark@whitequark.org>",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "~1.12.6",
    "nodeunit": "^0.11.3",
    "uglify-js": "~3.0.19"
  },
  "scripts": {
    "test": "cake build test"
  },
  "files": [
    "lib/",
    "LICENSE",
    "ipaddr.min.js"
  ],
  "keywords": [
    "ip",
    "ipv4",
    "ipv6"
  ],
  "repository": "git://github.com/whitequark/ipaddr.js",
  "main": "./lib/ipaddr.js",
  "engines": {
    "node": ">= 0.10"
  },
  "license": "MIT",
  "types": "./lib/ipaddr.js.d.ts"
}


================================================
File: server/node_modules/jsonwebtoken/decode.js
================================================
var jws = require('jws');

module.exports = function (jwt, options) {
  options = options || {};
  var decoded = jws.decode(jwt, options);
  if (!decoded) { return null; }
  var payload = decoded.payload;

  //try parse the payload
  if(typeof payload === 'string') {
    try {
      var obj = JSON.parse(payload);
      if(obj !== null && typeof obj === 'object') {
        payload = obj;
      }
    } catch (e) { }
  }

  //return header if `complete` option is enabled.  header includes claims
  //such as `kid` and `alg` used to select the key within a JWKS needed to
  //verify the signature
  if (options.complete === true) {
    return {
      header: decoded.header,
      payload: payload,
      signature: decoded.signature
    };
  }
  return payload;
};


================================================
File: server/node_modules/jsonwebtoken/index.js
================================================
module.exports = {
  decode: require('./decode'),
  verify: require('./verify'),
  sign: require('./sign'),
  JsonWebTokenError: require('./lib/JsonWebTokenError'),
  NotBeforeError: require('./lib/NotBeforeError'),
  TokenExpiredError: require('./lib/TokenExpiredError'),
};


================================================
File: server/node_modules/jsonwebtoken/lib/JsonWebTokenError.js
================================================
var JsonWebTokenError = function (message, error) {
  Error.call(this, message);
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  }
  this.name = 'JsonWebTokenError';
  this.message = message;
  if (error) this.inner = error;
};

JsonWebTokenError.prototype = Object.create(Error.prototype);
JsonWebTokenError.prototype.constructor = JsonWebTokenError;

module.exports = JsonWebTokenError;


================================================
File: server/node_modules/jsonwebtoken/lib/NotBeforeError.js
================================================
var JsonWebTokenError = require('./JsonWebTokenError');

var NotBeforeError = function (message, date) {
  JsonWebTokenError.call(this, message);
  this.name = 'NotBeforeError';
  this.date = date;
};

NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);

NotBeforeError.prototype.constructor = NotBeforeError;

module.exports = NotBeforeError;

================================================
File: server/node_modules/jsonwebtoken/lib/TokenExpiredError.js
================================================
var JsonWebTokenError = require('./JsonWebTokenError');

var TokenExpiredError = function (message, expiredAt) {
  JsonWebTokenError.call(this, message);
  this.name = 'TokenExpiredError';
  this.expiredAt = expiredAt;
};

TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);

TokenExpiredError.prototype.constructor = TokenExpiredError;

module.exports = TokenExpiredError;

================================================
File: server/node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js
================================================
const semver = require('semver');

module.exports = semver.satisfies(process.version, '>=15.7.0');


================================================
File: server/node_modules/jsonwebtoken/lib/psSupported.js
================================================
var semver = require('semver');

module.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');


================================================
File: server/node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js
================================================
const semver = require('semver');

module.exports = semver.satisfies(process.version, '>=16.9.0');


================================================
File: server/node_modules/jsonwebtoken/lib/timespan.js
================================================
var ms = require('ms');

module.exports = function (time, iat) {
  var timestamp = iat || Math.floor(Date.now() / 1000);

  if (typeof time === 'string') {
    var milliseconds = ms(time);
    if (typeof milliseconds === 'undefined') {
      return;
    }
    return Math.floor(timestamp + milliseconds / 1000);
  } else if (typeof time === 'number') {
    return timestamp + time;
  } else {
    return;
  }

};

================================================
File: server/node_modules/jsonwebtoken/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/jwa/package.json
================================================
{
  "name": "jwa",
  "version": "1.4.1",
  "description": "JWA implementation (supports all JWS algorithms)",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "buffer-equal-constant-time": "1.0.1",
    "ecdsa-sig-formatter": "1.0.11",
    "safe-buffer": "^5.0.1"
  },
  "devDependencies": {
    "base64url": "^2.0.0",
    "jwk-to-pem": "^2.0.1",
    "semver": "4.3.6",
    "tap": "6.2.0"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianloveswords/node-jwa.git"
  },
  "keywords": [
    "jwa",
    "jws",
    "jwt",
    "rsa",
    "ecdsa",
    "hmac"
  ],
  "author": "Brian J. Brennan <brianloveswords@gmail.com>",
  "license": "MIT"
}


================================================
File: server/node_modules/jws/index.js
================================================
/*global exports*/
var SignStream = require('./lib/sign-stream');
var VerifyStream = require('./lib/verify-stream');

var ALGORITHMS = [
  'HS256', 'HS384', 'HS512',
  'RS256', 'RS384', 'RS512',
  'PS256', 'PS384', 'PS512',
  'ES256', 'ES384', 'ES512'
];

exports.ALGORITHMS = ALGORITHMS;
exports.sign = SignStream.sign;
exports.verify = VerifyStream.verify;
exports.decode = VerifyStream.decode;
exports.isValid = VerifyStream.isValid;
exports.createSign = function createSign(opts) {
  return new SignStream(opts);
};
exports.createVerify = function createVerify(opts) {
  return new VerifyStream(opts);
};


================================================
File: server/node_modules/jws/package.json
================================================
{
  "name": "jws",
  "version": "3.2.2",
  "description": "Implementation of JSON Web Signatures",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianloveswords/node-jws.git"
  },
  "keywords": [
    "jws",
    "json",
    "web",
    "signatures"
  ],
  "author": "Brian J Brennan",
  "license": "MIT",
  "readmeFilename": "readme.md",
  "gitHead": "c0f6b27bcea5a2ad2e304d91c2e842e4076a6b03",
  "dependencies": {
    "jwa": "^1.4.1",
    "safe-buffer": "^5.0.1"
  },
  "devDependencies": {
    "semver": "^5.1.0",
    "tape": "~2.14.0"
  }
}


================================================
File: server/node_modules/jws/lib/tostring.js
================================================
/*global module*/
var Buffer = require('buffer').Buffer;

module.exports = function toString(obj) {
  if (typeof obj === 'string')
    return obj;
  if (typeof obj === 'number' || Buffer.isBuffer(obj))
    return obj.toString();
  return JSON.stringify(obj);
};


================================================
File: server/node_modules/lodash.includes/README.md
================================================
# lodash.includes v4.3.0

The [lodash](https://lodash.com/) method `_.includes` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.includes
```

In Node.js:
```js
var includes = require('lodash.includes');
```

See the [documentation](https://lodash.com/docs#includes) or [package source](https://github.com/lodash/lodash/blob/4.3.0-npm-packages/lodash.includes) for more details.


================================================
File: server/node_modules/lodash.includes/package.json
================================================
{
  "name": "lodash.includes",
  "version": "4.3.0",
  "description": "The lodash method `_.includes` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, includes",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine.bublitz@gmail.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.isboolean/README.md
================================================
# lodash.isboolean v3.0.3

The [lodash](https://lodash.com/) method `_.isBoolean` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.isboolean
```

In Node.js:
```js
var isBoolean = require('lodash.isboolean');
```

See the [documentation](https://lodash.com/docs#isBoolean) or [package source](https://github.com/lodash/lodash/blob/3.0.3-npm-packages/lodash.isboolean) for more details.


================================================
File: server/node_modules/lodash.isboolean/package.json
================================================
{
  "name": "lodash.isboolean",
  "version": "3.0.3",
  "description": "The lodash method `_.isBoolean` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, isboolean",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine@iceddev.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.isinteger/README.md
================================================
# lodash.isinteger v4.0.4

The [lodash](https://lodash.com/) method `_.isInteger` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.isinteger
```

In Node.js:
```js
var isInteger = require('lodash.isinteger');
```

See the [documentation](https://lodash.com/docs#isInteger) or [package source](https://github.com/lodash/lodash/blob/4.0.4-npm-packages/lodash.isinteger) for more details.


================================================
File: server/node_modules/lodash.isinteger/package.json
================================================
{
  "name": "lodash.isinteger",
  "version": "4.0.4",
  "description": "The lodash method `_.isInteger` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, isinteger",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine.bublitz@gmail.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.isnumber/README.md
================================================
# lodash.isnumber v3.0.3

The [lodash](https://lodash.com/) method `_.isNumber` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.isnumber
```

In Node.js:
```js
var isNumber = require('lodash.isnumber');
```

See the [documentation](https://lodash.com/docs#isNumber) or [package source](https://github.com/lodash/lodash/blob/3.0.3-npm-packages/lodash.isnumber) for more details.


================================================
File: server/node_modules/lodash.isnumber/package.json
================================================
{
  "name": "lodash.isnumber",
  "version": "3.0.3",
  "description": "The lodash method `_.isNumber` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, isnumber",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine@iceddev.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.isplainobject/README.md
================================================
# lodash.isplainobject v4.0.6

The [lodash](https://lodash.com/) method `_.isPlainObject` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.isplainobject
```

In Node.js:
```js
var isPlainObject = require('lodash.isplainobject');
```

See the [documentation](https://lodash.com/docs#isPlainObject) or [package source](https://github.com/lodash/lodash/blob/4.0.6-npm-packages/lodash.isplainobject) for more details.


================================================
File: server/node_modules/lodash.isplainobject/package.json
================================================
{
  "name": "lodash.isplainobject",
  "version": "4.0.6",
  "description": "The lodash method `_.isPlainObject` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, isplainobject",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine.bublitz@gmail.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.isstring/README.md
================================================
# lodash.isstring v4.0.1

The [lodash](https://lodash.com/) method `_.isString` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.isstring
```

In Node.js:
```js
var isString = require('lodash.isstring');
```

See the [documentation](https://lodash.com/docs#isString) or [package source](https://github.com/lodash/lodash/blob/4.0.1-npm-packages/lodash.isstring) for more details.


================================================
File: server/node_modules/lodash.isstring/package.json
================================================
{
  "name": "lodash.isstring",
  "version": "4.0.1",
  "description": "The lodash method `_.isString` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, isstring",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine@iceddev.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/lodash.once/README.md
================================================
# lodash.once v4.1.1

The [lodash](https://lodash.com/) method `_.once` exported as a [Node.js](https://nodejs.org/) module.

## Installation

Using npm:
```bash
$ {sudo -H} npm i -g npm
$ npm i --save lodash.once
```

In Node.js:
```js
var once = require('lodash.once');
```

See the [documentation](https://lodash.com/docs#once) or [package source](https://github.com/lodash/lodash/blob/4.1.1-npm-packages/lodash.once) for more details.


================================================
File: server/node_modules/lodash.once/package.json
================================================
{
  "name": "lodash.once",
  "version": "4.1.1",
  "description": "The lodash method `_.once` exported as a module.",
  "homepage": "https://lodash.com/",
  "icon": "https://lodash.com/icon.svg",
  "license": "MIT",
  "keywords": "lodash-modularized, once",
  "author": "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
  "contributors": [
    "John-David Dalton <john.david.dalton@gmail.com> (http://allyoucanleet.com/)",
    "Blaine Bublitz <blaine.bublitz@gmail.com> (https://github.com/phated)",
    "Mathias Bynens <mathias@qiwi.be> (https://mathiasbynens.be/)"
  ],
  "repository": "lodash/lodash",
  "scripts": { "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\"" }
}


================================================
File: server/node_modules/math-intrinsics/abs.d.ts
================================================
export = Math.abs;

================================================
File: server/node_modules/math-intrinsics/abs.js
================================================
'use strict';

/** @type {import('./abs')} */
module.exports = Math.abs;


================================================
File: server/node_modules/math-intrinsics/floor.d.ts
================================================
export = Math.floor;

================================================
File: server/node_modules/math-intrinsics/floor.js
================================================
'use strict';

/** @type {import('./floor')} */
module.exports = Math.floor;


================================================
File: server/node_modules/math-intrinsics/isFinite.d.ts
================================================
declare function isFinite(x: unknown): x is number | bigint;

export = isFinite;

================================================
File: server/node_modules/math-intrinsics/isFinite.js
================================================
'use strict';

var $isNaN = require('./isNaN');

/** @type {import('./isFinite')} */
module.exports = function isFinite(x) {
	return (typeof x === 'number' || typeof x === 'bigint')
        && !$isNaN(x)
        && x !== Infinity
        && x !== -Infinity;
};



================================================
File: server/node_modules/math-intrinsics/isInteger.d.ts
================================================
declare function isInteger(argument: unknown): argument is number;

export = isInteger;

================================================
File: server/node_modules/math-intrinsics/isInteger.js
================================================
'use strict';

var $abs = require('./abs');
var $floor = require('./floor');

var $isNaN = require('./isNaN');
var $isFinite = require('./isFinite');

/** @type {import('./isInteger')} */
module.exports = function isInteger(argument) {
	if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {
		return false;
	}
	var absValue = $abs(argument);
	return $floor(absValue) === absValue;
};


================================================
File: server/node_modules/math-intrinsics/isNaN.d.ts
================================================
export = Number.isNaN;

================================================
File: server/node_modules/math-intrinsics/isNaN.js
================================================
'use strict';

/** @type {import('./isNaN')} */
module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};


================================================
File: server/node_modules/math-intrinsics/isNegativeZero.d.ts
================================================
declare function isNegativeZero(x: unknown): boolean;

export = isNegativeZero;

================================================
File: server/node_modules/math-intrinsics/isNegativeZero.js
================================================
'use strict';

/** @type {import('./isNegativeZero')} */
module.exports = function isNegativeZero(x) {
	return x === 0 && 1 / x === 1 / -0;
};


================================================
File: server/node_modules/math-intrinsics/max.d.ts
================================================
export = Math.max;

================================================
File: server/node_modules/math-intrinsics/max.js
================================================
'use strict';

/** @type {import('./max')} */
module.exports = Math.max;


================================================
File: server/node_modules/math-intrinsics/min.d.ts
================================================
export = Math.min;

================================================
File: server/node_modules/math-intrinsics/min.js
================================================
'use strict';

/** @type {import('./min')} */
module.exports = Math.min;


================================================
File: server/node_modules/math-intrinsics/mod.d.ts
================================================
declare function mod(number: number, modulo: number): number;

export = mod;

================================================
File: server/node_modules/math-intrinsics/mod.js
================================================
'use strict';

var $floor = require('./floor');

/** @type {import('./mod')} */
module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};


================================================
File: server/node_modules/math-intrinsics/pow.d.ts
================================================
export = Math.pow;

================================================
File: server/node_modules/math-intrinsics/pow.js
================================================
'use strict';

/** @type {import('./pow')} */
module.exports = Math.pow;


================================================
File: server/node_modules/math-intrinsics/round.d.ts
================================================
export = Math.round;

================================================
File: server/node_modules/math-intrinsics/round.js
================================================
'use strict';

/** @type {import('./round')} */
module.exports = Math.round;


================================================
File: server/node_modules/math-intrinsics/sign.d.ts
================================================
declare function sign(x: number): number;

export = sign;

================================================
File: server/node_modules/math-intrinsics/sign.js
================================================
'use strict';

var $isNaN = require('./isNaN');

/** @type {import('./sign')} */
module.exports = function sign(number) {
	if ($isNaN(number) || number === 0) {
		return number;
	}
	return number < 0 ? -1 : +1;
};


================================================
File: server/node_modules/math-intrinsics/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
}


================================================
File: server/node_modules/math-intrinsics/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"eqeqeq": ["error", "allow-null"],
		"id-length": "off",
		"new-cap": ["error", {
			"capIsNewExceptions": [
				"RequireObjectCoercible",
				"ToObject",
			],
		}],
	},
}


================================================
File: server/node_modules/math-intrinsics/constants/maxArrayLength.d.ts
================================================
declare const MAX_ARRAY_LENGTH: 4294967295;

export = MAX_ARRAY_LENGTH;

================================================
File: server/node_modules/math-intrinsics/constants/maxArrayLength.js
================================================
'use strict';

/** @type {import('./maxArrayLength')} */
module.exports = 4294967295; // Math.pow(2, 32) - 1;


================================================
File: server/node_modules/math-intrinsics/constants/maxSafeInteger.d.ts
================================================
declare const MAX_SAFE_INTEGER: 9007199254740991;

export = MAX_SAFE_INTEGER;

================================================
File: server/node_modules/math-intrinsics/constants/maxSafeInteger.js
================================================
'use strict';

/** @type {import('./maxSafeInteger')} */
// eslint-disable-next-line no-extra-parens
module.exports = /** @type {import('./maxSafeInteger')} */ (Number.MAX_SAFE_INTEGER) || 9007199254740991; // Math.pow(2, 53) - 1;


================================================
File: server/node_modules/math-intrinsics/constants/maxValue.d.ts
================================================
declare const MAX_VALUE: 1.7976931348623157e+308;

export = MAX_VALUE;


================================================
File: server/node_modules/math-intrinsics/constants/maxValue.js
================================================
'use strict';

/** @type {import('./maxValue')}  */
// eslint-disable-next-line no-extra-parens
module.exports = /** @type {import('./maxValue')}  */ (Number.MAX_VALUE) || 1.7976931348623157e+308;


================================================
File: server/node_modules/math-intrinsics/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/math-intrinsics
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/media-typer/HISTORY.md
================================================
0.3.0 / 2014-09-07
==================

  * Support Node.js 0.6
  * Throw error when parameter format invalid on parse

0.2.0 / 2014-06-18
==================

  * Add `typer.format()` to format media types

0.1.0 / 2014-06-17
==================

  * Accept `req` as argument to `parse`
  * Accept `res` as argument to `parse`
  * Parse media type with extra LWS between type and first parameter

0.0.0 / 2014-06-13
==================

  * Initial implementation


================================================
File: server/node_modules/media-typer/package.json
================================================
{
  "name": "media-typer",
  "description": "Simple RFC 6838 media type parser and formatter",
  "version": "0.3.0",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "repository": "jshttp/media-typer",
  "devDependencies": {
    "istanbul": "0.3.2",
    "mocha": "~1.21.4",
    "should": "~4.0.4"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}


================================================
File: server/node_modules/merge-descriptors/HISTORY.md
================================================
1.0.1 / 2016-01-17
==================

  * perf: enable strict mode

1.0.0 / 2015-03-01
==================

  * Add option to only add new descriptors
  * Add simple argument validation
  * Add jsdoc to source file

0.0.2 / 2013-12-14
==================

  * Move repository to `component` organization

0.0.1 / 2013-10-29
==================

  * Initial release


================================================
File: server/node_modules/methods/HISTORY.md
================================================
1.1.2 / 2016-01-17
==================

  * perf: enable strict mode

1.1.1 / 2014-12-30
==================

  * Improve `browserify` support

1.1.0 / 2014-07-05
==================

  * Add `CONNECT` method
 
1.0.1 / 2014-06-02
==================

  * Fix module to work with harmony transform

1.0.0 / 2014-05-08
==================

  * Add `PURGE` method

0.1.0 / 2013-10-28
==================

  * Add `http.METHODS` support


================================================
File: server/node_modules/methods/package.json
================================================
{
  "name": "methods",
  "description": "HTTP methods that node supports",
  "version": "1.1.2",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)",
    "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)"
  ],
  "license": "MIT",
  "repository": "jshttp/methods",
  "devDependencies": {
    "istanbul": "0.4.1",
    "mocha": "1.21.5"
  },
  "files": [
    "index.js",
    "HISTORY.md",
    "LICENSE"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  },
  "browser": {
    "http": false
  },
  "keywords": [
    "http",
    "methods"
  ]
}


================================================
File: server/node_modules/mime/cli.js
================================================
#!/usr/bin/env node

var mime = require('./mime.js');
var file = process.argv[2];
var type = mime.lookup(file);

process.stdout.write(type + '\n');



================================================
File: server/node_modules/mime/package.json
================================================
{
  "author": {
    "name": "Robert Kieffer",
    "url": "http://github.com/broofa",
    "email": "robert@broofa.com"
  },
  "bin": {
    "mime": "cli.js"
  },
  "engines": {
    "node": ">=4"
  },
  "contributors": [
    {
      "name": "Benjamin Thomas",
      "url": "http://github.com/bentomas",
      "email": "benjamin@benjaminthomas.org"
    }
  ],
  "description": "A comprehensive library for mime-type mapping",
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "github-release-notes": "0.13.1",
    "mime-db": "1.31.0",
    "mime-score": "1.1.0"
  },
  "scripts": {
    "prepare": "node src/build.js",
    "changelog": "gren changelog --tags=all --generate --override",
    "test": "node src/test.js"
  },
  "keywords": [
    "util",
    "mime"
  ],
  "main": "mime.js",
  "name": "mime",
  "repository": {
    "url": "https://github.com/broofa/node-mime",
    "type": "git"
  },
  "version": "1.6.0"
}


================================================
File: server/node_modules/mime-db/index.js
================================================
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015-2022 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 */

module.exports = require('./db.json')


================================================
File: server/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.0.0",
  "description": "Tiny milisecond conversion utility",
  "repository": "zeit/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "3.19.0",
    "expect.js": "0.3.1",
    "husky": "0.13.3",
    "lint-staged": "3.4.1",
    "mocha": "3.4.1"
  }
}


================================================
File: server/node_modules/negotiator/package.json
================================================
{
  "name": "negotiator",
  "description": "HTTP content negotiation",
  "version": "0.6.3",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Federico Romero <federico.romero@outboxlabs.com>",
    "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)"
  ],
  "license": "MIT",
  "keywords": [
    "http",
    "content negotiation",
    "accept",
    "accept-language",
    "accept-encoding",
    "accept-charset"
  ],
  "repository": "jshttp/negotiator",
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-plugin-markdown": "2.2.1",
    "mocha": "9.1.3",
    "nyc": "15.1.0"
  },
  "files": [
    "lib/",
    "HISTORY.md",
    "LICENSE",
    "index.js",
    "README.md"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}


================================================
File: server/node_modules/object-assign/package.json
================================================
{
  "name": "object-assign",
  "version": "4.1.1",
  "description": "ES2015 `Object.assign()` ponyfill",
  "license": "MIT",
  "repository": "sindresorhus/object-assign",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && ava",
    "bench": "matcha bench.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "object",
    "assign",
    "extend",
    "properties",
    "es2015",
    "ecmascript",
    "harmony",
    "ponyfill",
    "prollyfill",
    "polyfill",
    "shim",
    "browser"
  ],
  "devDependencies": {
    "ava": "^0.16.0",
    "lodash": "^4.16.4",
    "matcha": "^0.7.0",
    "xo": "^0.16.0"
  }
}


================================================
File: server/node_modules/object-inspect/package-support.json
================================================
{
  "versions": [
    {
      "version": "*",
      "target": {
        "node": "all"
      },
      "response": {
        "type": "time-permitting"
      },
      "backing": {
        "npm-funding": true,
        "donations": [
          "https://github.com/ljharb",
          "https://tidelift.com/funding/github/npm/object-inspect"
        ]
      }
    }
  ]
}


================================================
File: server/node_modules/object-inspect/test-core-js.js
================================================
'use strict';

require('core-js');

var inspect = require('./');
var test = require('tape');

test('Maps', function (t) {
    t.equal(inspect(new Map([[1, 2]])), 'Map (1) {1 => 2}');
    t.end();
});

test('WeakMaps', function (t) {
    t.equal(inspect(new WeakMap([[{}, 2]])), 'WeakMap { ? }');
    t.end();
});

test('Sets', function (t) {
    t.equal(inspect(new Set([[1, 2]])), 'Set (1) {[ 1, 2 ]}');
    t.end();
});

test('WeakSets', function (t) {
    t.equal(inspect(new WeakSet([[1, 2]])), 'WeakSet { ? }');
    t.end();
});


================================================
File: server/node_modules/object-inspect/util.inspect.js
================================================
module.exports = require('util').inspect;


================================================
File: server/node_modules/object-inspect/.nycrc
================================================
{
  "all": true,
  "check-coverage": false,
  "instrumentation": false,
  "sourceMap": false,
  "reporter": ["text-summary", "text", "html", "json"],
  "exclude": [
    "coverage",
    "example",
    "test",
    "test-core-js.js"
  ]
}


================================================
File: server/node_modules/object-inspect/example/all.js
================================================
'use strict';

var inspect = require('../');
var Buffer = require('safer-buffer').Buffer;

var holes = ['a', 'b'];
holes[4] = 'e';
holes[6] = 'g';

var obj = {
    a: 1,
    b: [3, 4, undefined, null],
    c: undefined,
    d: null,
    e: {
        regex: /^x/i,
        buf: Buffer.from('abc'),
        holes: holes
    },
    now: new Date()
};
obj.self = obj;
console.log(inspect(obj));


================================================
File: server/node_modules/object-inspect/example/circular.js
================================================
'use strict';

var inspect = require('../');
var obj = { a: 1, b: [3, 4] };
obj.c = obj;
console.log(inspect(obj));


================================================
File: server/node_modules/object-inspect/example/fn.js
================================================
'use strict';

var inspect = require('../');
var obj = [1, 2, function f(n) { return n + 5; }, 4];
console.log(inspect(obj));


================================================
File: server/node_modules/object-inspect/example/inspect.js
================================================
'use strict';

/* eslint-env browser */
var inspect = require('../');

var d = document.createElement('div');
d.setAttribute('id', 'beep');
d.innerHTML = '<b>wooo</b><i>iiiii</i>';

console.log(inspect([d, { a: 3, b: 4, c: [5, 6, [7, [8, [9]]]] }]));


================================================
File: server/node_modules/object-inspect/test/circular.js
================================================
var inspect = require('../');
var test = require('tape');

test('circular', function (t) {
    t.plan(2);
    var obj = { a: 1, b: [3, 4] };
    obj.c = obj;
    t.equal(inspect(obj), '{ a: 1, b: [ 3, 4 ], c: [Circular] }');

    var double = {};
    double.a = [double];
    double.b = {};
    double.b.inner = double.b;
    double.b.obj = double;
    t.equal(inspect(double), '{ a: [ [Circular] ], b: { inner: [Circular], obj: [Circular] } }');
});


================================================
File: server/node_modules/object-inspect/test/deep.js
================================================
var inspect = require('../');
var test = require('tape');

test('deep', function (t) {
    t.plan(4);
    var obj = [[[[[[500]]]]]];
    t.equal(inspect(obj), '[ [ [ [ [ [Array] ] ] ] ] ]');
    t.equal(inspect(obj, { depth: 4 }), '[ [ [ [ [Array] ] ] ] ]');
    t.equal(inspect(obj, { depth: 2 }), '[ [ [Array] ] ]');

    t.equal(inspect([[[{ a: 1 }]]], { depth: 3 }), '[ [ [ [Object] ] ] ]');
});


================================================
File: server/node_modules/object-inspect/test/fakes.js
================================================
'use strict';

var inspect = require('../');
var test = require('tape');
var hasToStringTag = require('has-tostringtag/shams')();
var forEach = require('for-each');

test('fakes', { skip: !hasToStringTag }, function (t) {
    forEach([
        'Array',
        'Boolean',
        'Date',
        'Error',
        'Number',
        'RegExp',
        'String'
    ], function (expected) {
        var faker = {};
        faker[Symbol.toStringTag] = expected;

        t.equal(
            inspect(faker),
            '{ [Symbol(Symbol.toStringTag)]: \'' + expected + '\' }',
            'faker masquerading as ' + expected + ' is not shown as one'
        );
    });

    t.end();
});


================================================
File: server/node_modules/object-inspect/test/global.js
================================================
'use strict';

var inspect = require('../');

var test = require('tape');
var globalThis = require('globalthis')();

test('global object', function (t) {
    /* eslint-env browser */
    var expected = typeof window === 'undefined' ? 'globalThis' : 'Window';
    t.equal(
        inspect([globalThis]),
        '[ { [object ' + expected + '] } ]'
    );

    t.end();
});


================================================
File: server/node_modules/object-inspect/test/has.js
================================================
'use strict';

var inspect = require('../');
var test = require('tape');
var mockProperty = require('mock-property');

test('when Object#hasOwnProperty is deleted', function (t) {
    t.plan(1);
    var arr = [1, , 3]; // eslint-disable-line no-sparse-arrays

    t.teardown(mockProperty(Array.prototype, 1, { value: 2 })); // this is needed to account for "in" vs "hasOwnProperty"
    t.teardown(mockProperty(Object.prototype, 'hasOwnProperty', { 'delete': true }));

    t.equal(inspect(arr), '[ 1, , 3 ]');
});


================================================
File: server/node_modules/object-inspect/test/holes.js
================================================
var test = require('tape');
var inspect = require('../');

var xs = ['a', 'b'];
xs[5] = 'f';
xs[7] = 'j';
xs[8] = 'k';

test('holes', function (t) {
    t.plan(1);
    t.equal(
        inspect(xs),
        "[ 'a', 'b', , , , 'f', , 'j', 'k' ]"
    );
});


================================================
File: server/node_modules/object-inspect/test/lowbyte.js
================================================
var test = require('tape');
var inspect = require('../');

var obj = { x: 'a\r\nb', y: '\x05! \x1f \x12' };

test('interpolate low bytes', function (t) {
    t.plan(1);
    t.equal(
        inspect(obj),
        "{ x: 'a\\r\\nb', y: '\\x05! \\x1F \\x12' }"
    );
});


================================================
File: server/node_modules/object-inspect/test/undef.js
================================================
var test = require('tape');
var inspect = require('../');

var obj = { a: 1, b: [3, 4, undefined, null], c: undefined, d: null };

test('undef and null', function (t) {
    t.plan(1);
    t.equal(
        inspect(obj),
        '{ a: 1, b: [ 3, 4, undefined, null ], c: undefined, d: null }'
    );
});


================================================
File: server/node_modules/object-inspect/test/browser/dom.js
================================================
var inspect = require('../../');
var test = require('tape');

test('dom element', function (t) {
    t.plan(1);

    var d = document.createElement('div');
    d.setAttribute('id', 'beep');
    d.innerHTML = '<b>wooo</b><i>iiiii</i>';

    t.equal(
        inspect([d, { a: 3, b: 4, c: [5, 6, [7, [8, [9]]]] }]),
        '[ <div id="beep">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [Object] ] ] ] } ]'
    );
});


================================================
File: server/node_modules/object-inspect/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/object-inspect
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/path-to-regexp/package.json
================================================
{
  "name": "path-to-regexp",
  "description": "Express style path to RegExp utility",
  "version": "0.1.12",
  "files": [
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "test": "istanbul cover _mocha -- -R spec"
  },
  "keywords": [
    "express",
    "regexp"
  ],
  "component": {
    "scripts": {
      "path-to-regexp": "index.js"
    }
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/pillarjs/path-to-regexp.git"
  },
  "devDependencies": {
    "mocha": "^1.17.1",
    "istanbul": "^0.2.6"
  }
}


================================================
File: server/node_modules/proxy-from-env/package.json
================================================
{
  "name": "proxy-from-env",
  "version": "1.1.0",
  "description": "Offers getProxyForUrl to get the proxy URL for a URL, respecting the *_PROXY (e.g. HTTP_PROXY) and NO_PROXY environment variables.",
  "main": "index.js",
  "scripts": {
    "lint": "eslint *.js",
    "test": "mocha ./test.js --reporter spec",
    "test-coverage": "istanbul cover ./node_modules/.bin/_mocha -- --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Rob--W/proxy-from-env.git"
  },
  "keywords": [
    "proxy",
    "http_proxy",
    "https_proxy",
    "no_proxy",
    "environment"
  ],
  "author": "Rob Wu <rob@robwu.nl> (https://robwu.nl/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Rob--W/proxy-from-env/issues"
  },
  "homepage": "https://github.com/Rob--W/proxy-from-env#readme",
  "devDependencies": {
    "coveralls": "^3.0.9",
    "eslint": "^6.8.0",
    "istanbul": "^0.4.5",
    "mocha": "^7.1.0"
  }
}


================================================
File: server/node_modules/proxy-from-env/.eslintrc
================================================
{
  "env": {
    "node": true
  },
  "rules": {
    "array-bracket-spacing": [2, "never"],
    "block-scoped-var": 2,
    "brace-style": [2, "1tbs"],
    "camelcase": 1,
    "computed-property-spacing": [2, "never"],
    "curly": 2,
    "eol-last": 2,
    "eqeqeq": [2, "smart"],
    "max-depth": [1, 3],
    "max-len": [1, 80],
    "max-statements": [1, 15],
    "new-cap": 1,
    "no-extend-native": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-trailing-spaces": 2,
    "no-unused-vars": 1,
    "no-use-before-define": [2, "nofunc"],
    "object-curly-spacing": [2, "never"],
    "quotes": [2, "single", "avoid-escape"],
    "semi": [2, "always"],
    "keyword-spacing": [2, {"before": true, "after": true}],
    "space-unary-ops": 2
  }
}


================================================
File: server/node_modules/proxy-from-env/.travis.yml
================================================
language: node_js
node_js:
  - node
  - lts/*
script:
  - npm run lint
  # test-coverage will also run the tests, but does not print helpful output upon test failure.
  # So we also run the tests separately.
  - npm run test
  - npm run test-coverage && cat coverage/lcov.info | ./node_modules/.bin/coveralls && rm -rf coverage


================================================
File: server/node_modules/qs/.editorconfig
================================================
root = true

[*]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
max_line_length = 160
quote_type = single

[test/*]
max_line_length = off

[LICENSE.md]
indent_size = off

[*.md]
max_line_length = off

[*.json]
max_line_length = off

[Makefile]
max_line_length = off

[CHANGELOG.md]
indent_style = space
indent_size = 2

[LICENSE]
indent_size = 2
max_line_length = off

[coverage/**/*]
indent_size = off
indent_style = off
indent = off
max_line_length = off

[.nycrc]
indent_style = tab

[tea.yaml]
indent_size = 2


================================================
File: server/node_modules/qs/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"dist"
	]
}


================================================
File: server/node_modules/qs/lib/formats.js
================================================
'use strict';

var replace = String.prototype.replace;
var percentTwenties = /%20/g;

var Format = {
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};

module.exports = {
    'default': Format.RFC3986,
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return String(value);
        }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
};


================================================
File: server/node_modules/qs/lib/index.js
================================================
'use strict';

var stringify = require('./stringify');
var parse = require('./parse');
var formats = require('./formats');

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


================================================
File: server/node_modules/qs/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/qs
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with a single custom sponsorship URL


================================================
File: server/node_modules/range-parser/HISTORY.md
================================================
1.2.1 / 2019-05-10
==================

  * Improve error when `str` is not a string

1.2.0 / 2016-06-01
==================

  * Add `combine` option to combine overlapping ranges

1.1.0 / 2016-05-13
==================

  * Fix incorrectly returning -1 when there is at least one valid range
  * perf: remove internal function

1.0.3 / 2015-10-29
==================

  * perf: enable strict mode

1.0.2 / 2014-09-08
==================

  * Support Node.js 0.6

1.0.1 / 2014-09-07
==================

  * Move repository to jshttp

1.0.0 / 2013-12-11
==================

  * Add repository to package.json
  * Add MIT license

0.0.4 / 2012-06-17
==================

  * Change ret -1 for unsatisfiable and -2 when invalid

0.0.3 / 2012-06-17
==================

  * Fix last-byte-pos default to len - 1

0.0.2 / 2012-06-14
==================

  * Add `.type`

0.0.1 / 2012-06-11
==================

  * Initial release


================================================
File: server/node_modules/safer-buffer/package.json
================================================
{
  "name": "safer-buffer",
  "version": "2.1.2",
  "description": "Modern Buffer API polyfill without footguns",
  "main": "safer.js",
  "scripts": {
    "browserify-test": "browserify --external tape tests.js > browserify-tests.js && tape browserify-tests.js",
    "test": "standard && tape tests.js"
  },
  "author": {
    "name": "Nikita Skovoroda",
    "email": "chalkerx@gmail.com",
    "url": "https://github.com/ChALkeR"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ChALkeR/safer-buffer.git"
  },
  "bugs": {
    "url": "https://github.com/ChALkeR/safer-buffer/issues"
  },
  "devDependencies": {
    "standard": "^11.0.1",
    "tape": "^4.9.0"
  },
  "files": [
    "Porting-Buffer.md",
    "Readme.md",
    "tests.js",
    "dangerous.js",
    "safer.js"
  ]
}


================================================
File: server/node_modules/scmp/README.md
================================================
# scmp
[![travis][travis-image]][travis-url]
[![npm][npm-image]][npm-url]
[![downloads][downloads-image]][downloads-url]

[travis-image]: https://travis-ci.org/freewil/scmp.svg?branch=master
[travis-url]: https://travis-ci.org/freewil/scmp

[npm-image]: https://img.shields.io/npm/v/scmp.svg?style=flat
[npm-url]: https://npmjs.org/package/scmp

[downloads-image]: https://img.shields.io/npm/dm/scmp.svg?style=flat
[downloads-url]: https://npmjs.org/package/scmp

Safe, constant-time comparison of Buffers.

## Install

```
npm install scmp
```

## Why?

To minimize vulnerability against [timing attacks](http://codahale.com/a-lesson-in-timing-attacks/).

## Example

```js
const scmp = require('scmp');
const Buffer = require('safe-buffer').Buffer;

const hash      = Buffer.from('e727d1464ae12436e899a726da5b2f11d8381b26', 'hex');
const givenHash = Buffer.from('e727e1b80e448a213b392049888111e1779a52db', 'hex');

if (scmp(hash, givenHash)) {
  console.log('good hash');
} else {
  console.log('bad hash');
}

```


================================================
File: server/node_modules/scmp/HISTORY.md
================================================
# History

## v2.1.0 (2019/12/26)
* code now uses `standard` as linter
* `var` has been replaced with `const` and `let`
* code now executed in strict mode

## v2.0.0 (2016/11/05)
* Buffers are now required to be passed as arguments. In 1.x,
  the arguments were assumed to be strings, and were always run through
  `String()`.
* Starting with Node.js v6.6.0, use `crypto.timingSafeEqual()` (if available).


================================================
File: server/node_modules/scmp/index.js
================================================
'use strict'

const crypto = require('crypto')
const scmpCompare = require('./lib/scmpCompare')

/**
 * Does a constant-time Buffer comparison by not short-circuiting
 * on first sign of non-equivalency.
 *
 * @param {Buffer} a The first Buffer to be compared against the second
 * @param {Buffer} b The second Buffer to be compared against the first
 * @return {Boolean}
 */
module.exports = function scmp (a, b) {
  // check that both inputs are buffers
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new Error('Both scmp args must be Buffers')
  }

  // return early here if buffer lengths are not equal since timingSafeEqual
  // will throw if buffer lengths are not equal
  if (a.length !== b.length) {
    return false
  }

  // use crypto.timingSafeEqual if available (since Node.js v6.6.0),
  // otherwise use our own scmp-internal function.
  if (crypto.timingSafeEqual) {
    return crypto.timingSafeEqual(a, b)
  }

  return scmpCompare(a, b)
}


================================================
File: server/node_modules/scmp/package.json
================================================
{
  "name": "scmp",
  "version": "2.1.0",
  "description": "safe, constant-time comparison of Buffers",
  "main": "index.js",
  "scripts": {
    "pretest": "standard --verbose",
    "test": "mocha",
    "posttest": "node benchmark/benchmark.js && node benchmark/crypto-check.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/freewil/scmp.git"
  },
  "keywords": [
    "safe-compare",
    "compare",
    "time-equivalent-comparison",
    "time equivalent",
    "constant-time",
    "constant time"
  ],
  "author": "Sean Lavine",
  "license": "BSD-3-Clause",
  "readmeFilename": "README.md",
  "devDependencies": {
    "benchmark": "^2.1.4",
    "mocha": "^6.2.0",
    "safe-buffer": "^5.1.2",
    "standard": "^14.3.1"
  },
  "dependencies": {}
}


================================================
File: server/node_modules/scmp/.travis.yml
================================================
language: node_js
node_js:
  - "6"
  - "8"
  - "10"


================================================
File: server/node_modules/scmp/benchmark/benchmark.js
================================================
'use strict'

const Benchmark = require('benchmark')
const scmp = require('../')

// `safe-buffer` in case `Buffer.from` in newer versions of node aren't available
const Buffer = require('safe-buffer').Buffer

const HASH1 = Buffer.from('e727d1464ae12436e899a726da5b2f11d8381b26', 'hex')
const HASH2 = Buffer.from('f727d1464ae12436e899a726da5b2f11d8381b26', 'hex')

const suite = new Benchmark.Suite()
suite.add('short-circuit compares', function () {
  // eslint-disable-next-line no-unused-expressions
  HASH1 === HASH2
})
  .add('scmp compares', function () {
    scmp(HASH1, HASH2)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .on('complete', function () {
    console.log('Fastest is ' + this.filter('fastest').map('name'))
  })
  .run()


================================================
File: server/node_modules/scmp/benchmark/crypto-check.js
================================================
'use strict'

const crypto = require('crypto')
const Benchmark = require('benchmark')

const scmpCompare = require('../lib/scmpCompare')
const compareFn = crypto.timingSafeEqual || scmpCompare

// `safe-buffer` in case `Buffer.from` in newer versions of node aren't available
const Buffer = require('safe-buffer').Buffer

const HASH1 = Buffer.from('e727d1464ae12436e899a726da5b2f11d8381b26', 'hex')
const HASH2 = Buffer.from('f727d1464ae12436e899a726da5b2f11d8381b26', 'hex')

const suite = new Benchmark.Suite()
suite.add('crypto check each fn call', function () {
  if (crypto.timingSafeEqual) {
    return crypto.timingSafeEqual(HASH1, HASH2)
  }
  return scmpCompare(HASH1, HASH2)
})
  .add('crypto check once', function () {
    return compareFn(HASH1, HASH2)
  })
  .on('cycle', function (event) {
    console.log(String(event.target))
  })
  .on('complete', function () {
    console.log('Fastest is ' + this.filter('fastest').map('name'))
  })
  .run()


================================================
File: server/node_modules/scmp/lib/scmpCompare.js
================================================
'use strict'

module.exports = function scmpCompare (a, b) {
  const len = a.length
  let result = 0
  for (let i = 0; i < len; ++i) {
    result |= a[i] ^ b[i]
  }
  return result === 0
}


================================================
File: server/node_modules/semver/LICENSE
================================================
The ISC License

Copyright (c) Isaac Z. Schlueter and Contributors

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


================================================
File: server/node_modules/semver/preload.js
================================================
// XXX remove in v8 or beyond
module.exports = require('./index.js')


================================================
File: server/node_modules/semver/range.bnf
================================================
range-set  ::= range ( logical-or range ) *
logical-or ::= ( ' ' ) * '||' ( ' ' ) *
range      ::= hyphen | simple ( ' ' simple ) * | ''
hyphen     ::= partial ' - ' partial
simple     ::= primitive | partial | tilde | caret
primitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial
partial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?
xr         ::= 'x' | 'X' | '*' | nr
nr         ::= '0' | [1-9] ( [0-9] ) *
tilde      ::= '~' partial
caret      ::= '^' partial
qualifier  ::= ( '-' pre )? ( '+' build )?
pre        ::= parts
build      ::= parts
parts      ::= part ( '.' part ) *
part       ::= nr | [-0-9A-Za-z]+


================================================
File: server/node_modules/semver/classes/index.js
================================================
module.exports = {
  SemVer: require('./semver.js'),
  Range: require('./range.js'),
  Comparator: require('./comparator.js'),
}


================================================
File: server/node_modules/semver/functions/clean.js
================================================
const parse = require('./parse')
const clean = (version, options) => {
  const s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}
module.exports = clean


================================================
File: server/node_modules/semver/functions/cmp.js
================================================
const eq = require('./eq')
const neq = require('./neq')
const gt = require('./gt')
const gte = require('./gte')
const lt = require('./lt')
const lte = require('./lte')

const cmp = (a, op, b, loose) => {
  switch (op) {
    case '===':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a === b

    case '!==':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError(`Invalid operator: ${op}`)
  }
}
module.exports = cmp


================================================
File: server/node_modules/semver/functions/compare-build.js
================================================
const SemVer = require('../classes/semver')
const compareBuild = (a, b, loose) => {
  const versionA = new SemVer(a, loose)
  const versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}
module.exports = compareBuild


================================================
File: server/node_modules/semver/functions/compare-loose.js
================================================
const compare = require('./compare')
const compareLoose = (a, b) => compare(a, b, true)
module.exports = compareLoose


================================================
File: server/node_modules/semver/functions/compare.js
================================================
const SemVer = require('../classes/semver')
const compare = (a, b, loose) =>
  new SemVer(a, loose).compare(new SemVer(b, loose))

module.exports = compare


================================================
File: server/node_modules/semver/functions/eq.js
================================================
const compare = require('./compare')
const eq = (a, b, loose) => compare(a, b, loose) === 0
module.exports = eq


================================================
File: server/node_modules/semver/functions/gt.js
================================================
const compare = require('./compare')
const gt = (a, b, loose) => compare(a, b, loose) > 0
module.exports = gt


================================================
File: server/node_modules/semver/functions/gte.js
================================================
const compare = require('./compare')
const gte = (a, b, loose) => compare(a, b, loose) >= 0
module.exports = gte


================================================
File: server/node_modules/semver/functions/inc.js
================================================
const SemVer = require('../classes/semver')

const inc = (version, release, options, identifier, identifierBase) => {
  if (typeof (options) === 'string') {
    identifierBase = identifier
    identifier = options
    options = undefined
  }

  try {
    return new SemVer(
      version instanceof SemVer ? version.version : version,
      options
    ).inc(release, identifier, identifierBase).version
  } catch (er) {
    return null
  }
}
module.exports = inc


================================================
File: server/node_modules/semver/functions/lt.js
================================================
const compare = require('./compare')
const lt = (a, b, loose) => compare(a, b, loose) < 0
module.exports = lt


================================================
File: server/node_modules/semver/functions/lte.js
================================================
const compare = require('./compare')
const lte = (a, b, loose) => compare(a, b, loose) <= 0
module.exports = lte


================================================
File: server/node_modules/semver/functions/major.js
================================================
const SemVer = require('../classes/semver')
const major = (a, loose) => new SemVer(a, loose).major
module.exports = major


================================================
File: server/node_modules/semver/functions/minor.js
================================================
const SemVer = require('../classes/semver')
const minor = (a, loose) => new SemVer(a, loose).minor
module.exports = minor


================================================
File: server/node_modules/semver/functions/neq.js
================================================
const compare = require('./compare')
const neq = (a, b, loose) => compare(a, b, loose) !== 0
module.exports = neq


================================================
File: server/node_modules/semver/functions/parse.js
================================================
const SemVer = require('../classes/semver')
const parse = (version, options, throwErrors = false) => {
  if (version instanceof SemVer) {
    return version
  }
  try {
    return new SemVer(version, options)
  } catch (er) {
    if (!throwErrors) {
      return null
    }
    throw er
  }
}

module.exports = parse


================================================
File: server/node_modules/semver/functions/patch.js
================================================
const SemVer = require('../classes/semver')
const patch = (a, loose) => new SemVer(a, loose).patch
module.exports = patch


================================================
File: server/node_modules/semver/functions/prerelease.js
================================================
const parse = require('./parse')
const prerelease = (version, options) => {
  const parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}
module.exports = prerelease


================================================
File: server/node_modules/semver/functions/rcompare.js
================================================
const compare = require('./compare')
const rcompare = (a, b, loose) => compare(b, a, loose)
module.exports = rcompare


================================================
File: server/node_modules/semver/functions/rsort.js
================================================
const compareBuild = require('./compare-build')
const rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))
module.exports = rsort


================================================
File: server/node_modules/semver/functions/satisfies.js
================================================
const Range = require('../classes/range')
const satisfies = (version, range, options) => {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}
module.exports = satisfies


================================================
File: server/node_modules/semver/functions/sort.js
================================================
const compareBuild = require('./compare-build')
const sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))
module.exports = sort


================================================
File: server/node_modules/semver/functions/valid.js
================================================
const parse = require('./parse')
const valid = (version, options) => {
  const v = parse(version, options)
  return v ? v.version : null
}
module.exports = valid


================================================
File: server/node_modules/semver/internal/constants.js
================================================
// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
const SEMVER_SPEC_VERSION = '2.0.0'

const MAX_LENGTH = 256
const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
/* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
const MAX_SAFE_COMPONENT_LENGTH = 16

// Max safe length for a build identifier. The max length minus 6 characters for
// the shortest version with a build 0.0.0+BUILD.
const MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6

const RELEASE_TYPES = [
  'major',
  'premajor',
  'minor',
  'preminor',
  'patch',
  'prepatch',
  'prerelease',
]

module.exports = {
  MAX_LENGTH,
  MAX_SAFE_COMPONENT_LENGTH,
  MAX_SAFE_BUILD_LENGTH,
  MAX_SAFE_INTEGER,
  RELEASE_TYPES,
  SEMVER_SPEC_VERSION,
  FLAG_INCLUDE_PRERELEASE: 0b001,
  FLAG_LOOSE: 0b010,
}


================================================
File: server/node_modules/semver/internal/debug.js
================================================
const debug = (
  typeof process === 'object' &&
  process.env &&
  process.env.NODE_DEBUG &&
  /\bsemver\b/i.test(process.env.NODE_DEBUG)
) ? (...args) => console.error('SEMVER', ...args)
  : () => {}

module.exports = debug


================================================
File: server/node_modules/semver/internal/identifiers.js
================================================
const numeric = /^[0-9]+$/
const compareIdentifiers = (a, b) => {
  const anum = numeric.test(a)
  const bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

const rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)

module.exports = {
  compareIdentifiers,
  rcompareIdentifiers,
}


================================================
File: server/node_modules/semver/internal/lrucache.js
================================================
class LRUCache {
  constructor () {
    this.max = 1000
    this.map = new Map()
  }

  get (key) {
    const value = this.map.get(key)
    if (value === undefined) {
      return undefined
    } else {
      // Remove the key from the map and add it to the end
      this.map.delete(key)
      this.map.set(key, value)
      return value
    }
  }

  delete (key) {
    return this.map.delete(key)
  }

  set (key, value) {
    const deleted = this.delete(key)

    if (!deleted && value !== undefined) {
      // If cache is full, delete the least recently used item
      if (this.map.size >= this.max) {
        const firstKey = this.map.keys().next().value
        this.delete(firstKey)
      }

      this.map.set(key, value)
    }

    return this
  }
}

module.exports = LRUCache


================================================
File: server/node_modules/semver/internal/parse-options.js
================================================
// parse out just the options we care about
const looseOption = Object.freeze({ loose: true })
const emptyOpts = Object.freeze({ })
const parseOptions = options => {
  if (!options) {
    return emptyOpts
  }

  if (typeof options !== 'object') {
    return looseOption
  }

  return options
}
module.exports = parseOptions


================================================
File: server/node_modules/semver/ranges/gtr.js
================================================
// Determine if version is greater than all the versions possible in the range.
const outside = require('./outside')
const gtr = (version, range, options) => outside(version, range, '>', options)
module.exports = gtr


================================================
File: server/node_modules/semver/ranges/intersects.js
================================================
const Range = require('../classes/range')
const intersects = (r1, r2, options) => {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2, options)
}
module.exports = intersects


================================================
File: server/node_modules/semver/ranges/ltr.js
================================================
const outside = require('./outside')
// Determine if version is less than all the versions possible in the range
const ltr = (version, range, options) => outside(version, range, '<', options)
module.exports = ltr


================================================
File: server/node_modules/semver/ranges/max-satisfying.js
================================================
const SemVer = require('../classes/semver')
const Range = require('../classes/range')

const maxSatisfying = (versions, range, options) => {
  let max = null
  let maxSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}
module.exports = maxSatisfying


================================================
File: server/node_modules/semver/ranges/min-satisfying.js
================================================
const SemVer = require('../classes/semver')
const Range = require('../classes/range')
const minSatisfying = (versions, range, options) => {
  let min = null
  let minSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}
module.exports = minSatisfying


================================================
File: server/node_modules/semver/ranges/to-comparators.js
================================================
const Range = require('../classes/range')

// Mostly just for testing and legacy API reasons
const toComparators = (range, options) =>
  new Range(range, options).set
    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))

module.exports = toComparators


================================================
File: server/node_modules/semver/ranges/valid.js
================================================
const Range = require('../classes/range')
const validRange = (range, options) => {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}
module.exports = validRange


================================================
File: server/node_modules/send/node_modules/encodeurl/HISTORY.md
================================================
1.0.2 / 2018-01-21
==================

  * Fix encoding `%` as last character

1.0.1 / 2016-06-09
==================

  * Fix encoding unpaired surrogates at start/end of string

1.0.0 / 2016-06-08
==================

  * Initial release


================================================
File: server/node_modules/send/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/setprototypeof/README.md
================================================
# Polyfill for `Object.setPrototypeOf`

[![NPM Version](https://img.shields.io/npm/v/setprototypeof.svg)](https://npmjs.org/package/setprototypeof)
[![NPM Downloads](https://img.shields.io/npm/dm/setprototypeof.svg)](https://npmjs.org/package/setprototypeof)
[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/standard/standard)

A simple cross platform implementation to set the prototype of an instianted object.  Supports all modern browsers and at least back to IE8.

## Usage:

```
$ npm install --save setprototypeof
```

```javascript
var setPrototypeOf = require('setprototypeof')

var obj = {}
setPrototypeOf(obj, {
  foo: function () {
    return 'bar'
  }
})
obj.foo() // bar
```

TypeScript is also supported:

```typescript
import setPrototypeOf from 'setprototypeof'
```


================================================
File: server/node_modules/setprototypeof/LICENSE
================================================
Copyright (c) 2015, Wes Todd

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


================================================
File: server/node_modules/setprototypeof/index.d.ts
================================================
declare function setPrototypeOf(o: any, proto: object | null): any;
export = setPrototypeOf;


================================================
File: server/node_modules/setprototypeof/index.js
================================================
'use strict'
/* eslint no-proto: 0 */
module.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)

function setProtoOf (obj, proto) {
  obj.__proto__ = proto
  return obj
}

function mixinProperties (obj, proto) {
  for (var prop in proto) {
    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {
      obj[prop] = proto[prop]
    }
  }
  return obj
}


================================================
File: server/node_modules/setprototypeof/test/index.js
================================================
'use strict'
/* eslint-env mocha */
/* eslint no-proto: 0 */
var assert = require('assert')
var setPrototypeOf = require('..')

describe('setProtoOf(obj, proto)', function () {
  it('should merge objects', function () {
    var obj = { a: 1, b: 2 }
    var proto = { b: 3, c: 4 }
    var mergeObj = setPrototypeOf(obj, proto)

    if (Object.getPrototypeOf) {
      assert.strictEqual(Object.getPrototypeOf(obj), proto)
    } else if ({ __proto__: [] } instanceof Array) {
      assert.strictEqual(obj.__proto__, proto)
    } else {
      assert.strictEqual(obj.a, 1)
      assert.strictEqual(obj.b, 2)
      assert.strictEqual(obj.c, 4)
    }
    assert.strictEqual(mergeObj, obj)
  })
})


================================================
File: server/node_modules/side-channel/index.d.ts
================================================
import getSideChannelList from 'side-channel-list';
import getSideChannelMap from 'side-channel-map';
import getSideChannelWeakMap from 'side-channel-weakmap';

declare namespace getSideChannel {
	type Channel<K, V> =
		| getSideChannelList.Channel<K, V>
		| ReturnType<Exclude<typeof getSideChannelMap<K, V>, false>>
		| ReturnType<Exclude<typeof getSideChannelWeakMap<K, V>, false>>;
}

declare function getSideChannel<K, V>(): getSideChannel.Channel<K, V>;

export = getSideChannel;


================================================
File: server/node_modules/side-channel/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/side-channel/.editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = tab
indent_size = 2
trim_trailing_whitespace = true


================================================
File: server/node_modules/side-channel/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"id-length": 0,
		"max-lines-per-function": 0,
		"multiline-comment-style": 1,
		"new-cap": [2, { "capIsNewExceptions": ["GetIntrinsic"] }],
	},
}


================================================
File: server/node_modules/side-channel/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/side-channel/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/side-channel
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/side-channel-list/CHANGELOG.md
================================================
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## v1.0.0 - 2024-12-10

### Commits

- Initial implementation, tests, readme, types [`5d6baee`](https://github.com/ljharb/side-channel-list/commit/5d6baee5c9054a1238007f5a1dfc109a7a816251)
- Initial commit [`3ae784c`](https://github.com/ljharb/side-channel-list/commit/3ae784c63a47895fbaeed2a91ab54a8029a7a100)
- npm init [`07055a4`](https://github.com/ljharb/side-channel-list/commit/07055a4d139895565b199dba5fe2479c1a1b9e28)
- Only apps should have lockfiles [`9573058`](https://github.com/ljharb/side-channel-list/commit/9573058a47494e2d68f8c6c77b5d7fbe441949c1)


================================================
File: server/node_modules/side-channel-list/index.d.ts
================================================
declare namespace getSideChannelList {
	type Channel<K, V> = {
		assert: (key: K) => void;
		has: (key: K) => boolean;
		get: (key: K) => V | undefined;
		set: (key: K, value: V) => void;
		delete: (key: K) => boolean;
	};
}

declare function getSideChannelList<V, K>(): getSideChannelList.Channel<K, V>;

export = getSideChannelList;


================================================
File: server/node_modules/side-channel-list/list.d.ts
================================================
type ListNode<T, K> = {
	key: K;
	next: undefined | ListNode<T, K>;
	value: T;
};
type RootNode<T, K> = {
	next: undefined | ListNode<T, K>;
};

export function listGetNode<T, K>(list: RootNode<T, K>, key: ListNode<T, K>['key'], isDelete?: boolean): ListNode<T, K> | undefined;
export function listGet<T, K>(objects: undefined | RootNode<T, K>, key: ListNode<T, K>['key']): T | undefined;
export function listSet<T, K>(objects: RootNode<T, K>, key: ListNode<T, K>['key'], value: T): void;
export function listHas<T, K>(objects: undefined | RootNode<T, K>, key: ListNode<T, K>['key']): boolean;
export function listDelete<T, K>(objects: undefined | RootNode<T, K>, key: ListNode<T, K>['key']): ListNode<T, K> | undefined;


================================================
File: server/node_modules/side-channel-list/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/side-channel-list/.editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = tab
indent_size = 2
trim_trailing_whitespace = true


================================================
File: server/node_modules/side-channel-list/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"max-lines-per-function": 0,
		"multiline-comment-style": 1,
		"new-cap": [2, { "capIsNewExceptions": ["GetIntrinsic"] }],
	},
}


================================================
File: server/node_modules/side-channel-list/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/side-channel-list/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/side-channel-list
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/side-channel-map/index.d.ts
================================================
declare namespace getSideChannelMap {
	type Channel<K, V> = {
		assert: (key: K) => void;
		has: (key: K) => boolean;
		get: (key: K) => V | undefined;
		set: (key: K, value: V) => void;
		delete: (key: K) => boolean;
	};
}

declare function getSideChannelMap<K, V>(): getSideChannelMap.Channel<K, V>;

declare const x: false | typeof getSideChannelMap;

export = x;


================================================
File: server/node_modules/side-channel-map/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/side-channel-map/.editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = tab
indent_size = 2
trim_trailing_whitespace = true


================================================
File: server/node_modules/side-channel-map/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"max-lines-per-function": 0,
		"multiline-comment-style": 1,
		"new-cap": [2, { "capIsNewExceptions": ["GetIntrinsic"] }],
	},
}


================================================
File: server/node_modules/side-channel-map/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/side-channel-map/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/side-channel-map
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/side-channel-weakmap/index.d.ts
================================================
declare namespace getSideChannelWeakMap {
	type Channel<K, V> = {
		assert: (key: K) => void;
		has: (key: K) => boolean;
		get: (key: K) => V | undefined;
		set: (key: K, value: V) => void;
		delete: (key: K) => boolean;
	}
}

declare function getSideChannelWeakMap<K, V>(): getSideChannelWeakMap.Channel<K, V>;

declare const x: false | typeof getSideChannelWeakMap;

export = x;


================================================
File: server/node_modules/side-channel-weakmap/tsconfig.json
================================================
{
	"extends": "@ljharb/tsconfig",
	"compilerOptions": {
		"target": "es2021",
	},
	"exclude": [
		"coverage",
	],
}


================================================
File: server/node_modules/side-channel-weakmap/.editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = tab
indent_size = 2
trim_trailing_whitespace = true


================================================
File: server/node_modules/side-channel-weakmap/.eslintrc
================================================
{
	"root": true,

	"extends": "@ljharb",

	"rules": {
		"id-length": 0,
		"max-lines-per-function": 0,
		"multiline-comment-style": 1,
		"new-cap": [2, { "capIsNewExceptions": ["GetIntrinsic"] }],
	},
}


================================================
File: server/node_modules/side-channel-weakmap/.nycrc
================================================
{
	"all": true,
	"check-coverage": false,
	"reporter": ["text-summary", "text", "html", "json"],
	"lines": 86,
	"statements": 85.93,
	"functions": 82.43,
	"branches": 76.06,
	"exclude": [
		"coverage",
		"test"
	]
}


================================================
File: server/node_modules/side-channel-weakmap/.github/FUNDING.yml
================================================
# These are supported funding model platforms

github: [ljharb]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: npm/side-channel-weakmap
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']


================================================
File: server/node_modules/socket.io/wrapper.mjs
================================================
import io from "./dist/index.js";

export const {Server, Namespace, Socket} = io;


================================================
File: server/node_modules/socket.io/dist/socket-types.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RESERVED_EVENTS = void 0;
exports.RESERVED_EVENTS = new Set([
    "connect",
    "connect_error",
    "disconnect",
    "disconnecting",
    "newListener",
    "removeListener",
]);


================================================
File: server/node_modules/socket.io/dist/uws.d.ts
================================================
export declare function patchAdapter(app: any): void;
export declare function restoreAdapter(): void;
export declare function serveFile(res: any, filepath: string): void;


================================================
File: server/node_modules/socket.io/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/socket.io/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/socket.io-adapter/Readme.md
================================================

# socket.io-adapter

Default socket.io in-memory adapter class.

Compatibility table:

| Adapter version | Socket.IO server version |
|-----------------| ------------------------ |
| 1.x.x           | 1.x.x / 2.x.x            |
| 2.x.x           | 3.x.x                    |

## How to use

This module is not intended for end-user usage, but can be used as an
interface to inherit from other adapters you might want to build.

As an example of an adapter that builds on top of this, please take a look
at [socket.io-redis](https://github.com/learnboost/socket.io-redis).

## License

MIT


================================================
File: server/node_modules/socket.io-adapter/dist/index.d.ts
================================================
export { SocketId, PrivateSessionId, Room, BroadcastFlags, BroadcastOptions, Session, Adapter, SessionAwareAdapter, } from "./in-memory-adapter";
export { ClusterAdapter, ClusterAdapterWithHeartbeat, ClusterAdapterOptions, ClusterMessage, ClusterResponse, MessageType, ServerId, Offset, } from "./cluster-adapter";


================================================
File: server/node_modules/socket.io-adapter/dist/contrib/yeast.d.ts
================================================
/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
export declare function encode(num: any): string;
/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
export declare function decode(str: any): number;
/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
export declare function yeast(): string;


================================================
File: server/node_modules/socket.io-adapter/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/socket.io-adapter/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/socket.io-parser/build/cjs/binary.d.ts
================================================
/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
export declare function deconstructPacket(packet: any): {
    packet: any;
    buffers: any[];
};
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
export declare function reconstructPacket(packet: any, buffers: any): any;


================================================
File: server/node_modules/socket.io-parser/build/cjs/is-binary.d.ts
================================================
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
export declare function isBinary(obj: any): boolean;
export declare function hasBinary(obj: any, toJSON?: boolean): any;


================================================
File: server/node_modules/socket.io-parser/build/cjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: server/node_modules/socket.io-parser/build/esm/binary.d.ts
================================================
/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
export declare function deconstructPacket(packet: any): {
    packet: any;
    buffers: any[];
};
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
export declare function reconstructPacket(packet: any, buffers: any): any;


================================================
File: server/node_modules/socket.io-parser/build/esm/is-binary.d.ts
================================================
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
export declare function isBinary(obj: any): boolean;
export declare function hasBinary(obj: any, toJSON?: boolean): any;


================================================
File: server/node_modules/socket.io-parser/build/esm/package.json
================================================
{
  "type": "module"
}


================================================
File: server/node_modules/socket.io-parser/build/esm-debug/binary.d.ts
================================================
/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
export declare function deconstructPacket(packet: any): {
    packet: any;
    buffers: any[];
};
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
export declare function reconstructPacket(packet: any, buffers: any): any;


================================================
File: server/node_modules/socket.io-parser/build/esm-debug/is-binary.d.ts
================================================
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
export declare function isBinary(obj: any): boolean;
export declare function hasBinary(obj: any, toJSON?: boolean): any;


================================================
File: server/node_modules/socket.io-parser/build/esm-debug/package.json
================================================
{
  "type": "module"
}


================================================
File: server/node_modules/socket.io-parser/node_modules/debug/src/index.js
================================================
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}


================================================
File: server/node_modules/socket.io-parser/node_modules/ms/package.json
================================================
{
  "name": "ms",
  "version": "2.1.3",
  "description": "Tiny millisecond conversion utility",
  "repository": "vercel/ms",
  "main": "./index",
  "files": [
    "index.js"
  ],
  "scripts": {
    "precommit": "lint-staged",
    "lint": "eslint lib/* bin/*",
    "test": "mocha tests.js"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "node": true,
      "es6": true
    }
  },
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "license": "MIT",
  "devDependencies": {
    "eslint": "4.18.2",
    "expect.js": "0.3.1",
    "husky": "0.14.3",
    "lint-staged": "5.0.0",
    "mocha": "4.0.1",
    "prettier": "2.0.5"
  }
}


================================================
File: server/node_modules/toidentifier/HISTORY.md
================================================
1.0.1 / 2021-11-14
==================

  * pref: enable strict mode

1.0.0 / 2018-07-09
==================

  * Initial release


================================================
File: server/node_modules/toidentifier/index.js
================================================
/*!
 * toidentifier
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = toIdentifier

/**
 * Trasform the given string into a JavaScript identifier
 *
 * @param {string} str
 * @returns {string}
 * @public
 */

function toIdentifier (str) {
  return str
    .split(' ')
    .map(function (token) {
      return token.slice(0, 1).toUpperCase() + token.slice(1)
    })
    .join('')
    .replace(/[^ _0-9a-z]/gi, '')
}


================================================
File: server/node_modules/twilio/index.d.ts
================================================
import lib from "./lib";
export = lib;


================================================
File: server/node_modules/twilio/index.js
================================================
"use strict";
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
const lib_1 = __importDefault(require("./lib"));
module.exports = lib_1.default;


================================================
File: server/node_modules/twilio/lib/interfaces.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


================================================
File: server/node_modules/twilio/lib/auth_strategy/AuthStrategy.d.ts
================================================
export default abstract class AuthStrategy {
    private authType;
    protected constructor(authType: string);
    getAuthType(): string;
    abstract getAuthString(): Promise<string>;
    abstract requiresAuthentication(): boolean;
}


================================================
File: server/node_modules/twilio/lib/auth_strategy/AuthStrategy.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class AuthStrategy {
    constructor(authType) {
        this.authType = authType;
    }
    getAuthType() {
        return this.authType;
    }
}
exports.default = AuthStrategy;


================================================
File: server/node_modules/twilio/lib/auth_strategy/BasicAuthStrategy.d.ts
================================================
import AuthStrategy from "./AuthStrategy";
export default class BasicAuthStrategy extends AuthStrategy {
    private username;
    private password;
    constructor(username: string, password: string);
    getAuthString(): Promise<string>;
    requiresAuthentication(): boolean;
}


================================================
File: server/node_modules/twilio/lib/auth_strategy/BasicAuthStrategy.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AuthStrategy_1 = __importDefault(require("./AuthStrategy"));
class BasicAuthStrategy extends AuthStrategy_1.default {
    constructor(username, password) {
        super("basic");
        this.username = username;
        this.password = password;
    }
    getAuthString() {
        const auth = Buffer.from(this.username + ":" + this.password).toString("base64");
        return Promise.resolve(`Basic ${auth}`);
    }
    requiresAuthentication() {
        return true;
    }
}
exports.default = BasicAuthStrategy;


================================================
File: server/node_modules/twilio/lib/auth_strategy/NoAuthStrategy.d.ts
================================================
import AuthStrategy from "./AuthStrategy";
export default class NoAuthStrategy extends AuthStrategy {
    constructor();
    getAuthString(): Promise<string>;
    requiresAuthentication(): boolean;
}


================================================
File: server/node_modules/twilio/lib/auth_strategy/NoAuthStrategy.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AuthStrategy_1 = __importDefault(require("./AuthStrategy"));
class NoAuthStrategy extends AuthStrategy_1.default {
    constructor() {
        super("noauth");
    }
    getAuthString() {
        return Promise.resolve("");
    }
    requiresAuthentication() {
        return false;
    }
}
exports.default = NoAuthStrategy;


================================================
File: server/node_modules/twilio/lib/auth_strategy/TokenAuthStrategy.d.ts
================================================
import AuthStrategy from "./AuthStrategy";
import TokenManager from "../http/bearer_token/TokenManager";
export default class TokenAuthStrategy extends AuthStrategy {
    private token;
    private tokenManager;
    constructor(tokenManager: TokenManager);
    getAuthString(): Promise<string>;
    requiresAuthentication(): boolean;
    fetchToken(): Promise<string>;
    /**
     * Function to check if the token is expired with a buffer of 30 seconds.
     * @param token - The JWT token as a string.
     * @returns Boolean indicating if the token is expired.
     */
    isTokenExpired(token: string): boolean;
}


================================================
File: server/node_modules/twilio/lib/base/Domain.d.ts
================================================
import { Client as BaseTwilio, RequestOpts } from "./BaseTwilio";
/**
 * Base domain object
 */
export default class Domain {
    twilio: BaseTwilio;
    baseUrl: string;
    /**
     * Creates a Domain instance
     *
     * @param twilio - A Twilio Client
     * @param baseUrl - Base url for this domain
     */
    constructor(twilio: BaseTwilio, baseUrl: string);
    /**
     * Turn a uri into an absolute url
     *
     * @param uri - uri to transform
     * @returns absolute url
     */
    absoluteUrl(uri?: string): string;
    /**
     * Make request to this domain
     *
     * @param opts - request options
     * @returns request promise
     */
    request(opts: RequestOpts): Promise<any>;
}


================================================
File: server/node_modules/twilio/lib/base/RestException.d.ts
================================================
interface RestExceptionError {
    status: number;
    message?: string;
    code?: number;
    moreInfo?: string;
    details?: object;
}
export default class RestException extends Error implements RestExceptionError {
    status: number;
    message: string;
    code?: number;
    moreInfo?: string;
    details?: object;
    constructor(response: any);
}
export {};


================================================
File: server/node_modules/twilio/lib/base/utility.d.ts
================================================
export declare const trim: (str: string, c?: string) => string;
export declare function isValidPathParam(param: any): boolean;


================================================
File: server/node_modules/twilio/lib/base/utility.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidPathParam = exports.trim = void 0;
const INVALID_PATH_PARAM_CHARS = ["/", "?"];
const trim = (str, c = "\\s") => str.replace(new RegExp(`^([${c}]*)(.*?)([${c}]*)$`), "$2");
exports.trim = trim;
function isValidPathParam(param) {
    if (param === null || param === undefined)
        return false;
    const paramString = param.toString();
    return INVALID_PATH_PARAM_CHARS.every((invalidChar) => !paramString.includes(invalidChar));
}
exports.isValidPathParam = isValidPathParam;


================================================
File: server/node_modules/twilio/lib/base/values.d.ts
================================================
/**
 * @namespace values
 */
/**
 * Removes all undefined values of an object
 *
 * @param obj - object to filter
 * @returns object with no undefined values
 */
export declare function of(obj: Object): Object;


================================================
File: server/node_modules/twilio/lib/base/values.js
================================================
"use strict";
/**
 * @namespace values
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.of = void 0;
/**
 * Removes all undefined values of an object
 *
 * @param obj - object to filter
 * @returns object with no undefined values
 */
function of(obj) {
    return Object.fromEntries(Object.entries(obj).filter((entry) => entry[1] !== undefined));
}
exports.of = of;


================================================
File: server/node_modules/twilio/lib/credential_provider/ClientCredentialProvider.d.ts
================================================
import CredentialProvider from "./CredentialProvider";
import TokenManager from "../http/bearer_token/TokenManager";
import AuthStrategy from "../auth_strategy/AuthStrategy";
declare class ClientCredentialProvider extends CredentialProvider {
    grantType: string;
    clientId: string;
    clientSecret: string;
    tokenManager: TokenManager | null;
    constructor();
    toAuthStrategy(): AuthStrategy;
}
declare namespace ClientCredentialProvider {
    class ClientCredentialProviderBuilder {
        private readonly instance;
        constructor();
        setClientId(clientId: string): ClientCredentialProviderBuilder;
        setClientSecret(clientSecret: string): ClientCredentialProviderBuilder;
        setTokenManager(tokenManager: TokenManager): ClientCredentialProviderBuilder;
        build(): ClientCredentialProvider;
    }
}
export = ClientCredentialProvider;


================================================
File: server/node_modules/twilio/lib/credential_provider/CredentialProvider.d.ts
================================================
import AuthStrategy from "../auth_strategy/AuthStrategy";
export default abstract class CredentialProvider {
    private authType;
    protected constructor(authType: string);
    getAuthType(): string;
    abstract toAuthStrategy(): AuthStrategy;
}


================================================
File: server/node_modules/twilio/lib/credential_provider/CredentialProvider.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class CredentialProvider {
    constructor(authType) {
        this.authType = authType;
    }
    getAuthType() {
        return this.authType;
    }
}
exports.default = CredentialProvider;


================================================
File: server/node_modules/twilio/lib/credential_provider/NoAuthCredentialProvider.d.ts
================================================
import CredentialProvider from "./CredentialProvider";
import AuthStrategy from "../auth_strategy/AuthStrategy";
declare namespace NoAuthCredentialProvider {
    class NoAuthCredentialProvider extends CredentialProvider {
        constructor();
        toAuthStrategy(): AuthStrategy;
    }
}
export = NoAuthCredentialProvider;


================================================
File: server/node_modules/twilio/lib/credential_provider/NoAuthCredentialProvider.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const CredentialProvider_1 = __importDefault(require("./CredentialProvider"));
const NoAuthStrategy_1 = __importDefault(require("../auth_strategy/NoAuthStrategy"));
var NoAuthCredentialProvider;
(function (NoAuthCredentialProvider_1) {
    class NoAuthCredentialProvider extends CredentialProvider_1.default {
        constructor() {
            super("noauth");
        }
        toAuthStrategy() {
            return new NoAuthStrategy_1.default();
        }
    }
    NoAuthCredentialProvider_1.NoAuthCredentialProvider = NoAuthCredentialProvider;
})(NoAuthCredentialProvider || (NoAuthCredentialProvider = {}));
module.exports = NoAuthCredentialProvider;


================================================
File: server/node_modules/twilio/lib/credential_provider/OrgsCredentialProvider.d.ts
================================================
import CredentialProvider from "./CredentialProvider";
import TokenManager from "../http/bearer_token/TokenManager";
import AuthStrategy from "../auth_strategy/AuthStrategy";
declare class OrgsCredentialProvider extends CredentialProvider {
    grantType: string;
    clientId: string;
    clientSecret: string;
    tokenManager: TokenManager | null;
    constructor();
    toAuthStrategy(): AuthStrategy;
}
declare namespace OrgsCredentialProvider {
    class OrgsCredentialProviderBuilder {
        private readonly instance;
        constructor();
        setClientId(clientId: string): OrgsCredentialProviderBuilder;
        setClientSecret(clientSecret: string): OrgsCredentialProviderBuilder;
        setTokenManager(tokenManager: TokenManager): OrgsCredentialProviderBuilder;
        build(): OrgsCredentialProvider;
    }
}
export = OrgsCredentialProvider;


================================================
File: server/node_modules/twilio/lib/http/request.d.ts
================================================
import { HttpMethod } from "../interfaces";
export interface RequestOptions<TData> {
    method?: HttpMethod | "*";
    url?: string;
    auth?: string;
    params?: object | "*";
    data?: TData | "*";
    headers?: Headers;
}
export interface Headers {
    [header: string]: string;
}
export default class Request<TData> {
    method: HttpMethod | "*";
    url: string;
    auth: string;
    params: object | "*";
    data: TData | "*";
    headers: Headers | "*";
    constructor(opts?: RequestOptions<TData>);
    get ANY(): "*";
    attributeEqual(lhs: any, rhs: any): boolean;
    isEqual(other: Request<any>): boolean;
    toString(): string;
}


================================================
File: server/node_modules/twilio/lib/http/response.d.ts
================================================
export default class Response<TPayload> {
    statusCode: number;
    body: TPayload;
    headers: any;
    constructor(statusCode: number, body: TPayload, headers: any);
    toString(): string;
}


================================================
File: server/node_modules/twilio/lib/http/response.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Response {
    constructor(statusCode, body, headers) {
        this.statusCode = statusCode;
        this.body = body;
        this.headers = headers;
    }
    toString() {
        return "HTTP " + this.statusCode + " " + this.body;
    }
}
exports.default = Response;


================================================
File: server/node_modules/twilio/lib/http/bearer_token/ApiTokenManager.d.ts
================================================
import TokenManager from "./TokenManager";
import { TokenListInstanceCreateOptions } from "../../rest/previewIam/v1/token";
export default class ApiTokenManager implements TokenManager {
    private params;
    constructor(params: TokenListInstanceCreateOptions);
    getParams(): TokenListInstanceCreateOptions;
    fetchToken(): Promise<string>;
}


================================================
File: server/node_modules/twilio/lib/http/bearer_token/OrgsTokenManager.d.ts
================================================
import TokenManager from "./TokenManager";
import { TokenListInstanceCreateOptions } from "../../rest/previewIam/v1/token";
export default class OrgsTokenManager implements TokenManager {
    private readonly params;
    constructor(params: TokenListInstanceCreateOptions);
    getParams(): TokenListInstanceCreateOptions;
    fetchToken(): Promise<string>;
}


================================================
File: server/node_modules/twilio/lib/http/bearer_token/TokenManager.d.ts
================================================
export default abstract class TokenManager {
    abstract fetchToken(): Promise<string>;
}


================================================
File: server/node_modules/twilio/lib/http/bearer_token/TokenManager.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TokenManager {
}
exports.default = TokenManager;


================================================
File: server/node_modules/twilio/lib/rest/Accounts.d.ts
================================================
import { AuthTokenPromotionListInstance } from "./accounts/v1/authTokenPromotion";
import { CredentialListInstance } from "./accounts/v1/credential";
import { SecondaryAuthTokenListInstance } from "./accounts/v1/secondaryAuthToken";
import AccountsBase from "./AccountsBase";
declare class Accounts extends AccountsBase {
    /**
     * @deprecated - Use v1.authTokenPromotion; instead
     */
    get authTokenPromotion(): AuthTokenPromotionListInstance;
    /**
     * @deprecated - Use v1.credentials; instead
     */
    get credentials(): CredentialListInstance;
    /**
     * @deprecated - Use v1.secondaryAuthToken; instead
     */
    get secondaryAuthToken(): SecondaryAuthTokenListInstance;
}
export = Accounts;


================================================
File: server/node_modules/twilio/lib/rest/Accounts.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const AccountsBase_1 = __importDefault(require("./AccountsBase"));
class Accounts extends AccountsBase_1.default {
    /**
     * @deprecated - Use v1.authTokenPromotion; instead
     */
    get authTokenPromotion() {
        console.warn("authTokenPromotion is deprecated. Use v1.authTokenPromotion; instead.");
        return this.v1.authTokenPromotion;
    }
    /**
     * @deprecated - Use v1.credentials; instead
     */
    get credentials() {
        console.warn("credentials is deprecated. Use v1.credentials; instead.");
        return this.v1.credentials;
    }
    /**
     * @deprecated - Use v1.secondaryAuthToken; instead
     */
    get secondaryAuthToken() {
        console.warn("secondaryAuthToken is deprecated. Use v1.secondaryAuthToken; instead.");
        return this.v1.secondaryAuthToken;
    }
}
module.exports = Accounts;


================================================
File: server/node_modules/twilio/lib/rest/AccountsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./accounts/V1";
declare class AccountsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize accounts domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = AccountsBase;


================================================
File: server/node_modules/twilio/lib/rest/ApiBase.d.ts
================================================
import Domain from "../base/Domain";
import V2010 from "./api/V2010";
declare class ApiBase extends Domain {
    _v2010?: V2010;
    /**
     * Initialize api domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v2010(): V2010;
}
export = ApiBase;


================================================
File: server/node_modules/twilio/lib/rest/Assistants.d.ts
================================================
import AssistantsBase from "./AssistantsBase";
declare class Assistants extends AssistantsBase {
}
export = Assistants;


================================================
File: server/node_modules/twilio/lib/rest/Assistants.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const AssistantsBase_1 = __importDefault(require("./AssistantsBase"));
class Assistants extends AssistantsBase_1.default {
}
module.exports = Assistants;


================================================
File: server/node_modules/twilio/lib/rest/AssistantsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./assistants/V1";
declare class AssistantsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize assistants domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = AssistantsBase;


================================================
File: server/node_modules/twilio/lib/rest/Bulkexports.d.ts
================================================
import { ExportListInstance } from "./bulkexports/v1/export";
import { ExportConfigurationListInstance } from "./bulkexports/v1/exportConfiguration";
import BulkexportsBase from "./BulkexportsBase";
declare class Bulkexports extends BulkexportsBase {
    /**
     * @deprecated - Use v1.exports instead
     */
    get exports(): ExportListInstance;
    /**
     * @deprecated - Use v1.exportConfiguration instead
     */
    get exportConfiguration(): ExportConfigurationListInstance;
}
export = Bulkexports;


================================================
File: server/node_modules/twilio/lib/rest/Bulkexports.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const BulkexportsBase_1 = __importDefault(require("./BulkexportsBase"));
class Bulkexports extends BulkexportsBase_1.default {
    /**
     * @deprecated - Use v1.exports instead
     */
    get exports() {
        console.warn("exports is deprecated. Use v1.exports instead.");
        return this.v1.exports;
    }
    /**
     * @deprecated - Use v1.exportConfiguration instead
     */
    get exportConfiguration() {
        console.warn("exportConfiguration is deprecated. Use v1.exportConfiguration instead.");
        return this.v1.exportConfiguration;
    }
}
module.exports = Bulkexports;


================================================
File: server/node_modules/twilio/lib/rest/BulkexportsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./bulkexports/V1";
declare class BulkexportsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize bulkexports domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = BulkexportsBase;


================================================
File: server/node_modules/twilio/lib/rest/Chat.d.ts
================================================
import { CredentialListInstance } from "./chat/v2/credential";
import { ServiceListInstance } from "./chat/v2/service";
import { ChannelListInstance } from "./chat/v3/channel";
import ChatBase from "./ChatBase";
declare class Chat extends ChatBase {
    /**
     * @deprecated - Use v2.credentials instead
     */
    get credentials(): CredentialListInstance;
    /**
     * @deprecated - Use v2.services instead
     */
    get services(): ServiceListInstance;
    /**
     * @deprecated - Use v3.channels instead
     */
    get channels(): ChannelListInstance;
}
export = Chat;


================================================
File: server/node_modules/twilio/lib/rest/Chat.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const ChatBase_1 = __importDefault(require("./ChatBase"));
class Chat extends ChatBase_1.default {
    /**
     * @deprecated - Use v2.credentials instead
     */
    get credentials() {
        console.warn("credentials is deprecated. Use v2.credentials instead.");
        return this.v2.credentials;
    }
    /**
     * @deprecated - Use v2.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v2.services instead.");
        return this.v2.services;
    }
    /**
     * @deprecated - Use v3.channels instead
     */
    get channels() {
        console.warn("channels is deprecated. Use v3.channels instead.");
        return this.v3.channels;
    }
}
module.exports = Chat;


================================================
File: server/node_modules/twilio/lib/rest/ChatBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./chat/V1";
import V2 from "./chat/V2";
import V3 from "./chat/V3";
declare class ChatBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    _v3?: V3;
    /**
     * Initialize chat domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
    get v3(): V3;
}
export = ChatBase;


================================================
File: server/node_modules/twilio/lib/rest/Content.d.ts
================================================
import ContentBase from "./ContentBase";
import { ContentListInstance } from "./content/v1/content";
declare class Content extends ContentBase {
    /**
     * @deprecated - Use v1.contents instead
     */
    get contents(): ContentListInstance;
}
export = Content;


================================================
File: server/node_modules/twilio/lib/rest/Content.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const ContentBase_1 = __importDefault(require("./ContentBase"));
class Content extends ContentBase_1.default {
    /**
     * @deprecated - Use v1.contents instead
     */
    get contents() {
        console.warn("contents is deprecated. Use v1.contents instead.");
        return this.v1.contents;
    }
}
module.exports = Content;


================================================
File: server/node_modules/twilio/lib/rest/ContentBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./content/V1";
import V2 from "./content/V2";
declare class ContentBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize content domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = ContentBase;


================================================
File: server/node_modules/twilio/lib/rest/ConversationsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./conversations/V1";
declare class ConversationsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize conversations domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = ConversationsBase;


================================================
File: server/node_modules/twilio/lib/rest/Events.d.ts
================================================
import { EventTypeListInstance } from "./events/v1/eventType";
import { SchemaListInstance } from "./events/v1/schema";
import { SinkListInstance } from "./events/v1/sink";
import { SubscriptionListInstance } from "./events/v1/subscription";
import EventsBase from "./EventsBase";
declare class Events extends EventsBase {
    /**
     * @deprecated - Use v1.eventTypes instead
     */
    get eventTypes(): EventTypeListInstance;
    /**
     * @deprecated - Use v1.schemas instead
     */
    get schemas(): SchemaListInstance;
    /**
     * @deprecated - Use v1.sinks instead
     */
    get sinks(): SinkListInstance;
    /**
     * @deprecated - Use v1.subscriptions instead
     */
    get subscriptions(): SubscriptionListInstance;
}
export = Events;


================================================
File: server/node_modules/twilio/lib/rest/EventsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./events/V1";
declare class EventsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize events domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = EventsBase;


================================================
File: server/node_modules/twilio/lib/rest/FlexApiBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./flexApi/V1";
import V2 from "./flexApi/V2";
declare class FlexApiBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize flexApi domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = FlexApiBase;


================================================
File: server/node_modules/twilio/lib/rest/FrontlineApi.d.ts
================================================
import { UserListInstance } from "./frontlineApi/v1/user";
import FrontlineApiBase from "./FrontlineApiBase";
declare class FrontlineApi extends FrontlineApiBase {
    /**
     * @deprecated - Use v1.users instead
     */
    get users(): UserListInstance;
}
export = FrontlineApi;


================================================
File: server/node_modules/twilio/lib/rest/FrontlineApi.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const FrontlineApiBase_1 = __importDefault(require("./FrontlineApiBase"));
class FrontlineApi extends FrontlineApiBase_1.default {
    /**
     * @deprecated - Use v1.users instead
     */
    get users() {
        console.warn("users is deprecated. Use v1.users instead.");
        return this.v1.users;
    }
}
module.exports = FrontlineApi;


================================================
File: server/node_modules/twilio/lib/rest/FrontlineApiBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./frontlineApi/V1";
declare class FrontlineApiBase extends Domain {
    _v1?: V1;
    /**
     * Initialize frontlineApi domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = FrontlineApiBase;


================================================
File: server/node_modules/twilio/lib/rest/Iam.d.ts
================================================
import IamBase from "./IamBase";
declare class Iam extends IamBase {
}
export = Iam;


================================================
File: server/node_modules/twilio/lib/rest/Iam.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const IamBase_1 = __importDefault(require("./IamBase"));
class Iam extends IamBase_1.default {
}
module.exports = Iam;


================================================
File: server/node_modules/twilio/lib/rest/IamBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./iam/V1";
declare class IamBase extends Domain {
    _v1?: V1;
    /**
     * Initialize iam domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = IamBase;


================================================
File: server/node_modules/twilio/lib/rest/Insights.d.ts
================================================
import { CallListInstance } from "./insights/v1/call";
import { CallSummariesListInstance } from "./insights/v1/callSummaries";
import { ConferenceListInstance } from "./insights/v1/conference";
import { RoomListInstance } from "./insights/v1/room";
import { SettingListInstance } from "./insights/v1/setting";
import InsightsBase from "./InsightsBase";
declare class Insights extends InsightsBase {
    /**
     * @deprecated - Use v1.settings instead
     */
    get settings(): SettingListInstance;
    /**
     * @deprecated - Use v1.calls instead
     */
    get calls(): CallListInstance;
    /**
     * @deprecated - Use v1.callSummaries instead
     */
    get callSummaries(): CallSummariesListInstance;
    /**
     * @deprecated - Use v1.conferences instead
     */
    get conferences(): ConferenceListInstance;
    /**
     * @deprecated - Use v1.rooms instead
     */
    get rooms(): RoomListInstance;
}
export = Insights;


================================================
File: server/node_modules/twilio/lib/rest/InsightsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./insights/V1";
declare class InsightsBase extends Domain {
    _v1?: V1;
    /**
     * Initialize insights domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = InsightsBase;


================================================
File: server/node_modules/twilio/lib/rest/Intelligence.d.ts
================================================
import IntelligenceBase from "./IntelligenceBase";
declare class Intelligence extends IntelligenceBase {
}
export = Intelligence;


================================================
File: server/node_modules/twilio/lib/rest/Intelligence.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const IntelligenceBase_1 = __importDefault(require("./IntelligenceBase"));
class Intelligence extends IntelligenceBase_1.default {
}
module.exports = Intelligence;


================================================
File: server/node_modules/twilio/lib/rest/IntelligenceBase.d.ts
================================================
import Domain from "../base/Domain";
import V2 from "./intelligence/V2";
declare class IntelligenceBase extends Domain {
    _v2?: V2;
    /**
     * Initialize intelligence domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v2(): V2;
}
export = IntelligenceBase;


================================================
File: server/node_modules/twilio/lib/rest/IpMessaging.d.ts
================================================
import { CredentialListInstance } from "./ipMessaging/v2/credential";
import { ServiceListInstance } from "./ipMessaging/v2/service";
import IpMessagingBase from "./IpMessagingBase";
declare class IpMessaging extends IpMessagingBase {
    /**
     * @deprecated - Use v2.credentials instead
     */
    get credentials(): CredentialListInstance;
    /**
     * @deprecated - Use v2.services instead
     */
    get services(): ServiceListInstance;
}
export = IpMessaging;


================================================
File: server/node_modules/twilio/lib/rest/IpMessaging.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const IpMessagingBase_1 = __importDefault(require("./IpMessagingBase"));
class IpMessaging extends IpMessagingBase_1.default {
    /**
     * @deprecated - Use v2.credentials instead
     */
    get credentials() {
        console.warn("credentials is deprecated. Use v2.credentials instead.");
        return this.v2.credentials;
    }
    /**
     * @deprecated - Use v2.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v2.services instead.");
        return this.v2.services;
    }
}
module.exports = IpMessaging;


================================================
File: server/node_modules/twilio/lib/rest/IpMessagingBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./ipMessaging/V1";
import V2 from "./ipMessaging/V2";
declare class IpMessagingBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize ipMessaging domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = IpMessagingBase;


================================================
File: server/node_modules/twilio/lib/rest/Lookups.d.ts
================================================
import { PhoneNumberListInstance } from "./lookups/v1/phoneNumber";
import LookupsBase from "./LookupsBase";
declare class Lookups extends LookupsBase {
    /**
     * @deprecated - Use v1.phoneNumbers instead
     */
    get phoneNumbers(): PhoneNumberListInstance;
}
export = Lookups;


================================================
File: server/node_modules/twilio/lib/rest/Lookups.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const LookupsBase_1 = __importDefault(require("./LookupsBase"));
class Lookups extends LookupsBase_1.default {
    /**
     * @deprecated - Use v1.phoneNumbers instead
     */
    get phoneNumbers() {
        console.warn("phoneNumbers is deprecated. Use v1.phoneNumbers instead.");
        return this.v1.phoneNumbers;
    }
}
module.exports = Lookups;


================================================
File: server/node_modules/twilio/lib/rest/LookupsBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./lookups/V1";
import V2 from "./lookups/V2";
declare class LookupsBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize lookups domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = LookupsBase;


================================================
File: server/node_modules/twilio/lib/rest/Marketplace.d.ts
================================================
import MarketplaceBase from "./MarketplaceBase";
declare class Marketplace extends MarketplaceBase {
}
export = Marketplace;


================================================
File: server/node_modules/twilio/lib/rest/Marketplace.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const MarketplaceBase_1 = __importDefault(require("./MarketplaceBase"));
class Marketplace extends MarketplaceBase_1.default {
}
module.exports = Marketplace;


================================================
File: server/node_modules/twilio/lib/rest/MarketplaceBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./marketplace/V1";
declare class MarketplaceBase extends Domain {
    _v1?: V1;
    /**
     * Initialize marketplace domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = MarketplaceBase;


================================================
File: server/node_modules/twilio/lib/rest/MessagingBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./messaging/V1";
declare class MessagingBase extends Domain {
    _v1?: V1;
    /**
     * Initialize messaging domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = MessagingBase;


================================================
File: server/node_modules/twilio/lib/rest/Microvisor.d.ts
================================================
import { AppListInstance } from "./microvisor/v1/app";
import { DeviceListInstance } from "./microvisor/v1/device";
import MicrovisorBase from "./MicrovisorBase";
declare class Microvisor extends MicrovisorBase {
    /**
     * @deprecated - Use v1.apps instead
     */
    get apps(): AppListInstance;
    /**
     * @deprecated - Use v1.devices instead
     */
    get devices(): DeviceListInstance;
}
export = Microvisor;


================================================
File: server/node_modules/twilio/lib/rest/Microvisor.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const MicrovisorBase_1 = __importDefault(require("./MicrovisorBase"));
class Microvisor extends MicrovisorBase_1.default {
    /**
     * @deprecated - Use v1.apps instead
     */
    get apps() {
        console.warn("apps is deprecated. Use v1.apps instead.");
        return this.v1.apps;
    }
    /**
     * @deprecated - Use v1.devices instead
     */
    get devices() {
        console.warn("devices is deprecated. Use v1.devices instead.");
        return this.v1.devices;
    }
}
module.exports = Microvisor;


================================================
File: server/node_modules/twilio/lib/rest/MicrovisorBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./microvisor/V1";
declare class MicrovisorBase extends Domain {
    _v1?: V1;
    /**
     * Initialize microvisor domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = MicrovisorBase;


================================================
File: server/node_modules/twilio/lib/rest/Monitor.d.ts
================================================
import { AlertListInstance } from "./monitor/v1/alert";
import { EventListInstance } from "./monitor/v1/event";
import MonitorBase from "./MonitorBase";
declare class Monitor extends MonitorBase {
    /**
     * @deprecated - Use v1.alerts instead
     */
    get alerts(): AlertListInstance;
    /**
     * @deprecated - Use v1.events instead
     */
    get events(): EventListInstance;
}
export = Monitor;


================================================
File: server/node_modules/twilio/lib/rest/Monitor.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const MonitorBase_1 = __importDefault(require("./MonitorBase"));
class Monitor extends MonitorBase_1.default {
    /**
     * @deprecated - Use v1.alerts instead
     */
    get alerts() {
        console.warn("alerts is deprecated. Use v1.alerts instead.");
        return this.v1.alerts;
    }
    /**
     * @deprecated - Use v1.events instead
     */
    get events() {
        console.warn("events is deprecated. Use v1.events instead.");
        return this.v1.events;
    }
}
module.exports = Monitor;


================================================
File: server/node_modules/twilio/lib/rest/MonitorBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./monitor/V1";
declare class MonitorBase extends Domain {
    _v1?: V1;
    /**
     * Initialize monitor domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = MonitorBase;


================================================
File: server/node_modules/twilio/lib/rest/Notify.d.ts
================================================
import { CredentialListInstance } from "./notify/v1/credential";
import { ServiceListInstance } from "./notify/v1/service";
import NotifyBase from "./NotifyBase";
declare class Notify extends NotifyBase {
    /**
     * @deprecated - Use v1.credentials instead
     */
    get credentials(): CredentialListInstance;
    /**
     * @deprecated - Use v1.services instead
     */
    get services(): ServiceListInstance;
}
export = Notify;


================================================
File: server/node_modules/twilio/lib/rest/Notify.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const NotifyBase_1 = __importDefault(require("./NotifyBase"));
class Notify extends NotifyBase_1.default {
    /**
     * @deprecated - Use v1.credentials instead
     */
    get credentials() {
        console.warn("credentials is deprecated. Use v1.credentials instead.");
        return this.v1.credentials;
    }
    /**
     * @deprecated - Use v1.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v1.services instead.");
        return this.v1.services;
    }
}
module.exports = Notify;


================================================
File: server/node_modules/twilio/lib/rest/NotifyBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./notify/V1";
declare class NotifyBase extends Domain {
    _v1?: V1;
    /**
     * Initialize notify domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = NotifyBase;


================================================
File: server/node_modules/twilio/lib/rest/Numbers.d.ts
================================================
import { RegulatoryComplianceListInstance } from "./numbers/v2/regulatoryCompliance";
import NumbersBase from "./NumbersBase";
declare class Numbers extends NumbersBase {
    /**
     * @deprecated - Use v2.regulatoryCompliance instead
     */
    get regulatoryCompliance(): RegulatoryComplianceListInstance;
}
export = Numbers;


================================================
File: server/node_modules/twilio/lib/rest/Numbers.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const NumbersBase_1 = __importDefault(require("./NumbersBase"));
class Numbers extends NumbersBase_1.default {
    /**
     * @deprecated - Use v2.regulatoryCompliance instead
     */
    get regulatoryCompliance() {
        console.warn("regulatoryCompliance is deprecated. Use v2.regulatoryCompliance instead.");
        return this.v2.regulatoryCompliance;
    }
}
module.exports = Numbers;


================================================
File: server/node_modules/twilio/lib/rest/NumbersBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./numbers/V1";
import V2 from "./numbers/V2";
declare class NumbersBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize numbers domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = NumbersBase;


================================================
File: server/node_modules/twilio/lib/rest/Oauth.d.ts
================================================
import OauthBase from "./OauthBase";
declare class Oauth extends OauthBase {
}
export = Oauth;


================================================
File: server/node_modules/twilio/lib/rest/Oauth.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const OauthBase_1 = __importDefault(require("./OauthBase"));
class Oauth extends OauthBase_1.default {
}
module.exports = Oauth;


================================================
File: server/node_modules/twilio/lib/rest/OauthBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./oauth/V1";
declare class OauthBase extends Domain {
    _v1?: V1;
    /**
     * Initialize oauth domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = OauthBase;


================================================
File: server/node_modules/twilio/lib/rest/PreviewBase.d.ts
================================================
import Domain from "../base/Domain";
import HostedNumbers from "./preview/HostedNumbers";
import Sync from "./preview/Sync";
import Marketplace from "./preview/Marketplace";
import Wireless from "./preview/Wireless";
declare class PreviewBase extends Domain {
    _hosted_numbers?: HostedNumbers;
    _sync?: Sync;
    _marketplace?: Marketplace;
    _wireless?: Wireless;
    /**
     * Initialize preview domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get hosted_numbers(): HostedNumbers;
    get sync(): Sync;
    get marketplace(): Marketplace;
    get wireless(): Wireless;
}
export = PreviewBase;


================================================
File: server/node_modules/twilio/lib/rest/PreviewIam.d.ts
================================================
import { TokenListInstance } from "./previewIam/v1/token";
import { AuthorizeListInstance } from "./previewIam/v1/authorize";
import PreviewIamBase from "./PreviewIamBase";
import { OrganizationListInstance } from "./previewIam/versionless/organization";
declare class PreviewIam extends PreviewIamBase {
    _organization?: OrganizationListInstance;
    /**
     * @deprecated - Use v1.tokens instead
     */
    get tokens(): TokenListInstance;
    /**
     * @deprecated - Use v1.authorize instead
     */
    get authorize(): AuthorizeListInstance;
    /** Getter for organization resource */
    get organization(): OrganizationListInstance;
}
export = PreviewIam;


================================================
File: server/node_modules/twilio/lib/rest/PreviewIam.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const PreviewIamBase_1 = __importDefault(require("./PreviewIamBase"));
const Versionless_1 = __importDefault(require("./previewIam/Versionless"));
class PreviewIam extends PreviewIamBase_1.default {
    /**
     * @deprecated - Use v1.tokens instead
     */
    get tokens() {
        console.warn("tokens is deprecated. Use v1.tokens instead.");
        return this.v1.token;
    }
    /**
     * @deprecated - Use v1.authorize instead
     */
    get authorize() {
        console.warn("authorize is deprecated. Use v1.authorize instead.");
        return this.v1.authorize;
    }
    /** Getter for organization resource */
    get organization() {
        this._organization =
            this._organization || new Versionless_1.default(this).organization;
        return this._organization;
    }
}
module.exports = PreviewIam;


================================================
File: server/node_modules/twilio/lib/rest/PreviewIamBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./previewIam/V1";
declare class PreviewIamBase extends Domain {
    _v1?: V1;
    /**
     * Initialize previewIam domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = PreviewIamBase;


================================================
File: server/node_modules/twilio/lib/rest/Pricing.d.ts
================================================
import { MessagingListInstance } from "./pricing/v1/messaging";
import { PhoneNumberListInstance } from "./pricing/v1/phoneNumber";
import { VoiceListInstance } from "./pricing/v2/voice";
import { CountryListInstance } from "./pricing/v2/country";
import { NumberListInstance } from "./pricing/v2/number";
import PricingBase from "./PricingBase";
declare class Pricing extends PricingBase {
    /**
     * @deprecated - Use v1.messaging instead
     */
    get messaging(): MessagingListInstance;
    /**
     * @deprecated - Use v1.phoneNumbers instead
     */
    get phoneNumbers(): PhoneNumberListInstance;
    /**
     * @deprecated - Use v2.voice instead
     */
    get voice(): VoiceListInstance;
    /**
     * @deprecated - Use v2.countries instead
     */
    get countries(): CountryListInstance;
    /**
     * @deprecated - Use v2.numbers instead
     */
    get numbers(): NumberListInstance;
}
export = Pricing;


================================================
File: server/node_modules/twilio/lib/rest/PricingBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./pricing/V1";
import V2 from "./pricing/V2";
declare class PricingBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize pricing domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = PricingBase;


================================================
File: server/node_modules/twilio/lib/rest/Proxy.d.ts
================================================
import { ServiceListInstance } from "./proxy/v1/service";
import ProxyBase from "./ProxyBase";
declare class Proxy extends ProxyBase {
    /**
     * @deprecated - Use v1.services instead
     */
    get services(): ServiceListInstance;
}
export = Proxy;


================================================
File: server/node_modules/twilio/lib/rest/Proxy.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const ProxyBase_1 = __importDefault(require("./ProxyBase"));
class Proxy extends ProxyBase_1.default {
    /**
     * @deprecated - Use v1.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v1.services instead.");
        return this.v1.services;
    }
}
module.exports = Proxy;


================================================
File: server/node_modules/twilio/lib/rest/ProxyBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./proxy/V1";
declare class ProxyBase extends Domain {
    _v1?: V1;
    /**
     * Initialize proxy domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = ProxyBase;


================================================
File: server/node_modules/twilio/lib/rest/Routes.d.ts
================================================
import { PhoneNumberListInstance } from "./routes/v2/phoneNumber";
import { SipDomainListInstance } from "./routes/v2/sipDomain";
import { TrunkListInstance } from "./routes/v2/trunk";
import RoutesBase from "./RoutesBase";
declare class Routes extends RoutesBase {
    /**
     * @deprecated - Use v1.phoneNumbers instead
     */
    get phoneNumbers(): PhoneNumberListInstance;
    /**
     * @deprecated - Use v1.sipDomains instead
     */
    get sipDomains(): SipDomainListInstance;
    /**
     * @deprecated - Use v1.trunks instead
     */
    get trunks(): TrunkListInstance;
}
export = Routes;


================================================
File: server/node_modules/twilio/lib/rest/Routes.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const RoutesBase_1 = __importDefault(require("./RoutesBase"));
class Routes extends RoutesBase_1.default {
    /**
     * @deprecated - Use v1.phoneNumbers instead
     */
    get phoneNumbers() {
        console.warn("phoneNumbers is deprecated. Use v1.phoneNumbers instead.");
        return this.v2.phoneNumbers;
    }
    /**
     * @deprecated - Use v1.sipDomains instead
     */
    get sipDomains() {
        console.warn("sipDomains is deprecated. Use v1.sipDomains instead.");
        return this.v2.sipDomains;
    }
    /**
     * @deprecated - Use v1.trunks instead
     */
    get trunks() {
        console.warn("trunks is deprecated. Use v1.trunks instead.");
        return this.v2.trunks;
    }
}
module.exports = Routes;


================================================
File: server/node_modules/twilio/lib/rest/RoutesBase.d.ts
================================================
import Domain from "../base/Domain";
import V2 from "./routes/V2";
declare class RoutesBase extends Domain {
    _v2?: V2;
    /**
     * Initialize routes domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v2(): V2;
}
export = RoutesBase;


================================================
File: server/node_modules/twilio/lib/rest/Serverless.d.ts
================================================
import { ServiceListInstance } from "./serverless/v1/service";
import ServerlessBase from "./ServerlessBase";
declare class Serverless extends ServerlessBase {
    /**
     * @deprecated - Use v1.services instead
     */
    get services(): ServiceListInstance;
}
export = Serverless;


================================================
File: server/node_modules/twilio/lib/rest/Serverless.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const ServerlessBase_1 = __importDefault(require("./ServerlessBase"));
class Serverless extends ServerlessBase_1.default {
    /**
     * @deprecated - Use v1.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v1.services instead.");
        return this.v1.services;
    }
}
module.exports = Serverless;


================================================
File: server/node_modules/twilio/lib/rest/ServerlessBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./serverless/V1";
declare class ServerlessBase extends Domain {
    _v1?: V1;
    /**
     * Initialize serverless domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = ServerlessBase;


================================================
File: server/node_modules/twilio/lib/rest/Studio.d.ts
================================================
import { FlowListInstance } from "./studio/v2/flow";
import { FlowValidateListInstance } from "./studio/v2/flowValidate";
import StudioBase from "./StudioBase";
declare class Studio extends StudioBase {
    /**
     * @deprecated - Use v2.flows instead
     */
    get flows(): FlowListInstance;
    /**
     * @deprecated - Use v2.flowValidate instead
     */
    get flowValidate(): FlowValidateListInstance;
}
export = Studio;


================================================
File: server/node_modules/twilio/lib/rest/Studio.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const StudioBase_1 = __importDefault(require("./StudioBase"));
class Studio extends StudioBase_1.default {
    /**
     * @deprecated - Use v2.flows instead
     */
    get flows() {
        console.warn("flows is deprecated. Use v2.flows instead.");
        return this.v2.flows;
    }
    /**
     * @deprecated - Use v2.flowValidate instead
     */
    get flowValidate() {
        console.warn("flowValidate is deprecated. Use v2.flowValidate instead.");
        return this.v2.flowValidate;
    }
}
module.exports = Studio;


================================================
File: server/node_modules/twilio/lib/rest/StudioBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./studio/V1";
import V2 from "./studio/V2";
declare class StudioBase extends Domain {
    _v1?: V1;
    _v2?: V2;
    /**
     * Initialize studio domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
    get v2(): V2;
}
export = StudioBase;


================================================
File: server/node_modules/twilio/lib/rest/SupersimBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./supersim/V1";
declare class SupersimBase extends Domain {
    _v1?: V1;
    /**
     * Initialize supersim domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = SupersimBase;


================================================
File: server/node_modules/twilio/lib/rest/Sync.d.ts
================================================
import { ServiceListInstance } from "./sync/v1/service";
import SyncBase from "./SyncBase";
declare class Sync extends SyncBase {
    /**
     * @deprecated - Use v1.services instead
     */
    get services(): ServiceListInstance;
}
export = Sync;


================================================
File: server/node_modules/twilio/lib/rest/Sync.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const SyncBase_1 = __importDefault(require("./SyncBase"));
class Sync extends SyncBase_1.default {
    /**
     * @deprecated - Use v1.services instead
     */
    get services() {
        console.warn("services is deprecated. Use v1.services instead.");
        return this.v1.services;
    }
}
module.exports = Sync;


================================================
File: server/node_modules/twilio/lib/rest/SyncBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./sync/V1";
declare class SyncBase extends Domain {
    _v1?: V1;
    /**
     * Initialize sync domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = SyncBase;


================================================
File: server/node_modules/twilio/lib/rest/Taskrouter.d.ts
================================================
import { WorkspaceListInstance } from "./taskrouter/v1/workspace";
import TaskrouterBase from "./TaskrouterBase";
declare class Taskrouter extends TaskrouterBase {
    /**
     * @deprecated - Use v1.workspaces instead
     */
    get workspaces(): WorkspaceListInstance;
}
export = Taskrouter;


================================================
File: server/node_modules/twilio/lib/rest/Taskrouter.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const TaskrouterBase_1 = __importDefault(require("./TaskrouterBase"));
class Taskrouter extends TaskrouterBase_1.default {
    /**
     * @deprecated - Use v1.workspaces instead
     */
    get workspaces() {
        console.warn("workspaces is deprecated. Use v1.workspaces instead.");
        return this.v1.workspaces;
    }
}
module.exports = Taskrouter;


================================================
File: server/node_modules/twilio/lib/rest/TaskrouterBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./taskrouter/V1";
declare class TaskrouterBase extends Domain {
    _v1?: V1;
    /**
     * Initialize taskrouter domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = TaskrouterBase;


================================================
File: server/node_modules/twilio/lib/rest/Trunking.d.ts
================================================
import { TrunkListInstance } from "./trunking/v1/trunk";
import TrunkingBase from "./TrunkingBase";
declare class Trunking extends TrunkingBase {
    /**
     * @deprecated - Use v1.trunks instead
     */
    get trunks(): TrunkListInstance;
}
export = Trunking;


================================================
File: server/node_modules/twilio/lib/rest/Trunking.js
================================================
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const TrunkingBase_1 = __importDefault(require("./TrunkingBase"));
class Trunking extends TrunkingBase_1.default {
    /**
     * @deprecated - Use v1.trunks instead
     */
    get trunks() {
        console.warn("trunks is deprecated. Use v1.trunks instead.");
        return this.v1.trunks;
    }
}
module.exports = Trunking;


================================================
File: server/node_modules/twilio/lib/rest/TrunkingBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./trunking/V1";
declare class TrunkingBase extends Domain {
    _v1?: V1;
    /**
     * Initialize trunking domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = TrunkingBase;


================================================
File: server/node_modules/twilio/lib/rest/TrusthubBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./trusthub/V1";
declare class TrusthubBase extends Domain {
    _v1?: V1;
    /**
     * Initialize trusthub domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = TrusthubBase;


================================================
File: server/node_modules/twilio/lib/rest/VerifyBase.d.ts
================================================
import Domain from "../base/Domain";
import V2 from "./verify/V2";
declare class VerifyBase extends Domain {
    _v2?: V2;
    /**
     * Initialize verify domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v2(): V2;
}
export = VerifyBase;


================================================
File: server/node_modules/twilio/lib/rest/VideoBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./video/V1";
declare class VideoBase extends Domain {
    _v1?: V1;
    /**
     * Initialize video domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = VideoBase;


================================================
File: server/node_modules/twilio/lib/rest/VoiceBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./voice/V1";
declare class VoiceBase extends Domain {
    _v1?: V1;
    /**
     * Initialize voice domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = VoiceBase;


================================================
File: server/node_modules/twilio/lib/rest/Wireless.d.ts
================================================
import { CommandListInstance } from "./wireless/v1/command";
import { RatePlanListInstance } from "./wireless/v1/ratePlan";
import { SimListInstance } from "./wireless/v1/sim";
import { UsageRecordListInstance } from "./wireless/v1/usageRecord";
import WirelessBase from "./WirelessBase";
declare class Wireless extends WirelessBase {
    /**
     * @deprecated - Use v1.usageRecords instead
     */
    get usageRecords(): UsageRecordListInstance;
    /**
     * @deprecated - Use v1.commands instead
     */
    get commands(): CommandListInstance;
    /**
     * @deprecated - Use v1.ratePlans instead
     */
    get ratePlans(): RatePlanListInstance;
    /**
     * @deprecated - Use v1.sims instead
     */
    get sims(): SimListInstance;
}
export = Wireless;


================================================
File: server/node_modules/twilio/lib/rest/WirelessBase.d.ts
================================================
import Domain from "../base/Domain";
import V1 from "./wireless/V1";
declare class WirelessBase extends Domain {
    _v1?: V1;
    /**
     * Initialize wireless domain
     *
     * @param twilio - The twilio client
     */
    constructor(twilio: any);
    get v1(): V1;
}
export = WirelessBase;


================================================
File: server/node_modules/twilio/lib/rest/accounts/v1/credential.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V1 from "../V1";
import { AwsListInstance } from "./credential/aws";
import { PublicKeyListInstance } from "./credential/publicKey";
export interface CredentialSolution {
}
export interface CredentialListInstance {
    _version: V1;
    _solution: CredentialSolution;
    _uri: string;
    _aws?: AwsListInstance;
    aws: AwsListInstance;
    _publicKey?: PublicKeyListInstance;
    publicKey: PublicKeyListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function CredentialListInstance(version: V1): CredentialListInstance;


================================================
File: server/node_modules/twilio/lib/rest/api/V2010.d.ts
================================================
import ApiBase from "../ApiBase";
import Version from "../../base/Version";
import { AccountListInstance } from "./v2010/account";
import { AccountContext } from "./v2010/account";
export default class V2010 extends Version {
    /**
     * Initialize the V2010 version of Api
     *
     * @param domain - The Twilio (Twilio.Api) domain
     */
    constructor(domain: ApiBase);
    /** accounts - { Twilio.Api.V2010.AccountListInstance } resource */
    protected _accounts?: AccountListInstance;
    /** account - { Twilio.Api.V2010.AccountContext } resource */
    protected _account?: AccountContext;
    /** Getter for accounts resource */
    get accounts(): AccountListInstance;
    /** Getter for account resource */
    get account(): AccountContext;
}


================================================
File: server/node_modules/twilio/lib/rest/api/v2010/account/sip.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V2010 from "../../V2010";
import { CredentialListListInstance } from "./sip/credentialList";
import { DomainListInstance } from "./sip/domain";
import { IpAccessControlListListInstance } from "./sip/ipAccessControlList";
export interface SipSolution {
    accountSid: string;
}
export interface SipListInstance {
    _version: V2010;
    _solution: SipSolution;
    _uri: string;
    _credentialLists?: CredentialListListInstance;
    credentialLists: CredentialListListInstance;
    _domains?: DomainListInstance;
    domains: DomainListInstance;
    _ipAccessControlLists?: IpAccessControlListListInstance;
    ipAccessControlLists: IpAccessControlListListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function SipListInstance(version: V2010, accountSid: string): SipListInstance;


================================================
File: server/node_modules/twilio/lib/rest/api/v2010/account/sip/domain/authTypes.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V2010 from "../../../../V2010";
import { AuthTypeCallsListInstance } from "./authTypes/authTypeCalls";
import { AuthTypeRegistrationsListInstance } from "./authTypes/authTypeRegistrations";
export interface AuthTypesSolution {
    accountSid: string;
    domainSid: string;
}
export interface AuthTypesListInstance {
    _version: V2010;
    _solution: AuthTypesSolution;
    _uri: string;
    _calls?: AuthTypeCallsListInstance;
    calls: AuthTypeCallsListInstance;
    _registrations?: AuthTypeRegistrationsListInstance;
    registrations: AuthTypeRegistrationsListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function AuthTypesListInstance(version: V2010, accountSid: string, domainSid: string): AuthTypesListInstance;


================================================
File: server/node_modules/twilio/lib/rest/api/v2010/account/sip/domain/authTypes/authTypeRegistrations.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V2010 from "../../../../../V2010";
import { AuthRegistrationsCredentialListMappingListInstance } from "./authTypeRegistrations/authRegistrationsCredentialListMapping";
export interface AuthTypeRegistrationsSolution {
    accountSid: string;
    domainSid: string;
}
export interface AuthTypeRegistrationsListInstance {
    _version: V2010;
    _solution: AuthTypeRegistrationsSolution;
    _uri: string;
    _credentialListMappings?: AuthRegistrationsCredentialListMappingListInstance;
    credentialListMappings: AuthRegistrationsCredentialListMappingListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function AuthTypeRegistrationsListInstance(version: V2010, accountSid: string, domainSid: string): AuthTypeRegistrationsListInstance;


================================================
File: server/node_modules/twilio/lib/rest/bulkexports/V1.d.ts
================================================
import BulkexportsBase from "../BulkexportsBase";
import Version from "../../base/Version";
import { ExportListInstance } from "./v1/export";
import { ExportConfigurationListInstance } from "./v1/exportConfiguration";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Bulkexports
     *
     * @param domain - The Twilio (Twilio.Bulkexports) domain
     */
    constructor(domain: BulkexportsBase);
    /** exports - { Twilio.Bulkexports.V1.ExportListInstance } resource */
    protected _exports?: ExportListInstance;
    /** exportConfiguration - { Twilio.Bulkexports.V1.ExportConfigurationListInstance } resource */
    protected _exportConfiguration?: ExportConfigurationListInstance;
    /** Getter for exports resource */
    get exports(): ExportListInstance;
    /** Getter for exportConfiguration resource */
    get exportConfiguration(): ExportConfigurationListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/chat/V1.d.ts
================================================
import ChatBase from "../ChatBase";
import Version from "../../base/Version";
import { CredentialListInstance } from "./v1/credential";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Chat
     *
     * @param domain - The Twilio (Twilio.Chat) domain
     */
    constructor(domain: ChatBase);
    /** credentials - { Twilio.Chat.V1.CredentialListInstance } resource */
    protected _credentials?: CredentialListInstance;
    /** services - { Twilio.Chat.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for credentials resource */
    get credentials(): CredentialListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/chat/V2.d.ts
================================================
import ChatBase from "../ChatBase";
import Version from "../../base/Version";
import { CredentialListInstance } from "./v2/credential";
import { ServiceListInstance } from "./v2/service";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of Chat
     *
     * @param domain - The Twilio (Twilio.Chat) domain
     */
    constructor(domain: ChatBase);
    /** credentials - { Twilio.Chat.V2.CredentialListInstance } resource */
    protected _credentials?: CredentialListInstance;
    /** services - { Twilio.Chat.V2.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for credentials resource */
    get credentials(): CredentialListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/chat/V3.d.ts
================================================
import ChatBase from "../ChatBase";
import Version from "../../base/Version";
import { ChannelListInstance } from "./v3/channel";
export default class V3 extends Version {
    /**
     * Initialize the V3 version of Chat
     *
     * @param domain - The Twilio (Twilio.Chat) domain
     */
    constructor(domain: ChatBase);
    /** channels - { Twilio.Chat.V3.ChannelListInstance } resource */
    protected _channels?: ChannelListInstance;
    /** Getter for channels resource */
    get channels(): ChannelListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/content/V2.d.ts
================================================
import ContentBase from "../ContentBase";
import Version from "../../base/Version";
import { ContentListInstance } from "./v2/content";
import { ContentAndApprovalsListInstance } from "./v2/contentAndApprovals";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of Content
     *
     * @param domain - The Twilio (Twilio.Content) domain
     */
    constructor(domain: ContentBase);
    /** contents - { Twilio.Content.V2.ContentListInstance } resource */
    protected _contents?: ContentListInstance;
    /** contentAndApprovals - { Twilio.Content.V2.ContentAndApprovalsListInstance } resource */
    protected _contentAndApprovals?: ContentAndApprovalsListInstance;
    /** Getter for contents resource */
    get contents(): ContentListInstance;
    /** Getter for contentAndApprovals resource */
    get contentAndApprovals(): ContentAndApprovalsListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/flexApi/V2.d.ts
================================================
import FlexApiBase from "../FlexApiBase";
import Version from "../../base/Version";
import { FlexUserListInstance } from "./v2/flexUser";
import { WebChannelsListInstance } from "./v2/webChannels";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of FlexApi
     *
     * @param domain - The Twilio (Twilio.FlexApi) domain
     */
    constructor(domain: FlexApiBase);
    /** flexUser - { Twilio.FlexApi.V2.FlexUserListInstance } resource */
    protected _flexUser?: FlexUserListInstance;
    /** webChannels - { Twilio.FlexApi.V2.WebChannelsListInstance } resource */
    protected _webChannels?: WebChannelsListInstance;
    /** Getter for flexUser resource */
    get flexUser(): FlexUserListInstance;
    /** Getter for webChannels resource */
    get webChannels(): WebChannelsListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/frontlineApi/V1.d.ts
================================================
import FrontlineApiBase from "../FrontlineApiBase";
import Version from "../../base/Version";
import { UserListInstance } from "./v1/user";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of FrontlineApi
     *
     * @param domain - The Twilio (Twilio.FrontlineApi) domain
     */
    constructor(domain: FrontlineApiBase);
    /** users - { Twilio.FrontlineApi.V1.UserListInstance } resource */
    protected _users?: UserListInstance;
    /** Getter for users resource */
    get users(): UserListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/iam/V1.d.ts
================================================
import IamBase from "../IamBase";
import Version from "../../base/Version";
import { ApiKeyListInstance } from "./v1/apiKey";
import { GetApiKeysListInstance } from "./v1/getApiKeys";
import { KeyListInstance } from "./v1/key";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Iam
     *
     * @param domain - The Twilio (Twilio.Iam) domain
     */
    constructor(domain: IamBase);
    /** apiKey - { Twilio.Iam.V1.ApiKeyListInstance } resource */
    protected _apiKey?: ApiKeyListInstance;
    /** getApiKeys - { Twilio.Iam.V1.GetApiKeysListInstance } resource */
    protected _getApiKeys?: GetApiKeysListInstance;
    /** keys - { Twilio.Iam.V1.KeyListInstance } resource */
    protected _keys?: KeyListInstance;
    /** Getter for apiKey resource */
    get apiKey(): ApiKeyListInstance;
    /** Getter for getApiKeys resource */
    get getApiKeys(): GetApiKeysListInstance;
    /** Getter for keys resource */
    get keys(): KeyListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/ipMessaging/V1.d.ts
================================================
import IpMessagingBase from "../IpMessagingBase";
import Version from "../../base/Version";
import { CredentialListInstance } from "./v1/credential";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of IpMessaging
     *
     * @param domain - The Twilio (Twilio.IpMessaging) domain
     */
    constructor(domain: IpMessagingBase);
    /** credentials - { Twilio.IpMessaging.V1.CredentialListInstance } resource */
    protected _credentials?: CredentialListInstance;
    /** services - { Twilio.IpMessaging.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for credentials resource */
    get credentials(): CredentialListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/ipMessaging/V2.d.ts
================================================
import IpMessagingBase from "../IpMessagingBase";
import Version from "../../base/Version";
import { CredentialListInstance } from "./v2/credential";
import { ServiceListInstance } from "./v2/service";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of IpMessaging
     *
     * @param domain - The Twilio (Twilio.IpMessaging) domain
     */
    constructor(domain: IpMessagingBase);
    /** credentials - { Twilio.IpMessaging.V2.CredentialListInstance } resource */
    protected _credentials?: CredentialListInstance;
    /** services - { Twilio.IpMessaging.V2.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for credentials resource */
    get credentials(): CredentialListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/lookups/V1.d.ts
================================================
import LookupsBase from "../LookupsBase";
import Version from "../../base/Version";
import { PhoneNumberListInstance } from "./v1/phoneNumber";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Lookups
     *
     * @param domain - The Twilio (Twilio.Lookups) domain
     */
    constructor(domain: LookupsBase);
    /** phoneNumbers - { Twilio.Lookups.V1.PhoneNumberListInstance } resource */
    protected _phoneNumbers?: PhoneNumberListInstance;
    /** Getter for phoneNumbers resource */
    get phoneNumbers(): PhoneNumberListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/lookups/V2.d.ts
================================================
import LookupsBase from "../LookupsBase";
import Version from "../../base/Version";
import { PhoneNumberListInstance } from "./v2/phoneNumber";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of Lookups
     *
     * @param domain - The Twilio (Twilio.Lookups) domain
     */
    constructor(domain: LookupsBase);
    /** phoneNumbers - { Twilio.Lookups.V2.PhoneNumberListInstance } resource */
    protected _phoneNumbers?: PhoneNumberListInstance;
    /** Getter for phoneNumbers resource */
    get phoneNumbers(): PhoneNumberListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/monitor/V1.d.ts
================================================
import MonitorBase from "../MonitorBase";
import Version from "../../base/Version";
import { AlertListInstance } from "./v1/alert";
import { EventListInstance } from "./v1/event";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Monitor
     *
     * @param domain - The Twilio (Twilio.Monitor) domain
     */
    constructor(domain: MonitorBase);
    /** alerts - { Twilio.Monitor.V1.AlertListInstance } resource */
    protected _alerts?: AlertListInstance;
    /** events - { Twilio.Monitor.V1.EventListInstance } resource */
    protected _events?: EventListInstance;
    /** Getter for alerts resource */
    get alerts(): AlertListInstance;
    /** Getter for events resource */
    get events(): EventListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/notify/V1.d.ts
================================================
import NotifyBase from "../NotifyBase";
import Version from "../../base/Version";
import { CredentialListInstance } from "./v1/credential";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Notify
     *
     * @param domain - The Twilio (Twilio.Notify) domain
     */
    constructor(domain: NotifyBase);
    /** credentials - { Twilio.Notify.V1.CredentialListInstance } resource */
    protected _credentials?: CredentialListInstance;
    /** services - { Twilio.Notify.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for credentials resource */
    get credentials(): CredentialListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/oauth/V1.d.ts
================================================
import OauthBase from "../OauthBase";
import Version from "../../base/Version";
import { AuthorizeListInstance } from "./v1/authorize";
import { TokenListInstance } from "./v1/token";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Oauth
     *
     * @param domain - The Twilio (Twilio.Oauth) domain
     */
    constructor(domain: OauthBase);
    /** authorize - { Twilio.Oauth.V1.AuthorizeListInstance } resource */
    protected _authorize?: AuthorizeListInstance;
    /** token - { Twilio.Oauth.V1.TokenListInstance } resource */
    protected _token?: TokenListInstance;
    /** Getter for authorize resource */
    get authorize(): AuthorizeListInstance;
    /** Getter for token resource */
    get token(): TokenListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/preview/Marketplace.d.ts
================================================
import PreviewBase from "../PreviewBase";
import Version from "../../base/Version";
import { AvailableAddOnListInstance } from "./marketplace/availableAddOn";
import { InstalledAddOnListInstance } from "./marketplace/installedAddOn";
export default class Marketplace extends Version {
    /**
     * Initialize the Marketplace version of Preview
     *
     * @param domain - The Twilio (Twilio.Preview) domain
     */
    constructor(domain: PreviewBase);
    /** availableAddOns - { Twilio.Preview.Marketplace.AvailableAddOnListInstance } resource */
    protected _availableAddOns?: AvailableAddOnListInstance;
    /** installedAddOns - { Twilio.Preview.Marketplace.InstalledAddOnListInstance } resource */
    protected _installedAddOns?: InstalledAddOnListInstance;
    /** Getter for availableAddOns resource */
    get availableAddOns(): AvailableAddOnListInstance;
    /** Getter for installedAddOns resource */
    get installedAddOns(): InstalledAddOnListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/preview/Sync.d.ts
================================================
import PreviewBase from "../PreviewBase";
import Version from "../../base/Version";
import { ServiceListInstance } from "./sync/service";
export default class Sync extends Version {
    /**
     * Initialize the Sync version of Preview
     *
     * @param domain - The Twilio (Twilio.Preview) domain
     */
    constructor(domain: PreviewBase);
    /** services - { Twilio.Preview.Sync.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/previewIam/V1.d.ts
================================================
import PreviewIamBase from "../PreviewIamBase";
import Version from "../../base/Version";
import { AuthorizeListInstance } from "./v1/authorize";
import { TokenListInstance } from "./v1/token";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of PreviewIam
     *
     * @param domain - The Twilio (Twilio.PreviewIam) domain
     */
    constructor(domain: PreviewIamBase);
    /** authorize - { Twilio.PreviewIam.V1.AuthorizeListInstance } resource */
    protected _authorize?: AuthorizeListInstance;
    /** token - { Twilio.PreviewIam.V1.TokenListInstance } resource */
    protected _token?: TokenListInstance;
    /** Getter for authorize resource */
    get authorize(): AuthorizeListInstance;
    /** Getter for token resource */
    get token(): TokenListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/previewIam/Versionless.d.ts
================================================
import PreviewIamBase from "../PreviewIamBase";
import Version from "../../base/Version";
import { OrganizationListInstance } from "./versionless/organization";
export default class Versionless extends Version {
    /**
     * Initialize the Versionless version of PreviewIam
     *
     * @param domain - The Twilio (Twilio.PreviewIam) domain
     */
    constructor(domain: PreviewIamBase);
    /** organization - { Twilio.PreviewIam.Versionless.OrganizationListInstance } resource */
    protected _organization?: OrganizationListInstance;
    /** Getter for organization resource */
    get organization(): OrganizationListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/pricing/V2.d.ts
================================================
import PricingBase from "../PricingBase";
import Version from "../../base/Version";
import { CountryListInstance } from "./v2/country";
import { NumberListInstance } from "./v2/number";
import { VoiceListInstance } from "./v2/voice";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of Pricing
     *
     * @param domain - The Twilio (Twilio.Pricing) domain
     */
    constructor(domain: PricingBase);
    /** countries - { Twilio.Pricing.V2.CountryListInstance } resource */
    protected _countries?: CountryListInstance;
    /** numbers - { Twilio.Pricing.V2.NumberListInstance } resource */
    protected _numbers?: NumberListInstance;
    /** voice - { Twilio.Pricing.V2.VoiceListInstance } resource */
    protected _voice?: VoiceListInstance;
    /** Getter for countries resource */
    get countries(): CountryListInstance;
    /** Getter for numbers resource */
    get numbers(): NumberListInstance;
    /** Getter for voice resource */
    get voice(): VoiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/pricing/v1/messaging.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V1 from "../V1";
import { CountryListInstance } from "./messaging/country";
export interface MessagingSolution {
}
export interface MessagingListInstance {
    _version: V1;
    _solution: MessagingSolution;
    _uri: string;
    _countries?: CountryListInstance;
    countries: CountryListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function MessagingListInstance(version: V1): MessagingListInstance;


================================================
File: server/node_modules/twilio/lib/rest/pricing/v1/phoneNumber.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V1 from "../V1";
import { CountryListInstance } from "./phoneNumber/country";
export interface PhoneNumberSolution {
}
export interface PhoneNumberListInstance {
    _version: V1;
    _solution: PhoneNumberSolution;
    _uri: string;
    _countries?: CountryListInstance;
    countries: CountryListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function PhoneNumberListInstance(version: V1): PhoneNumberListInstance;


================================================
File: server/node_modules/twilio/lib/rest/pricing/v1/voice.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V1 from "../V1";
import { CountryListInstance } from "./voice/country";
import { NumberListInstance } from "./voice/number";
export interface VoiceSolution {
}
export interface VoiceListInstance {
    _version: V1;
    _solution: VoiceSolution;
    _uri: string;
    _countries?: CountryListInstance;
    countries: CountryListInstance;
    _numbers?: NumberListInstance;
    numbers: NumberListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function VoiceListInstance(version: V1): VoiceListInstance;


================================================
File: server/node_modules/twilio/lib/rest/pricing/v2/voice.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V2 from "../V2";
import { CountryListInstance } from "./voice/country";
import { NumberListInstance } from "./voice/number";
export interface VoiceSolution {
}
export interface VoiceListInstance {
    _version: V2;
    _solution: VoiceSolution;
    _uri: string;
    _countries?: CountryListInstance;
    countries: CountryListInstance;
    _numbers?: NumberListInstance;
    numbers: NumberListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function VoiceListInstance(version: V2): VoiceListInstance;


================================================
File: server/node_modules/twilio/lib/rest/proxy/V1.d.ts
================================================
import ProxyBase from "../ProxyBase";
import Version from "../../base/Version";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Proxy
     *
     * @param domain - The Twilio (Twilio.Proxy) domain
     */
    constructor(domain: ProxyBase);
    /** services - { Twilio.Proxy.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/serverless/V1.d.ts
================================================
import ServerlessBase from "../ServerlessBase";
import Version from "../../base/Version";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Serverless
     *
     * @param domain - The Twilio (Twilio.Serverless) domain
     */
    constructor(domain: ServerlessBase);
    /** services - { Twilio.Serverless.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/studio/V1.d.ts
================================================
import StudioBase from "../StudioBase";
import Version from "../../base/Version";
import { FlowListInstance } from "./v1/flow";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Studio
     *
     * @param domain - The Twilio (Twilio.Studio) domain
     */
    constructor(domain: StudioBase);
    /** flows - { Twilio.Studio.V1.FlowListInstance } resource */
    protected _flows?: FlowListInstance;
    /** Getter for flows resource */
    get flows(): FlowListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/studio/V2.d.ts
================================================
import StudioBase from "../StudioBase";
import Version from "../../base/Version";
import { FlowListInstance } from "./v2/flow";
import { FlowValidateListInstance } from "./v2/flowValidate";
export default class V2 extends Version {
    /**
     * Initialize the V2 version of Studio
     *
     * @param domain - The Twilio (Twilio.Studio) domain
     */
    constructor(domain: StudioBase);
    /** flows - { Twilio.Studio.V2.FlowListInstance } resource */
    protected _flows?: FlowListInstance;
    /** flowValidate - { Twilio.Studio.V2.FlowValidateListInstance } resource */
    protected _flowValidate?: FlowValidateListInstance;
    /** Getter for flows resource */
    get flows(): FlowListInstance;
    /** Getter for flowValidate resource */
    get flowValidate(): FlowValidateListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/sync/V1.d.ts
================================================
import SyncBase from "../SyncBase";
import Version from "../../base/Version";
import { ServiceListInstance } from "./v1/service";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Sync
     *
     * @param domain - The Twilio (Twilio.Sync) domain
     */
    constructor(domain: SyncBase);
    /** services - { Twilio.Sync.V1.ServiceListInstance } resource */
    protected _services?: ServiceListInstance;
    /** Getter for services resource */
    get services(): ServiceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/taskrouter/V1.d.ts
================================================
import TaskrouterBase from "../TaskrouterBase";
import Version from "../../base/Version";
import { WorkspaceListInstance } from "./v1/workspace";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Taskrouter
     *
     * @param domain - The Twilio (Twilio.Taskrouter) domain
     */
    constructor(domain: TaskrouterBase);
    /** workspaces - { Twilio.Taskrouter.V1.WorkspaceListInstance } resource */
    protected _workspaces?: WorkspaceListInstance;
    /** Getter for workspaces resource */
    get workspaces(): WorkspaceListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/trunking/V1.d.ts
================================================
import TrunkingBase from "../TrunkingBase";
import Version from "../../base/Version";
import { TrunkListInstance } from "./v1/trunk";
export default class V1 extends Version {
    /**
     * Initialize the V1 version of Trunking
     *
     * @param domain - The Twilio (Twilio.Trunking) domain
     */
    constructor(domain: TrunkingBase);
    /** trunks - { Twilio.Trunking.V1.TrunkListInstance } resource */
    protected _trunks?: TrunkListInstance;
    /** Getter for trunks resource */
    get trunks(): TrunkListInstance;
}


================================================
File: server/node_modules/twilio/lib/rest/voice/v1/dialingPermissions.d.ts
================================================
/// <reference types="node" />
import { inspect, InspectOptions } from "util";
import V1 from "../V1";
import { BulkCountryUpdateListInstance } from "./dialingPermissions/bulkCountryUpdate";
import { CountryListInstance } from "./dialingPermissions/country";
import { SettingsListInstance } from "./dialingPermissions/settings";
export interface DialingPermissionsSolution {
}
export interface DialingPermissionsListInstance {
    _version: V1;
    _solution: DialingPermissionsSolution;
    _uri: string;
    _bulkCountryUpdates?: BulkCountryUpdateListInstance;
    bulkCountryUpdates: BulkCountryUpdateListInstance;
    _countries?: CountryListInstance;
    countries: CountryListInstance;
    _settings?: SettingsListInstance;
    settings: SettingsListInstance;
    /**
     * Provide a user-friendly representation
     */
    toJSON(): any;
    [inspect.custom](_depth: any, options: InspectOptions): any;
}
export declare function DialingPermissionsListInstance(version: V1): DialingPermissionsListInstance;


================================================
File: server/node_modules/twilio/lib/twiml/TwiML.d.ts
================================================
/**
 * Parent TwiML object
 */
export default class TwiML {
    [key: string]: any;
    response: any;
    _propertyName: string;
    constructor();
    /**
     * Because child elements have properties named after their class names, we need
     * to translate that when we want to access that at the parent prototype level.
     * So this will translate something like Say to 'say' and VoiceResponse to
     * 'response'.
     */
    _getXml(): any;
    /**
     * Convert to TwiML
     *
     * @returns TwiML XML
     */
    toString(): any;
    /**
     * Add text under the TwiML node
     *
     * @param {string} content
     */
    addText(content: string): void;
    /**
     * Add an arbitrary tag as a child.
     *
     * @param {string} content
     */
    addChild(tagName: string, attributes: Object): GenericNode;
}
/**
 * Generic node
 */
declare class GenericNode extends TwiML {
    node: any;
    constructor(node: any);
}
export {};


================================================
File: server/node_modules/undici-types/README.md
================================================
# undici-types

This package is a dual-publish of the [undici](https://www.npmjs.com/package/undici) library types. The `undici` package **still contains types**. This package is for users who _only_ need undici types (such as for `@types/node`). It is published alongside every release of `undici`, so you can always use the same version.

- [GitHub nodejs/undici](https://github.com/nodejs/undici)
- [Undici Documentation](https://undici.nodejs.org/#/)


================================================
File: server/node_modules/undici-types/balanced-pool.d.ts
================================================
import Pool from './pool'
import Dispatcher from './dispatcher'
import { URL } from 'url'

export default BalancedPool

type BalancedPoolConnectOptions = Omit<Dispatcher.ConnectOptions, "origin">;

declare class BalancedPool extends Dispatcher {
  constructor(url: string | string[] | URL | URL[], options?: Pool.Options);

  addUpstream(upstream: string | URL): BalancedPool;
  removeUpstream(upstream: string | URL): BalancedPool;
  upstreams: Array<string>;

  /** `true` after `pool.close()` has been called. */
  closed: boolean;
  /** `true` after `pool.destroyed()` has been called or `pool.close()` has been called and the pool shutdown has completed. */
  destroyed: boolean;

  // Override dispatcher APIs.
  override connect(
    options: BalancedPoolConnectOptions
  ): Promise<Dispatcher.ConnectData>;
  override connect(
    options: BalancedPoolConnectOptions,
    callback: (err: Error | null, data: Dispatcher.ConnectData) => void
  ): void;
}


================================================
File: server/node_modules/undici-types/content-type.d.ts
================================================
/// <reference types="node" />

interface MIMEType {
  type: string
  subtype: string
  parameters: Map<string, string>
  essence: string
}

/**
 * Parse a string to a {@link MIMEType} object. Returns `failure` if the string
 * couldn't be parsed.
 * @see https://mimesniff.spec.whatwg.org/#parse-a-mime-type
 */
export function parseMIMEType (input: string): 'failure' | MIMEType

/**
 * Convert a MIMEType object to a string.
 * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type
 */
export function serializeAMimeType (mimeType: MIMEType): string


================================================
File: server/node_modules/undici-types/cookies.d.ts
================================================
/// <reference types="node" />

import type { Headers } from './fetch'

export interface Cookie {
  name: string
  value: string
  expires?: Date | number
  maxAge?: number
  domain?: string
  path?: string
  secure?: boolean
  httpOnly?: boolean
  sameSite?: 'Strict' | 'Lax' | 'None'
  unparsed?: string[]
}

export function deleteCookie (
  headers: Headers,
  name: string,
  attributes?: { name?: string, domain?: string }
): void

export function getCookies (headers: Headers): Record<string, string>

export function getSetCookies (headers: Headers): Cookie[]

export function setCookie (headers: Headers, cookie: Cookie): void


================================================
File: server/node_modules/undici-types/env-http-proxy-agent.d.ts
================================================
import Agent from './agent'
import Dispatcher from './dispatcher'

export default EnvHttpProxyAgent

declare class EnvHttpProxyAgent extends Dispatcher {
  constructor(opts?: EnvHttpProxyAgent.Options)

  dispatch(options: Agent.DispatchOptions, handler: Dispatcher.DispatchHandlers): boolean;
}

declare namespace EnvHttpProxyAgent {
  export interface Options extends Agent.Options {
    /** Overrides the value of the HTTP_PROXY environment variable  */
    httpProxy?: string;
    /** Overrides the value of the HTTPS_PROXY environment variable  */
    httpsProxy?: string;
    /** Overrides the value of the NO_PROXY environment variable  */
    noProxy?: string;
  }
}


================================================
File: server/node_modules/undici-types/global-dispatcher.d.ts
================================================
import Dispatcher from "./dispatcher";

export {
  getGlobalDispatcher,
  setGlobalDispatcher
}

declare function setGlobalDispatcher<DispatcherImplementation extends Dispatcher>(dispatcher: DispatcherImplementation): void;
declare function getGlobalDispatcher(): Dispatcher;


================================================
File: server/node_modules/undici-types/global-origin.d.ts
================================================
export {
	setGlobalOrigin,
	getGlobalOrigin
}
  
declare function setGlobalOrigin(origin: string | URL | undefined): void;
declare function getGlobalOrigin(): URL | undefined;

================================================
File: server/node_modules/undici-types/handlers.d.ts
================================================
import Dispatcher from "./dispatcher";

export declare class RedirectHandler implements Dispatcher.DispatchHandlers {
  constructor(
    dispatch: Dispatcher,
    maxRedirections: number,
    opts: Dispatcher.DispatchOptions,
    handler: Dispatcher.DispatchHandlers,
    redirectionLimitReached: boolean
  );
}

export declare class DecoratorHandler implements Dispatcher.DispatchHandlers {
  constructor(handler: Dispatcher.DispatchHandlers);
}


================================================
File: server/node_modules/undici-types/header.d.ts
================================================
/**
 * The header type declaration of `undici`.
 */
export type IncomingHttpHeaders = Record<string, string | string[] | undefined>;


================================================
File: server/node_modules/undici-types/interceptors.d.ts
================================================
import Dispatcher from "./dispatcher";
import RetryHandler from "./retry-handler";

export default Interceptors;

declare namespace Interceptors {
  export type DumpInterceptorOpts = { maxSize?: number }
  export type RetryInterceptorOpts = RetryHandler.RetryOptions
  export type RedirectInterceptorOpts = { maxRedirections?: number }
  export type ResponseErrorInterceptorOpts = { throwOnError: boolean }

  export function createRedirectInterceptor(opts: RedirectInterceptorOpts): Dispatcher.DispatcherComposeInterceptor
  export function dump(opts?: DumpInterceptorOpts): Dispatcher.DispatcherComposeInterceptor
  export function retry(opts?: RetryInterceptorOpts): Dispatcher.DispatcherComposeInterceptor
  export function redirect(opts?: RedirectInterceptorOpts): Dispatcher.DispatcherComposeInterceptor
  export function responseError(opts?: ResponseErrorInterceptorOpts): Dispatcher.DispatcherComposeInterceptor
}


================================================
File: server/node_modules/undici-types/mock-client.d.ts
================================================
import Client from './client'
import Dispatcher from './dispatcher'
import MockAgent from './mock-agent'
import { MockInterceptor, Interceptable } from './mock-interceptor'

export default MockClient

/** MockClient extends the Client API and allows one to mock requests. */
declare class MockClient extends Client implements Interceptable {
  constructor(origin: string, options: MockClient.Options);
  /** Intercepts any matching requests that use the same origin as this mock client. */
  intercept(options: MockInterceptor.Options): MockInterceptor;
  /** Dispatches a mocked request. */
  dispatch(options: Dispatcher.DispatchOptions, handlers: Dispatcher.DispatchHandlers): boolean;
  /** Closes the mock client and gracefully waits for enqueued requests to complete. */
  close(): Promise<void>;
}

declare namespace MockClient {
  /** MockClient options. */
  export interface Options extends Client.Options {
    /** The agent to associate this MockClient with. */
    agent: MockAgent;
  }
}


================================================
File: server/node_modules/undici-types/mock-errors.d.ts
================================================
import Errors from './errors'

export default MockErrors

declare namespace MockErrors {
  /** The request does not match any registered mock dispatches. */
  export class MockNotMatchedError extends Errors.UndiciError {
    constructor(message?: string);
    name: 'MockNotMatchedError';
    code: 'UND_MOCK_ERR_MOCK_NOT_MATCHED';
  }
}


================================================
File: server/node_modules/undici-types/mock-pool.d.ts
================================================
import Pool from './pool'
import MockAgent from './mock-agent'
import { Interceptable, MockInterceptor } from './mock-interceptor'
import Dispatcher from './dispatcher'

export default MockPool

/** MockPool extends the Pool API and allows one to mock requests. */
declare class MockPool extends Pool implements Interceptable {
  constructor(origin: string, options: MockPool.Options);
  /** Intercepts any matching requests that use the same origin as this mock pool. */
  intercept(options: MockInterceptor.Options): MockInterceptor;
  /** Dispatches a mocked request. */
  dispatch(options: Dispatcher.DispatchOptions, handlers: Dispatcher.DispatchHandlers): boolean;
  /** Closes the mock pool and gracefully waits for enqueued requests to complete. */
  close(): Promise<void>;
}

declare namespace MockPool {
  /** MockPool options. */
  export interface Options extends Pool.Options {
    /** The agent to associate this MockPool with. */
    agent: MockAgent;
  }
}


================================================
File: server/node_modules/undici-types/patch.d.ts
================================================
/// <reference types="node" />

// See https://github.com/nodejs/undici/issues/1740

export type DOMException = typeof globalThis extends { DOMException: infer T }
 ? T
 : any

export interface EventInit {
  bubbles?: boolean
  cancelable?: boolean
  composed?: boolean
}

export interface EventListenerOptions {
  capture?: boolean
}

export interface AddEventListenerOptions extends EventListenerOptions {
  once?: boolean
  passive?: boolean
  signal?: AbortSignal
}

export type EventListenerOrEventListenerObject = EventListener | EventListenerObject

export interface EventListenerObject {
  handleEvent (object: Event): void
}

export interface EventListener {
  (evt: Event): void
}


================================================
File: server/node_modules/undici-types/pool-stats.d.ts
================================================
import Pool from "./pool"

export default PoolStats

declare class PoolStats {
  constructor(pool: Pool);
  /** Number of open socket connections in this pool. */
  connected: number;
  /** Number of open socket connections in this pool that do not have an active request. */
  free: number;
  /** Number of pending requests across all clients in this pool. */
  pending: number;
  /** Number of queued requests across all clients in this pool. */
  queued: number;
  /** Number of currently active requests across all clients in this pool. */
  running: number;
  /** Number of active, pending, or queued requests across all clients in this pool. */
  size: number;
}


================================================
File: server/node_modules/undici-types/proxy-agent.d.ts
================================================
import Agent from './agent'
import buildConnector from './connector';
import Dispatcher from './dispatcher'
import { IncomingHttpHeaders } from './header'

export default ProxyAgent

declare class ProxyAgent extends Dispatcher {
  constructor(options: ProxyAgent.Options | string)

  dispatch(options: Agent.DispatchOptions, handler: Dispatcher.DispatchHandlers): boolean;
  close(): Promise<void>;
}

declare namespace ProxyAgent {
  export interface Options extends Agent.Options {
    uri: string;
    /**
     * @deprecated use opts.token
     */
    auth?: string;
    token?: string;
    headers?: IncomingHttpHeaders;
    requestTls?: buildConnector.BuildOptions;
    proxyTls?: buildConnector.BuildOptions;
    clientFactory?(origin: URL, opts: object): Dispatcher;
  }
}


================================================
File: server/node_modules/undici-types/retry-agent.d.ts
================================================
import Dispatcher from './dispatcher'
import RetryHandler from './retry-handler'

export default RetryAgent

declare class RetryAgent extends Dispatcher {
  constructor(dispatcher: Dispatcher, options?: RetryHandler.RetryOptions)
}


================================================
File: server/node_modules/undici-types/util.d.ts
================================================
export namespace util {
  /**
   * Retrieves a header name and returns its lowercase value.
   * @param value Header name
   */
  export function headerNameToString(value: string | Buffer): string;

  /**
   * Receives a header object and returns the parsed value.
   * @param headers Header object
   * @param obj Object to specify a proxy object. Used to assign parsed values.
   * @returns If `obj` is specified, it is equivalent to `obj`.
   */
  export function parseHeaders(
    headers: (Buffer | string | (Buffer | string)[])[],
    obj?: Record<string, string | string[]>
  ): Record<string, string | string[]>;
}


================================================
File: server/node_modules/unpipe/HISTORY.md
================================================
1.0.0 / 2015-06-14
==================

  * Initial release


================================================
File: server/node_modules/unpipe/package.json
================================================
{
  "name": "unpipe",
  "description": "Unpipe a stream from all destinations",
  "version": "1.0.0",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "repository": "stream-utils/unpipe",
  "devDependencies": {
    "istanbul": "0.3.15",
    "mocha": "2.2.5",
    "readable-stream": "1.1.13"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}


================================================
File: server/node_modules/utils-merge/index.js
================================================
/**
 * Merge object b with object a.
 *
 *     var a = { foo: 'bar' }
 *       , b = { bar: 'baz' };
 *
 *     merge(a, b);
 *     // => { foo: 'bar', bar: 'baz' }
 *
 * @param {Object} a
 * @param {Object} b
 * @return {Object}
 * @api public
 */

exports = module.exports = function(a, b){
  if (a && b) {
    for (var key in b) {
      a[key] = b[key];
    }
  }
  return a;
};


================================================
File: server/node_modules/utils-merge/package.json
================================================
{
  "name": "utils-merge",
  "version": "1.0.1",
  "description": "merge() utility function",
  "keywords": [
    "util"
  ],
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/utils-merge.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/utils-merge/issues"
  },
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./index",
  "dependencies": {},
  "devDependencies": {
    "make-node": "0.3.x",
    "mocha": "1.x.x",
    "chai": "1.x.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js"
  }
}


================================================
File: server/node_modules/utils-merge/.npmignore
================================================
CONTRIBUTING.md
Makefile
docs/
examples/
reports/
test/

.jshintrc
.travis.yml


================================================
File: server/node_modules/uuid/dist/cjs/index.d.ts
================================================
export type * from './types.js';
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/cjs/max.d.ts
================================================
declare const _default: "ffffffff-ffff-ffff-ffff-ffffffffffff";
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs/max.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = 'ffffffff-ffff-ffff-ffff-ffffffffffff';


================================================
File: server/node_modules/uuid/dist/cjs/md5.d.ts
================================================
/// <reference types="node" />
/// <reference types="node" />
declare function md5(bytes: Uint8Array): Buffer;
export default md5;


================================================
File: server/node_modules/uuid/dist/cjs/md5.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
function md5(bytes) {
    if (Array.isArray(bytes)) {
        bytes = Buffer.from(bytes);
    }
    else if (typeof bytes === 'string') {
        bytes = Buffer.from(bytes, 'utf8');
    }
    return (0, crypto_1.createHash)('md5').update(bytes).digest();
}
exports.default = md5;


================================================
File: server/node_modules/uuid/dist/cjs/native.d.ts
================================================
/// <reference types="node" />
import { randomUUID } from 'crypto';
declare const _default: {
    randomUUID: typeof randomUUID;
};
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs/native.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
exports.default = { randomUUID: crypto_1.randomUUID };


================================================
File: server/node_modules/uuid/dist/cjs/nil.d.ts
================================================
declare const _default: "00000000-0000-0000-0000-000000000000";
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs/nil.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = '00000000-0000-0000-0000-000000000000';


================================================
File: server/node_modules/uuid/dist/cjs/package.json
================================================
{"type":"commonjs"}


================================================
File: server/node_modules/uuid/dist/cjs/parse.d.ts
================================================
declare function parse(uuid: string): Uint8Array;
export default parse;


================================================
File: server/node_modules/uuid/dist/cjs/parse.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const validate_js_1 = require("./validate.js");
function parse(uuid) {
    if (!(0, validate_js_1.default)(uuid)) {
        throw TypeError('Invalid UUID');
    }
    let v;
    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);
}
exports.default = parse;


================================================
File: server/node_modules/uuid/dist/cjs/regex.d.ts
================================================
declare const _default: RegExp;
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs/regex.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;


================================================
File: server/node_modules/uuid/dist/cjs/rng.d.ts
================================================
export default function rng(): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs/rng.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const rnds8Pool = new Uint8Array(256);
let poolPtr = rnds8Pool.length;
function rng() {
    if (poolPtr > rnds8Pool.length - 16) {
        (0, crypto_1.randomFillSync)(rnds8Pool);
        poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, (poolPtr += 16));
}
exports.default = rng;


================================================
File: server/node_modules/uuid/dist/cjs/sha1.d.ts
================================================
/// <reference types="node" />
/// <reference types="node" />
declare function sha1(bytes: Uint8Array): Buffer;
export default sha1;


================================================
File: server/node_modules/uuid/dist/cjs/sha1.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
function sha1(bytes) {
    if (Array.isArray(bytes)) {
        bytes = Buffer.from(bytes);
    }
    else if (typeof bytes === 'string') {
        bytes = Buffer.from(bytes, 'utf8');
    }
    return (0, crypto_1.createHash)('sha1').update(bytes).digest();
}
exports.default = sha1;


================================================
File: server/node_modules/uuid/dist/cjs/stringify.d.ts
================================================
export declare function unsafeStringify(arr: Uint8Array, offset?: number): string;
declare function stringify(arr: Uint8Array, offset?: number): string;
export default stringify;


================================================
File: server/node_modules/uuid/dist/cjs/types.d.ts
================================================
export type UUIDTypes = string | Uint8Array;
export type Version1Options = {
    node?: Uint8Array;
    clockseq?: number;
    random?: Uint8Array;
    rng?: () => Uint8Array;
    msecs?: number;
    nsecs?: number;
    _v6?: boolean;
};
export type Version4Options = {
    random?: Uint8Array;
    rng?: () => Uint8Array;
};
export type Version6Options = Version1Options;
export type Version7Options = {
    random?: Uint8Array;
    msecs?: number;
    seq?: number;
    rng?: () => Uint8Array;
};


================================================
File: server/node_modules/uuid/dist/cjs/types.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


================================================
File: server/node_modules/uuid/dist/cjs/uuid-bin.d.ts
================================================
export {};


================================================
File: server/node_modules/uuid/dist/cjs/v1.d.ts
================================================
import { Version1Options } from './types.js';
type V1State = {
    node?: Uint8Array;
    clockseq?: number;
    msecs?: number;
    nsecs?: number;
};
declare function v1(options?: Version1Options, buf?: undefined, offset?: number): string;
declare function v1(options: Version1Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV1State(state: V1State, now: number, rnds: Uint8Array): V1State;
export default v1;


================================================
File: server/node_modules/uuid/dist/cjs/v1ToV6.d.ts
================================================
export default function v1ToV6(uuid: string): string;
export default function v1ToV6(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs/v1ToV6.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parse_js_1 = require("./parse.js");
const stringify_js_1 = require("./stringify.js");
function v1ToV6(uuid) {
    const v1Bytes = typeof uuid === 'string' ? (0, parse_js_1.default)(uuid) : uuid;
    const v6Bytes = _v1ToV6(v1Bytes);
    return typeof uuid === 'string' ? (0, stringify_js_1.unsafeStringify)(v6Bytes) : v6Bytes;
}
exports.default = v1ToV6;
function _v1ToV6(v1Bytes) {
    return Uint8Array.of(((v1Bytes[6] & 0x0f) << 4) | ((v1Bytes[7] >> 4) & 0x0f), ((v1Bytes[7] & 0x0f) << 4) | ((v1Bytes[4] & 0xf0) >> 4), ((v1Bytes[4] & 0x0f) << 4) | ((v1Bytes[5] & 0xf0) >> 4), ((v1Bytes[5] & 0x0f) << 4) | ((v1Bytes[0] & 0xf0) >> 4), ((v1Bytes[0] & 0x0f) << 4) | ((v1Bytes[1] & 0xf0) >> 4), ((v1Bytes[1] & 0x0f) << 4) | ((v1Bytes[2] & 0xf0) >> 4), 0x60 | (v1Bytes[2] & 0x0f), v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/cjs/v3.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v3 {
    var DNS: string;
    var URL: string;
}
export default v3;


================================================
File: server/node_modules/uuid/dist/cjs/v3.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URL = exports.DNS = void 0;
const md5_js_1 = require("./md5.js");
const v35_js_1 = require("./v35.js");
var v35_js_2 = require("./v35.js");
Object.defineProperty(exports, "DNS", { enumerable: true, get: function () { return v35_js_2.DNS; } });
Object.defineProperty(exports, "URL", { enumerable: true, get: function () { return v35_js_2.URL; } });
function v3(value, namespace, buf, offset) {
    return (0, v35_js_1.default)(0x30, md5_js_1.default, value, namespace, buf, offset);
}
v3.DNS = v35_js_1.DNS;
v3.URL = v35_js_1.URL;
exports.default = v3;


================================================
File: server/node_modules/uuid/dist/cjs/v35.d.ts
================================================
import { UUIDTypes } from './types.js';
export declare function stringToBytes(str: string): Uint8Array;
export declare const DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
export declare const URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
type HashFunction = (bytes: Uint8Array) => Uint8Array;
export default function v35(version: 0x30 | 0x50, hash: HashFunction, value: string | Uint8Array, namespace: UUIDTypes, buf?: Uint8Array, offset?: number): string | Uint8Array;
export {};


================================================
File: server/node_modules/uuid/dist/cjs/v4.d.ts
================================================
import { Version4Options } from './types.js';
declare function v4(options?: Version4Options, buf?: undefined, offset?: number): string;
declare function v4(options: Version4Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v4;


================================================
File: server/node_modules/uuid/dist/cjs/v5.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v5 {
    var DNS: string;
    var URL: string;
}
export default v5;


================================================
File: server/node_modules/uuid/dist/cjs/v5.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URL = exports.DNS = void 0;
const sha1_js_1 = require("./sha1.js");
const v35_js_1 = require("./v35.js");
var v35_js_2 = require("./v35.js");
Object.defineProperty(exports, "DNS", { enumerable: true, get: function () { return v35_js_2.DNS; } });
Object.defineProperty(exports, "URL", { enumerable: true, get: function () { return v35_js_2.URL; } });
function v5(value, namespace, buf, offset) {
    return (0, v35_js_1.default)(0x50, sha1_js_1.default, value, namespace, buf, offset);
}
v5.DNS = v35_js_1.DNS;
v5.URL = v35_js_1.URL;
exports.default = v5;


================================================
File: server/node_modules/uuid/dist/cjs/v6.d.ts
================================================
import { Version6Options } from './types.js';
declare function v6(options?: Version6Options, buf?: undefined, offset?: number): string;
declare function v6(options: Version6Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v6;


================================================
File: server/node_modules/uuid/dist/cjs/v6.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stringify_js_1 = require("./stringify.js");
const v1_js_1 = require("./v1.js");
const v1ToV6_js_1 = require("./v1ToV6.js");
function v6(options, buf, offset) {
    options ??= {};
    offset ??= 0;
    let bytes = (0, v1_js_1.default)({ ...options, _v6: true }, new Uint8Array(16));
    bytes = (0, v1ToV6_js_1.default)(bytes);
    if (buf) {
        for (let i = 0; i < 16; i++) {
            buf[offset + i] = bytes[i];
        }
        return buf;
    }
    return (0, stringify_js_1.unsafeStringify)(bytes);
}
exports.default = v6;


================================================
File: server/node_modules/uuid/dist/cjs/v6ToV1.d.ts
================================================
export default function v6ToV1(uuid: string): string;
export default function v6ToV1(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs/v6ToV1.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parse_js_1 = require("./parse.js");
const stringify_js_1 = require("./stringify.js");
function v6ToV1(uuid) {
    const v6Bytes = typeof uuid === 'string' ? (0, parse_js_1.default)(uuid) : uuid;
    const v1Bytes = _v6ToV1(v6Bytes);
    return typeof uuid === 'string' ? (0, stringify_js_1.unsafeStringify)(v1Bytes) : v1Bytes;
}
exports.default = v6ToV1;
function _v6ToV1(v6Bytes) {
    return Uint8Array.of(((v6Bytes[3] & 0x0f) << 4) | ((v6Bytes[4] >> 4) & 0x0f), ((v6Bytes[4] & 0x0f) << 4) | ((v6Bytes[5] & 0xf0) >> 4), ((v6Bytes[5] & 0x0f) << 4) | (v6Bytes[6] & 0x0f), v6Bytes[7], ((v6Bytes[1] & 0x0f) << 4) | ((v6Bytes[2] & 0xf0) >> 4), ((v6Bytes[2] & 0x0f) << 4) | ((v6Bytes[3] & 0xf0) >> 4), 0x10 | ((v6Bytes[0] & 0xf0) >> 4), ((v6Bytes[0] & 0x0f) << 4) | ((v6Bytes[1] & 0xf0) >> 4), v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/cjs/v7.d.ts
================================================
import { Version7Options } from './types.js';
type V7State = {
    msecs?: number;
    seq?: number;
};
declare function v7(options?: Version7Options, buf?: undefined, offset?: number): string;
declare function v7(options: Version7Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV7State(state: V7State, now: number, rnds: Uint8Array): V7State;
export default v7;


================================================
File: server/node_modules/uuid/dist/cjs/validate.d.ts
================================================
declare function validate(uuid: unknown): boolean;
export default validate;


================================================
File: server/node_modules/uuid/dist/cjs/validate.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const regex_js_1 = require("./regex.js");
function validate(uuid) {
    return typeof uuid === 'string' && regex_js_1.default.test(uuid);
}
exports.default = validate;


================================================
File: server/node_modules/uuid/dist/cjs/version.d.ts
================================================
declare function version(uuid: string): number;
export default version;


================================================
File: server/node_modules/uuid/dist/cjs/version.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const validate_js_1 = require("./validate.js");
function version(uuid) {
    if (!(0, validate_js_1.default)(uuid)) {
        throw TypeError('Invalid UUID');
    }
    return parseInt(uuid.slice(14, 15), 16);
}
exports.default = version;


================================================
File: server/node_modules/uuid/dist/cjs-browser/index.d.ts
================================================
export type * from './types.js';
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/cjs-browser/max.d.ts
================================================
declare const _default: "ffffffff-ffff-ffff-ffff-ffffffffffff";
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs-browser/max.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = 'ffffffff-ffff-ffff-ffff-ffffffffffff';


================================================
File: server/node_modules/uuid/dist/cjs-browser/md5.d.ts
================================================
declare function md5(bytes: Uint8Array): Uint8Array;
export default md5;


================================================
File: server/node_modules/uuid/dist/cjs-browser/native.d.ts
================================================
declare const _default: {
    randomUUID: false | (() => `${string}-${string}-${string}-${string}-${string}`);
};
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs-browser/native.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
exports.default = { randomUUID };


================================================
File: server/node_modules/uuid/dist/cjs-browser/nil.d.ts
================================================
declare const _default: "00000000-0000-0000-0000-000000000000";
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs-browser/nil.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = '00000000-0000-0000-0000-000000000000';


================================================
File: server/node_modules/uuid/dist/cjs-browser/package.json
================================================
{"type":"commonjs"}


================================================
File: server/node_modules/uuid/dist/cjs-browser/parse.d.ts
================================================
declare function parse(uuid: string): Uint8Array;
export default parse;


================================================
File: server/node_modules/uuid/dist/cjs-browser/parse.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const validate_js_1 = require("./validate.js");
function parse(uuid) {
    if (!(0, validate_js_1.default)(uuid)) {
        throw TypeError('Invalid UUID');
    }
    let v;
    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);
}
exports.default = parse;


================================================
File: server/node_modules/uuid/dist/cjs-browser/regex.d.ts
================================================
declare const _default: RegExp;
export default _default;


================================================
File: server/node_modules/uuid/dist/cjs-browser/regex.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;


================================================
File: server/node_modules/uuid/dist/cjs-browser/rng.d.ts
================================================
export default function rng(): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs-browser/rng.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
    if (!getRandomValues) {
        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {
            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
        }
        getRandomValues = crypto.getRandomValues.bind(crypto);
    }
    return getRandomValues(rnds8);
}
exports.default = rng;


================================================
File: server/node_modules/uuid/dist/cjs-browser/sha1.d.ts
================================================
declare function sha1(bytes: Uint8Array): Uint8Array;
export default sha1;


================================================
File: server/node_modules/uuid/dist/cjs-browser/stringify.d.ts
================================================
export declare function unsafeStringify(arr: Uint8Array, offset?: number): string;
declare function stringify(arr: Uint8Array, offset?: number): string;
export default stringify;


================================================
File: server/node_modules/uuid/dist/cjs-browser/types.d.ts
================================================
export type UUIDTypes = string | Uint8Array;
export type Version1Options = {
    node?: Uint8Array;
    clockseq?: number;
    random?: Uint8Array;
    rng?: () => Uint8Array;
    msecs?: number;
    nsecs?: number;
    _v6?: boolean;
};
export type Version4Options = {
    random?: Uint8Array;
    rng?: () => Uint8Array;
};
export type Version6Options = Version1Options;
export type Version7Options = {
    random?: Uint8Array;
    msecs?: number;
    seq?: number;
    rng?: () => Uint8Array;
};


================================================
File: server/node_modules/uuid/dist/cjs-browser/types.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


================================================
File: server/node_modules/uuid/dist/cjs-browser/uuid-bin.d.ts
================================================
export {};


================================================
File: server/node_modules/uuid/dist/cjs-browser/v1.d.ts
================================================
import { Version1Options } from './types.js';
type V1State = {
    node?: Uint8Array;
    clockseq?: number;
    msecs?: number;
    nsecs?: number;
};
declare function v1(options?: Version1Options, buf?: undefined, offset?: number): string;
declare function v1(options: Version1Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV1State(state: V1State, now: number, rnds: Uint8Array): V1State;
export default v1;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v1ToV6.d.ts
================================================
export default function v1ToV6(uuid: string): string;
export default function v1ToV6(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v1ToV6.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parse_js_1 = require("./parse.js");
const stringify_js_1 = require("./stringify.js");
function v1ToV6(uuid) {
    const v1Bytes = typeof uuid === 'string' ? (0, parse_js_1.default)(uuid) : uuid;
    const v6Bytes = _v1ToV6(v1Bytes);
    return typeof uuid === 'string' ? (0, stringify_js_1.unsafeStringify)(v6Bytes) : v6Bytes;
}
exports.default = v1ToV6;
function _v1ToV6(v1Bytes) {
    return Uint8Array.of(((v1Bytes[6] & 0x0f) << 4) | ((v1Bytes[7] >> 4) & 0x0f), ((v1Bytes[7] & 0x0f) << 4) | ((v1Bytes[4] & 0xf0) >> 4), ((v1Bytes[4] & 0x0f) << 4) | ((v1Bytes[5] & 0xf0) >> 4), ((v1Bytes[5] & 0x0f) << 4) | ((v1Bytes[0] & 0xf0) >> 4), ((v1Bytes[0] & 0x0f) << 4) | ((v1Bytes[1] & 0xf0) >> 4), ((v1Bytes[1] & 0x0f) << 4) | ((v1Bytes[2] & 0xf0) >> 4), 0x60 | (v1Bytes[2] & 0x0f), v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/cjs-browser/v3.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v3 {
    var DNS: string;
    var URL: string;
}
export default v3;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v3.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URL = exports.DNS = void 0;
const md5_js_1 = require("./md5.js");
const v35_js_1 = require("./v35.js");
var v35_js_2 = require("./v35.js");
Object.defineProperty(exports, "DNS", { enumerable: true, get: function () { return v35_js_2.DNS; } });
Object.defineProperty(exports, "URL", { enumerable: true, get: function () { return v35_js_2.URL; } });
function v3(value, namespace, buf, offset) {
    return (0, v35_js_1.default)(0x30, md5_js_1.default, value, namespace, buf, offset);
}
v3.DNS = v35_js_1.DNS;
v3.URL = v35_js_1.URL;
exports.default = v3;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v35.d.ts
================================================
import { UUIDTypes } from './types.js';
export declare function stringToBytes(str: string): Uint8Array;
export declare const DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
export declare const URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
type HashFunction = (bytes: Uint8Array) => Uint8Array;
export default function v35(version: 0x30 | 0x50, hash: HashFunction, value: string | Uint8Array, namespace: UUIDTypes, buf?: Uint8Array, offset?: number): string | Uint8Array;
export {};


================================================
File: server/node_modules/uuid/dist/cjs-browser/v4.d.ts
================================================
import { Version4Options } from './types.js';
declare function v4(options?: Version4Options, buf?: undefined, offset?: number): string;
declare function v4(options: Version4Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v4;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v5.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v5 {
    var DNS: string;
    var URL: string;
}
export default v5;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v5.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URL = exports.DNS = void 0;
const sha1_js_1 = require("./sha1.js");
const v35_js_1 = require("./v35.js");
var v35_js_2 = require("./v35.js");
Object.defineProperty(exports, "DNS", { enumerable: true, get: function () { return v35_js_2.DNS; } });
Object.defineProperty(exports, "URL", { enumerable: true, get: function () { return v35_js_2.URL; } });
function v5(value, namespace, buf, offset) {
    return (0, v35_js_1.default)(0x50, sha1_js_1.default, value, namespace, buf, offset);
}
v5.DNS = v35_js_1.DNS;
v5.URL = v35_js_1.URL;
exports.default = v5;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v6.d.ts
================================================
import { Version6Options } from './types.js';
declare function v6(options?: Version6Options, buf?: undefined, offset?: number): string;
declare function v6(options: Version6Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v6;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v6.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stringify_js_1 = require("./stringify.js");
const v1_js_1 = require("./v1.js");
const v1ToV6_js_1 = require("./v1ToV6.js");
function v6(options, buf, offset) {
    options ??= {};
    offset ??= 0;
    let bytes = (0, v1_js_1.default)({ ...options, _v6: true }, new Uint8Array(16));
    bytes = (0, v1ToV6_js_1.default)(bytes);
    if (buf) {
        for (let i = 0; i < 16; i++) {
            buf[offset + i] = bytes[i];
        }
        return buf;
    }
    return (0, stringify_js_1.unsafeStringify)(bytes);
}
exports.default = v6;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v6ToV1.d.ts
================================================
export default function v6ToV1(uuid: string): string;
export default function v6ToV1(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/cjs-browser/v6ToV1.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parse_js_1 = require("./parse.js");
const stringify_js_1 = require("./stringify.js");
function v6ToV1(uuid) {
    const v6Bytes = typeof uuid === 'string' ? (0, parse_js_1.default)(uuid) : uuid;
    const v1Bytes = _v6ToV1(v6Bytes);
    return typeof uuid === 'string' ? (0, stringify_js_1.unsafeStringify)(v1Bytes) : v1Bytes;
}
exports.default = v6ToV1;
function _v6ToV1(v6Bytes) {
    return Uint8Array.of(((v6Bytes[3] & 0x0f) << 4) | ((v6Bytes[4] >> 4) & 0x0f), ((v6Bytes[4] & 0x0f) << 4) | ((v6Bytes[5] & 0xf0) >> 4), ((v6Bytes[5] & 0x0f) << 4) | (v6Bytes[6] & 0x0f), v6Bytes[7], ((v6Bytes[1] & 0x0f) << 4) | ((v6Bytes[2] & 0xf0) >> 4), ((v6Bytes[2] & 0x0f) << 4) | ((v6Bytes[3] & 0xf0) >> 4), 0x10 | ((v6Bytes[0] & 0xf0) >> 4), ((v6Bytes[0] & 0x0f) << 4) | ((v6Bytes[1] & 0xf0) >> 4), v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/cjs-browser/v7.d.ts
================================================
import { Version7Options } from './types.js';
type V7State = {
    msecs?: number;
    seq?: number;
};
declare function v7(options?: Version7Options, buf?: undefined, offset?: number): string;
declare function v7(options: Version7Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV7State(state: V7State, now: number, rnds: Uint8Array): V7State;
export default v7;


================================================
File: server/node_modules/uuid/dist/cjs-browser/validate.d.ts
================================================
declare function validate(uuid: unknown): boolean;
export default validate;


================================================
File: server/node_modules/uuid/dist/cjs-browser/validate.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const regex_js_1 = require("./regex.js");
function validate(uuid) {
    return typeof uuid === 'string' && regex_js_1.default.test(uuid);
}
exports.default = validate;


================================================
File: server/node_modules/uuid/dist/cjs-browser/version.d.ts
================================================
declare function version(uuid: string): number;
export default version;


================================================
File: server/node_modules/uuid/dist/cjs-browser/version.js
================================================
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const validate_js_1 = require("./validate.js");
function version(uuid) {
    if (!(0, validate_js_1.default)(uuid)) {
        throw TypeError('Invalid UUID');
    }
    return parseInt(uuid.slice(14, 15), 16);
}
exports.default = version;


================================================
File: server/node_modules/uuid/dist/esm/index.d.ts
================================================
export type * from './types.js';
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/esm/index.js
================================================
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/esm/max.d.ts
================================================
declare const _default: "ffffffff-ffff-ffff-ffff-ffffffffffff";
export default _default;


================================================
File: server/node_modules/uuid/dist/esm/max.js
================================================
export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';


================================================
File: server/node_modules/uuid/dist/esm/md5.d.ts
================================================
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
declare function md5(bytes: Uint8Array): Buffer;
export default md5;


================================================
File: server/node_modules/uuid/dist/esm/md5.js
================================================
import { createHash } from 'crypto';
function md5(bytes) {
    if (Array.isArray(bytes)) {
        bytes = Buffer.from(bytes);
    }
    else if (typeof bytes === 'string') {
        bytes = Buffer.from(bytes, 'utf8');
    }
    return createHash('md5').update(bytes).digest();
}
export default md5;


================================================
File: server/node_modules/uuid/dist/esm/native.d.ts
================================================
/// <reference types="node" resolution-mode="require"/>
import { randomUUID } from 'crypto';
declare const _default: {
    randomUUID: typeof randomUUID;
};
export default _default;


================================================
File: server/node_modules/uuid/dist/esm/native.js
================================================
import { randomUUID } from 'crypto';
export default { randomUUID };


================================================
File: server/node_modules/uuid/dist/esm/nil.d.ts
================================================
declare const _default: "00000000-0000-0000-0000-000000000000";
export default _default;


================================================
File: server/node_modules/uuid/dist/esm/nil.js
================================================
export default '00000000-0000-0000-0000-000000000000';


================================================
File: server/node_modules/uuid/dist/esm/parse.d.ts
================================================
declare function parse(uuid: string): Uint8Array;
export default parse;


================================================
File: server/node_modules/uuid/dist/esm/parse.js
================================================
import validate from './validate.js';
function parse(uuid) {
    if (!validate(uuid)) {
        throw TypeError('Invalid UUID');
    }
    let v;
    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);
}
export default parse;


================================================
File: server/node_modules/uuid/dist/esm/regex.d.ts
================================================
declare const _default: RegExp;
export default _default;


================================================
File: server/node_modules/uuid/dist/esm/regex.js
================================================
export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;


================================================
File: server/node_modules/uuid/dist/esm/rng.d.ts
================================================
export default function rng(): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm/rng.js
================================================
import { randomFillSync } from 'crypto';
const rnds8Pool = new Uint8Array(256);
let poolPtr = rnds8Pool.length;
export default function rng() {
    if (poolPtr > rnds8Pool.length - 16) {
        randomFillSync(rnds8Pool);
        poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, (poolPtr += 16));
}


================================================
File: server/node_modules/uuid/dist/esm/sha1.d.ts
================================================
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
declare function sha1(bytes: Uint8Array): Buffer;
export default sha1;


================================================
File: server/node_modules/uuid/dist/esm/sha1.js
================================================
import { createHash } from 'crypto';
function sha1(bytes) {
    if (Array.isArray(bytes)) {
        bytes = Buffer.from(bytes);
    }
    else if (typeof bytes === 'string') {
        bytes = Buffer.from(bytes, 'utf8');
    }
    return createHash('sha1').update(bytes).digest();
}
export default sha1;


================================================
File: server/node_modules/uuid/dist/esm/stringify.d.ts
================================================
export declare function unsafeStringify(arr: Uint8Array, offset?: number): string;
declare function stringify(arr: Uint8Array, offset?: number): string;
export default stringify;


================================================
File: server/node_modules/uuid/dist/esm/types.d.ts
================================================
export type UUIDTypes = string | Uint8Array;
export type Version1Options = {
    node?: Uint8Array;
    clockseq?: number;
    random?: Uint8Array;
    rng?: () => Uint8Array;
    msecs?: number;
    nsecs?: number;
    _v6?: boolean;
};
export type Version4Options = {
    random?: Uint8Array;
    rng?: () => Uint8Array;
};
export type Version6Options = Version1Options;
export type Version7Options = {
    random?: Uint8Array;
    msecs?: number;
    seq?: number;
    rng?: () => Uint8Array;
};


================================================
File: server/node_modules/uuid/dist/esm/types.js
================================================
export {};


================================================
File: server/node_modules/uuid/dist/esm/uuid-bin.d.ts
================================================
export {};


================================================
File: server/node_modules/uuid/dist/esm/v1.d.ts
================================================
import { Version1Options } from './types.js';
type V1State = {
    node?: Uint8Array;
    clockseq?: number;
    msecs?: number;
    nsecs?: number;
};
declare function v1(options?: Version1Options, buf?: undefined, offset?: number): string;
declare function v1(options: Version1Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV1State(state: V1State, now: number, rnds: Uint8Array): V1State;
export default v1;


================================================
File: server/node_modules/uuid/dist/esm/v1ToV6.d.ts
================================================
export default function v1ToV6(uuid: string): string;
export default function v1ToV6(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm/v1ToV6.js
================================================
import parse from './parse.js';
import { unsafeStringify } from './stringify.js';
export default function v1ToV6(uuid) {
    const v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;
    const v6Bytes = _v1ToV6(v1Bytes);
    return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;
}
function _v1ToV6(v1Bytes) {
    return Uint8Array.of(((v1Bytes[6] & 0x0f) << 4) | ((v1Bytes[7] >> 4) & 0x0f), ((v1Bytes[7] & 0x0f) << 4) | ((v1Bytes[4] & 0xf0) >> 4), ((v1Bytes[4] & 0x0f) << 4) | ((v1Bytes[5] & 0xf0) >> 4), ((v1Bytes[5] & 0x0f) << 4) | ((v1Bytes[0] & 0xf0) >> 4), ((v1Bytes[0] & 0x0f) << 4) | ((v1Bytes[1] & 0xf0) >> 4), ((v1Bytes[1] & 0x0f) << 4) | ((v1Bytes[2] & 0xf0) >> 4), 0x60 | (v1Bytes[2] & 0x0f), v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/esm/v3.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v3 {
    var DNS: string;
    var URL: string;
}
export default v3;


================================================
File: server/node_modules/uuid/dist/esm/v3.js
================================================
import md5 from './md5.js';
import v35, { DNS, URL } from './v35.js';
export { DNS, URL } from './v35.js';
function v3(value, namespace, buf, offset) {
    return v35(0x30, md5, value, namespace, buf, offset);
}
v3.DNS = DNS;
v3.URL = URL;
export default v3;


================================================
File: server/node_modules/uuid/dist/esm/v35.d.ts
================================================
import { UUIDTypes } from './types.js';
export declare function stringToBytes(str: string): Uint8Array;
export declare const DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
export declare const URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
type HashFunction = (bytes: Uint8Array) => Uint8Array;
export default function v35(version: 0x30 | 0x50, hash: HashFunction, value: string | Uint8Array, namespace: UUIDTypes, buf?: Uint8Array, offset?: number): string | Uint8Array;
export {};


================================================
File: server/node_modules/uuid/dist/esm/v4.d.ts
================================================
import { Version4Options } from './types.js';
declare function v4(options?: Version4Options, buf?: undefined, offset?: number): string;
declare function v4(options: Version4Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v4;


================================================
File: server/node_modules/uuid/dist/esm/v4.js
================================================
import native from './native.js';
import rng from './rng.js';
import { unsafeStringify } from './stringify.js';
function v4(options, buf, offset) {
    if (native.randomUUID && !buf && !options) {
        return native.randomUUID();
    }
    options = options || {};
    const rnds = options.random ?? options.rng?.() ?? rng();
    if (rnds.length < 16) {
        throw new Error('Random bytes length must be >= 16');
    }
    rnds[6] = (rnds[6] & 0x0f) | 0x40;
    rnds[8] = (rnds[8] & 0x3f) | 0x80;
    if (buf) {
        offset = offset || 0;
        if (offset < 0 || offset + 16 > buf.length) {
            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);
        }
        for (let i = 0; i < 16; ++i) {
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return unsafeStringify(rnds);
}
export default v4;


================================================
File: server/node_modules/uuid/dist/esm/v5.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v5 {
    var DNS: string;
    var URL: string;
}
export default v5;


================================================
File: server/node_modules/uuid/dist/esm/v5.js
================================================
import sha1 from './sha1.js';
import v35, { DNS, URL } from './v35.js';
export { DNS, URL } from './v35.js';
function v5(value, namespace, buf, offset) {
    return v35(0x50, sha1, value, namespace, buf, offset);
}
v5.DNS = DNS;
v5.URL = URL;
export default v5;


================================================
File: server/node_modules/uuid/dist/esm/v6.d.ts
================================================
import { Version6Options } from './types.js';
declare function v6(options?: Version6Options, buf?: undefined, offset?: number): string;
declare function v6(options: Version6Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v6;


================================================
File: server/node_modules/uuid/dist/esm/v6.js
================================================
import { unsafeStringify } from './stringify.js';
import v1 from './v1.js';
import v1ToV6 from './v1ToV6.js';
function v6(options, buf, offset) {
    options ??= {};
    offset ??= 0;
    let bytes = v1({ ...options, _v6: true }, new Uint8Array(16));
    bytes = v1ToV6(bytes);
    if (buf) {
        for (let i = 0; i < 16; i++) {
            buf[offset + i] = bytes[i];
        }
        return buf;
    }
    return unsafeStringify(bytes);
}
export default v6;


================================================
File: server/node_modules/uuid/dist/esm/v6ToV1.d.ts
================================================
export default function v6ToV1(uuid: string): string;
export default function v6ToV1(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm/v6ToV1.js
================================================
import parse from './parse.js';
import { unsafeStringify } from './stringify.js';
export default function v6ToV1(uuid) {
    const v6Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;
    const v1Bytes = _v6ToV1(v6Bytes);
    return typeof uuid === 'string' ? unsafeStringify(v1Bytes) : v1Bytes;
}
function _v6ToV1(v6Bytes) {
    return Uint8Array.of(((v6Bytes[3] & 0x0f) << 4) | ((v6Bytes[4] >> 4) & 0x0f), ((v6Bytes[4] & 0x0f) << 4) | ((v6Bytes[5] & 0xf0) >> 4), ((v6Bytes[5] & 0x0f) << 4) | (v6Bytes[6] & 0x0f), v6Bytes[7], ((v6Bytes[1] & 0x0f) << 4) | ((v6Bytes[2] & 0xf0) >> 4), ((v6Bytes[2] & 0x0f) << 4) | ((v6Bytes[3] & 0xf0) >> 4), 0x10 | ((v6Bytes[0] & 0xf0) >> 4), ((v6Bytes[0] & 0x0f) << 4) | ((v6Bytes[1] & 0xf0) >> 4), v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/esm/v7.d.ts
================================================
import { Version7Options } from './types.js';
type V7State = {
    msecs?: number;
    seq?: number;
};
declare function v7(options?: Version7Options, buf?: undefined, offset?: number): string;
declare function v7(options: Version7Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV7State(state: V7State, now: number, rnds: Uint8Array): V7State;
export default v7;


================================================
File: server/node_modules/uuid/dist/esm/validate.d.ts
================================================
declare function validate(uuid: unknown): boolean;
export default validate;


================================================
File: server/node_modules/uuid/dist/esm/validate.js
================================================
import REGEX from './regex.js';
function validate(uuid) {
    return typeof uuid === 'string' && REGEX.test(uuid);
}
export default validate;


================================================
File: server/node_modules/uuid/dist/esm/version.d.ts
================================================
declare function version(uuid: string): number;
export default version;


================================================
File: server/node_modules/uuid/dist/esm/version.js
================================================
import validate from './validate.js';
function version(uuid) {
    if (!validate(uuid)) {
        throw TypeError('Invalid UUID');
    }
    return parseInt(uuid.slice(14, 15), 16);
}
export default version;


================================================
File: server/node_modules/uuid/dist/esm/bin/uuid
================================================
#!/usr/bin/env node
import '../uuid-bin.js';


================================================
File: server/node_modules/uuid/dist/esm-browser/index.d.ts
================================================
export type * from './types.js';
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/esm-browser/index.js
================================================
export { default as MAX } from './max.js';
export { default as NIL } from './nil.js';
export { default as parse } from './parse.js';
export { default as stringify } from './stringify.js';
export { default as v1 } from './v1.js';
export { default as v1ToV6 } from './v1ToV6.js';
export { default as v3 } from './v3.js';
export { default as v4 } from './v4.js';
export { default as v5 } from './v5.js';
export { default as v6 } from './v6.js';
export { default as v6ToV1 } from './v6ToV1.js';
export { default as v7 } from './v7.js';
export { default as validate } from './validate.js';
export { default as version } from './version.js';


================================================
File: server/node_modules/uuid/dist/esm-browser/max.d.ts
================================================
declare const _default: "ffffffff-ffff-ffff-ffff-ffffffffffff";
export default _default;


================================================
File: server/node_modules/uuid/dist/esm-browser/max.js
================================================
export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';


================================================
File: server/node_modules/uuid/dist/esm-browser/md5.d.ts
================================================
declare function md5(bytes: Uint8Array): Uint8Array;
export default md5;


================================================
File: server/node_modules/uuid/dist/esm-browser/native.d.ts
================================================
declare const _default: {
    randomUUID: false | (() => `${string}-${string}-${string}-${string}-${string}`);
};
export default _default;


================================================
File: server/node_modules/uuid/dist/esm-browser/native.js
================================================
const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
export default { randomUUID };


================================================
File: server/node_modules/uuid/dist/esm-browser/nil.d.ts
================================================
declare const _default: "00000000-0000-0000-0000-000000000000";
export default _default;


================================================
File: server/node_modules/uuid/dist/esm-browser/nil.js
================================================
export default '00000000-0000-0000-0000-000000000000';


================================================
File: server/node_modules/uuid/dist/esm-browser/parse.d.ts
================================================
declare function parse(uuid: string): Uint8Array;
export default parse;


================================================
File: server/node_modules/uuid/dist/esm-browser/parse.js
================================================
import validate from './validate.js';
function parse(uuid) {
    if (!validate(uuid)) {
        throw TypeError('Invalid UUID');
    }
    let v;
    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);
}
export default parse;


================================================
File: server/node_modules/uuid/dist/esm-browser/regex.d.ts
================================================
declare const _default: RegExp;
export default _default;


================================================
File: server/node_modules/uuid/dist/esm-browser/regex.js
================================================
export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;


================================================
File: server/node_modules/uuid/dist/esm-browser/rng.d.ts
================================================
export default function rng(): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm-browser/rng.js
================================================
let getRandomValues;
const rnds8 = new Uint8Array(16);
export default function rng() {
    if (!getRandomValues) {
        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {
            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
        }
        getRandomValues = crypto.getRandomValues.bind(crypto);
    }
    return getRandomValues(rnds8);
}


================================================
File: server/node_modules/uuid/dist/esm-browser/sha1.d.ts
================================================
declare function sha1(bytes: Uint8Array): Uint8Array;
export default sha1;


================================================
File: server/node_modules/uuid/dist/esm-browser/stringify.d.ts
================================================
export declare function unsafeStringify(arr: Uint8Array, offset?: number): string;
declare function stringify(arr: Uint8Array, offset?: number): string;
export default stringify;


================================================
File: server/node_modules/uuid/dist/esm-browser/types.d.ts
================================================
export type UUIDTypes = string | Uint8Array;
export type Version1Options = {
    node?: Uint8Array;
    clockseq?: number;
    random?: Uint8Array;
    rng?: () => Uint8Array;
    msecs?: number;
    nsecs?: number;
    _v6?: boolean;
};
export type Version4Options = {
    random?: Uint8Array;
    rng?: () => Uint8Array;
};
export type Version6Options = Version1Options;
export type Version7Options = {
    random?: Uint8Array;
    msecs?: number;
    seq?: number;
    rng?: () => Uint8Array;
};


================================================
File: server/node_modules/uuid/dist/esm-browser/types.js
================================================
export {};


================================================
File: server/node_modules/uuid/dist/esm-browser/uuid-bin.d.ts
================================================
export {};


================================================
File: server/node_modules/uuid/dist/esm-browser/v1.d.ts
================================================
import { Version1Options } from './types.js';
type V1State = {
    node?: Uint8Array;
    clockseq?: number;
    msecs?: number;
    nsecs?: number;
};
declare function v1(options?: Version1Options, buf?: undefined, offset?: number): string;
declare function v1(options: Version1Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV1State(state: V1State, now: number, rnds: Uint8Array): V1State;
export default v1;


================================================
File: server/node_modules/uuid/dist/esm-browser/v1ToV6.d.ts
================================================
export default function v1ToV6(uuid: string): string;
export default function v1ToV6(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm-browser/v1ToV6.js
================================================
import parse from './parse.js';
import { unsafeStringify } from './stringify.js';
export default function v1ToV6(uuid) {
    const v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;
    const v6Bytes = _v1ToV6(v1Bytes);
    return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;
}
function _v1ToV6(v1Bytes) {
    return Uint8Array.of(((v1Bytes[6] & 0x0f) << 4) | ((v1Bytes[7] >> 4) & 0x0f), ((v1Bytes[7] & 0x0f) << 4) | ((v1Bytes[4] & 0xf0) >> 4), ((v1Bytes[4] & 0x0f) << 4) | ((v1Bytes[5] & 0xf0) >> 4), ((v1Bytes[5] & 0x0f) << 4) | ((v1Bytes[0] & 0xf0) >> 4), ((v1Bytes[0] & 0x0f) << 4) | ((v1Bytes[1] & 0xf0) >> 4), ((v1Bytes[1] & 0x0f) << 4) | ((v1Bytes[2] & 0xf0) >> 4), 0x60 | (v1Bytes[2] & 0x0f), v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/esm-browser/v3.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v3(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v3 {
    var DNS: string;
    var URL: string;
}
export default v3;


================================================
File: server/node_modules/uuid/dist/esm-browser/v3.js
================================================
import md5 from './md5.js';
import v35, { DNS, URL } from './v35.js';
export { DNS, URL } from './v35.js';
function v3(value, namespace, buf, offset) {
    return v35(0x30, md5, value, namespace, buf, offset);
}
v3.DNS = DNS;
v3.URL = URL;
export default v3;


================================================
File: server/node_modules/uuid/dist/esm-browser/v35.d.ts
================================================
import { UUIDTypes } from './types.js';
export declare function stringToBytes(str: string): Uint8Array;
export declare const DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
export declare const URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
type HashFunction = (bytes: Uint8Array) => Uint8Array;
export default function v35(version: 0x30 | 0x50, hash: HashFunction, value: string | Uint8Array, namespace: UUIDTypes, buf?: Uint8Array, offset?: number): string | Uint8Array;
export {};


================================================
File: server/node_modules/uuid/dist/esm-browser/v4.d.ts
================================================
import { Version4Options } from './types.js';
declare function v4(options?: Version4Options, buf?: undefined, offset?: number): string;
declare function v4(options: Version4Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v4;


================================================
File: server/node_modules/uuid/dist/esm-browser/v4.js
================================================
import native from './native.js';
import rng from './rng.js';
import { unsafeStringify } from './stringify.js';
function v4(options, buf, offset) {
    if (native.randomUUID && !buf && !options) {
        return native.randomUUID();
    }
    options = options || {};
    const rnds = options.random ?? options.rng?.() ?? rng();
    if (rnds.length < 16) {
        throw new Error('Random bytes length must be >= 16');
    }
    rnds[6] = (rnds[6] & 0x0f) | 0x40;
    rnds[8] = (rnds[8] & 0x3f) | 0x80;
    if (buf) {
        offset = offset || 0;
        if (offset < 0 || offset + 16 > buf.length) {
            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);
        }
        for (let i = 0; i < 16; ++i) {
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return unsafeStringify(rnds);
}
export default v4;


================================================
File: server/node_modules/uuid/dist/esm-browser/v5.d.ts
================================================
import { UUIDTypes } from './types.js';
export { DNS, URL } from './v35.js';
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf?: undefined, offset?: number): string;
declare function v5(value: string | Uint8Array, namespace: UUIDTypes, buf: Uint8Array, offset?: number): Uint8Array;
declare namespace v5 {
    var DNS: string;
    var URL: string;
}
export default v5;


================================================
File: server/node_modules/uuid/dist/esm-browser/v5.js
================================================
import sha1 from './sha1.js';
import v35, { DNS, URL } from './v35.js';
export { DNS, URL } from './v35.js';
function v5(value, namespace, buf, offset) {
    return v35(0x50, sha1, value, namespace, buf, offset);
}
v5.DNS = DNS;
v5.URL = URL;
export default v5;


================================================
File: server/node_modules/uuid/dist/esm-browser/v6.d.ts
================================================
import { Version6Options } from './types.js';
declare function v6(options?: Version6Options, buf?: undefined, offset?: number): string;
declare function v6(options: Version6Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export default v6;


================================================
File: server/node_modules/uuid/dist/esm-browser/v6.js
================================================
import { unsafeStringify } from './stringify.js';
import v1 from './v1.js';
import v1ToV6 from './v1ToV6.js';
function v6(options, buf, offset) {
    options ??= {};
    offset ??= 0;
    let bytes = v1({ ...options, _v6: true }, new Uint8Array(16));
    bytes = v1ToV6(bytes);
    if (buf) {
        for (let i = 0; i < 16; i++) {
            buf[offset + i] = bytes[i];
        }
        return buf;
    }
    return unsafeStringify(bytes);
}
export default v6;


================================================
File: server/node_modules/uuid/dist/esm-browser/v6ToV1.d.ts
================================================
export default function v6ToV1(uuid: string): string;
export default function v6ToV1(uuid: Uint8Array): Uint8Array;


================================================
File: server/node_modules/uuid/dist/esm-browser/v6ToV1.js
================================================
import parse from './parse.js';
import { unsafeStringify } from './stringify.js';
export default function v6ToV1(uuid) {
    const v6Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;
    const v1Bytes = _v6ToV1(v6Bytes);
    return typeof uuid === 'string' ? unsafeStringify(v1Bytes) : v1Bytes;
}
function _v6ToV1(v6Bytes) {
    return Uint8Array.of(((v6Bytes[3] & 0x0f) << 4) | ((v6Bytes[4] >> 4) & 0x0f), ((v6Bytes[4] & 0x0f) << 4) | ((v6Bytes[5] & 0xf0) >> 4), ((v6Bytes[5] & 0x0f) << 4) | (v6Bytes[6] & 0x0f), v6Bytes[7], ((v6Bytes[1] & 0x0f) << 4) | ((v6Bytes[2] & 0xf0) >> 4), ((v6Bytes[2] & 0x0f) << 4) | ((v6Bytes[3] & 0xf0) >> 4), 0x10 | ((v6Bytes[0] & 0xf0) >> 4), ((v6Bytes[0] & 0x0f) << 4) | ((v6Bytes[1] & 0xf0) >> 4), v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);
}


================================================
File: server/node_modules/uuid/dist/esm-browser/v7.d.ts
================================================
import { Version7Options } from './types.js';
type V7State = {
    msecs?: number;
    seq?: number;
};
declare function v7(options?: Version7Options, buf?: undefined, offset?: number): string;
declare function v7(options: Version7Options | undefined, buf: Uint8Array, offset?: number): Uint8Array;
export declare function updateV7State(state: V7State, now: number, rnds: Uint8Array): V7State;
export default v7;


================================================
File: server/node_modules/uuid/dist/esm-browser/validate.d.ts
================================================
declare function validate(uuid: unknown): boolean;
export default validate;


================================================
File: server/node_modules/uuid/dist/esm-browser/validate.js
================================================
import REGEX from './regex.js';
function validate(uuid) {
    return typeof uuid === 'string' && REGEX.test(uuid);
}
export default validate;


================================================
File: server/node_modules/uuid/dist/esm-browser/version.d.ts
================================================
declare function version(uuid: string): number;
export default version;


================================================
File: server/node_modules/uuid/dist/esm-browser/version.js
================================================
import validate from './validate.js';
function version(uuid) {
    if (!validate(uuid)) {
        throw TypeError('Invalid UUID');
    }
    return parseInt(uuid.slice(14, 15), 16);
}
export default version;


================================================
File: server/node_modules/vary/HISTORY.md
================================================
1.1.2 / 2017-09-23
==================

  * perf: improve header token parsing speed

1.1.1 / 2017-03-20
==================

  * perf: hoist regular expression

1.1.0 / 2015-09-29
==================

  * Only accept valid field names in the `field` argument
    - Ensures the resulting string is a valid HTTP header value

1.0.1 / 2015-07-08
==================

  * Fix setting empty header from empty `field`
  * perf: enable strict mode
  * perf: remove argument reassignments

1.0.0 / 2014-08-10
==================

  * Accept valid `Vary` header string as `field`
  * Add `vary.append` for low-level string manipulation
  * Move to `jshttp` orgainzation

0.1.0 / 2014-06-05
==================

  * Support array of fields to set

0.0.0 / 2014-06-04
==================

  * Initial release


================================================
File: server/node_modules/ws/browser.js
================================================
'use strict';

module.exports = function () {
  throw new Error(
    'ws does not work in the browser. Browser clients must use the native ' +
      'WebSocket object'
  );
};


================================================
File: server/node_modules/ws/index.js
================================================
'use strict';

const WebSocket = require('./lib/websocket');

WebSocket.createWebSocketStream = require('./lib/stream');
WebSocket.Server = require('./lib/websocket-server');
WebSocket.Receiver = require('./lib/receiver');
WebSocket.Sender = require('./lib/sender');

WebSocket.WebSocket = WebSocket;
WebSocket.WebSocketServer = WebSocket.Server;

module.exports = WebSocket;


================================================
File: server/node_modules/ws/wrapper.mjs
================================================
import createWebSocketStream from './lib/stream.js';
import Receiver from './lib/receiver.js';
import Sender from './lib/sender.js';
import WebSocket from './lib/websocket.js';
import WebSocketServer from './lib/websocket-server.js';

export { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };
export default WebSocket;


================================================
File: server/node_modules/ws/lib/constants.js
================================================
'use strict';

module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  EMPTY_BUFFER: Buffer.alloc(0),
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),
  kListener: Symbol('kListener'),
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  NOOP: () => {}
};


================================================
File: server/node_modules/xmlbuilder/package.json
================================================
{
  "name": "xmlbuilder",
  "version": "13.0.2",
  "keywords": [
    "xml",
    "xmlbuilder"
  ],
  "homepage": "http://github.com/oozcitak/xmlbuilder-js",
  "description": "An XML builder for node.js",
  "author": "Ozgur Ozcitak <oozcitak@gmail.com>",
  "contributors": [],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/oozcitak/xmlbuilder-js.git"
  },
  "bugs": {
    "url": "http://github.com/oozcitak/xmlbuilder-js/issues"
  },
  "main": "./lib/index",
  "typings": "./typings/index.d.ts",
  "engines": {
    "node": ">=6.0"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-coverage": "*",
    "coffeescript": "*",
    "coveralls": "*",
    "mocha": "*",
    "nyc": "*",
    "xpath": "*"
  },
  "scripts": {
    "prepublishOnly": "coffee -co lib src",
    "test": "nyc mocha \"test/**/*.coffee\""
  }
}


================================================
File: server/node_modules/xmlbuilder/.nycrc
================================================
{
    "reporter": ["lcov", "text"],
    "extension": [".coffee"],
    "sourceMap": false,
    "instrument": false
}

================================================
File: server/node_modules/xmlbuilder/lib/Derivation.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Restriction: 1,
    Extension: 2,
    Union: 4,
    List: 8
  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/DocumentPosition.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Disconnected: 1,
    Preceding: 2,
    Following: 4,
    Contains: 8,
    ContainedBy: 16,
    ImplementationSpecific: 32
  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/NodeType.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Element: 1,
    Attribute: 2,
    Text: 3,
    CData: 4,
    EntityReference: 5,
    EntityDeclaration: 6,
    ProcessingInstruction: 7,
    Comment: 8,
    Document: 9,
    DocType: 10,
    DocumentFragment: 11,
    NotationDeclaration: 12,
    // Numeric codes up to 200 are reserved to W3C for possible future use.
    // Following are types internal to this library:
    Declaration: 201,
    Raw: 202,
    AttributeDeclaration: 203,
    ElementDeclaration: 204,
    Dummy: 205
  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/OperationType.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Clones: 1,
    Imported: 2,
    Deleted: 3,
    Renamed: 4,
    Adopted: 5
  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/WriterState.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    None: 0,
    OpenTag: 1,
    InsideTag: 2,
    CloseTag: 3
  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  // Represents the error handler for DOM operations
  var XMLDOMErrorHandler;

  module.exports = XMLDOMErrorHandler = class XMLDOMErrorHandler {
    // Initializes a new instance of `XMLDOMErrorHandler`

    constructor() {}

    // Called on the error handler when an error occurs.

    // `error` the error message as a string
    handleError(error) {
      throw new Error(error);
    }

  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/XMLDocumentFragment.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDocumentFragment, XMLNode;

  XMLNode = require('./XMLNode');

  NodeType = require('./NodeType');

  // Represents a  CDATA node
  module.exports = XMLDocumentFragment = class XMLDocumentFragment extends XMLNode {
    // Initializes a new instance of `XMLDocumentFragment`

    constructor() {
      super(null);
      this.name = "#document-fragment";
      this.type = NodeType.DocumentFragment;
    }

  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/XMLTypeInfo.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  var Derivation, XMLTypeInfo;

  Derivation = require('./Derivation');

  // Represents a type referenced from element or attribute nodes.
  module.exports = XMLTypeInfo = class XMLTypeInfo {
    // Initializes a new instance of `XMLTypeInfo`

    constructor(typeName, typeNamespace) {
      this.typeName = typeName;
      this.typeNamespace = typeNamespace;
    }

    // DOM level 3 functions to be implemented later
    isDerivedFrom(typeNamespaceArg, typeNameArg, derivationMethod) {
      throw new Error("This DOM method is not implemented.");
    }

  };

}).call(this);


================================================
File: server/node_modules/xmlbuilder/lib/XMLUserDataHandler.js
================================================
// Generated by CoffeeScript 2.4.1
(function() {
  var OperationType, XMLUserDataHandler;

  OperationType = require('./OperationType');

  // Represents a handler that gets called when its associated
  // node object is being cloned, imported, or renamed.
  module.exports = XMLUserDataHandler = class XMLUserDataHandler {
    // Initializes a new instance of `XMLUserDataHandler`

    constructor() {}

    // Called whenever the node for which this handler is 
    // registered is imported or cloned.

    // `operation` type of operation that is being performed on the node
    // `key` the key for which this handler is being called
    // `data` the data for which this handler is being called
    // `src` the node being cloned, adopted, imported, or renamed
    //       This is null when the node is being deleted.
    // `dst` the node newly created if any, or null
    handle(operation, key, data, src, dst) {}

  };

}).call(this);


================================================
File: server/node_modules/.bin/mime
================================================
#!/usr/bin/env node

var mime = require('./mime.js');
var file = process.argv[2];
var type = mime.lookup(file);

process.stdout.write(type + '\n');



================================================
File: server/node_modules/.bin/mime
================================================
#!/usr/bin/env node

var mime = require('./mime.js');
var file = process.argv[2];
var type = mime.lookup(file);

process.stdout.write(type + '\n');



================================================
File: server/node_modules/.bin/uuid
================================================
#!/usr/bin/env node
import '../uuid-bin.js';


================================================
File: server/node_modules/.bin/uuid
================================================
#!/usr/bin/env node
import '../uuid-bin.js';


